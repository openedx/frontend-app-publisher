// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateCoursePage renders html correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseInfo={Object {}}
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    initialValues={Object {}}
    publisherUserInfo={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Create a New Course
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={Array []}
                  />
                </div>
              </div>
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Create a New Course
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Course",
          },
          "ref": null,
          "rendered": "Create a New Course",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={Array []}
                  />
                </div>
              </div>
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={Array []}
                  />
                </div>
              </div>
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                undefined,
                undefined,
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={Array []}
                    />
                  </div>
                </div>,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h2>
                      Create New Course
                    </h2>,
                    <div
                      className="col"
                    >
                      <ReduxForm
                        id="create-course-form"
                        initialValues={Object {}}
                        onSubmit={[Function]}
                        organizations={Array []}
                      />
                    </div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Create New Course",
                    },
                    "ref": null,
                    "rendered": "Create New Course",
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <ReduxForm
                          id="create-course-form"
                          initialValues={Object {}}
                          onSubmit={[Function]}
                          organizations={Array []}
                        />,
                        undefined,
                        undefined,
                      ],
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "id": "create-course-form",
                          "initialValues": Object {},
                          "isCreating": undefined,
                          "onSubmit": [Function],
                          "organizations": Array [],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      undefined,
                      undefined,
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Create a New Course
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={Array []}
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Create a New Course
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a New Course",
            },
            "ref": null,
            "rendered": "Create a New Course",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={Array []}
                    />
                  </div>
                </div>
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={Array []}
                    />
                  </div>
                </div>
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  undefined,
                  undefined,
                  <div>
                    <h2>
                      Create New Course
                    </h2>
                    <div
                      className="col"
                    >
                      <ReduxForm
                        id="create-course-form"
                        initialValues={Object {}}
                        onSubmit={[Function]}
                        organizations={Array []}
                      />
                    </div>
                  </div>,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                undefined,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h2>
                        Create New Course
                      </h2>,
                      <div
                        className="col"
                      >
                        <ReduxForm
                          id="create-course-form"
                          initialValues={Object {}}
                          onSubmit={[Function]}
                          organizations={Array []}
                        />
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Create New Course",
                      },
                      "ref": null,
                      "rendered": "Create New Course",
                      "type": "h2",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <ReduxForm
                            id="create-course-form"
                            initialValues={Object {}}
                            onSubmit={[Function]}
                            organizations={Array []}
                          />,
                          undefined,
                          undefined,
                        ],
                        "className": "col",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "create-course-form",
                            "initialValues": Object {},
                            "isCreating": undefined,
                            "onSubmit": [Function],
                            "organizations": Array [],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        undefined,
                        undefined,
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CreateCoursePage renders page correctly while fetching 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseInfo={
      Object {
        "data": Object {},
        "error": null,
      }
    }
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    initialValues={Object {}}
    publisherUserInfo={
      Object {
        "error": null,
        "isFetching": true,
        "organizations": Array [],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Create a New Course
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <LoadingSpinner
                message="Loading…"
              />
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Create a New Course
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Course",
          },
          "ref": null,
          "rendered": "Create a New Course",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <LoadingSpinner
                message="Loading…"
              />
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <LoadingSpinner
                message="Loading…"
              />
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <LoadingSpinner
                  message="Loading…"
                />,
                null,
                false,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "message": "Loading…",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              null,
              false,
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Create a New Course
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <LoadingSpinner
                  message="Loading…"
                />
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Create a New Course
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a New Course",
            },
            "ref": null,
            "rendered": "Create a New Course",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <LoadingSpinner
                  message="Loading…"
                />
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <LoadingSpinner
                  message="Loading…"
                />
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <LoadingSpinner
                    message="Loading…"
                  />,
                  null,
                  false,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "message": "Loading…",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                null,
                false,
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CreateCoursePage renders page correctly with course create error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseInfo={
      Object {
        "data": Object {},
        "error": "Fail",
      }
    }
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    initialValues={Object {}}
    publisherUserInfo={
      Object {
        "error": null,
        "isFetching": false,
        "organizations": Array [
          Object {
            "key": "edx",
            "name": "edX",
          },
          Object {
            "key": "edx2",
            "name": "edX2",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Create a New Course
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                  <StatusAlert
                    alertType="danger"
                    className={Array []}
                    dismissible={false}
                    iconClassNames={Array []}
                    id="create-error"
                    message="Fail"
                    onClose={[Function]}
                    title="Course Create Form failed to load: "
                  />
                </div>
              </div>
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Create a New Course
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Course",
          },
          "ref": null,
          "rendered": "Create a New Course",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                  <StatusAlert
                    alertType="danger"
                    className={Array []}
                    dismissible={false}
                    iconClassNames={Array []}
                    id="create-error"
                    message="Fail"
                    onClose={[Function]}
                    title="Course Create Form failed to load: "
                  />
                </div>
              </div>
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                  <StatusAlert
                    alertType="danger"
                    className={Array []}
                    dismissible={false}
                    iconClassNames={Array []}
                    id="create-error"
                    message="Fail"
                    onClose={[Function]}
                    title="Course Create Form failed to load: "
                  />
                </div>
              </div>
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                null,
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                    <StatusAlert
                      alertType="danger"
                      className={Array []}
                      dismissible={false}
                      iconClassNames={Array []}
                      id="create-error"
                      message="Fail"
                      onClose={[Function]}
                      title="Course Create Form failed to load: "
                    />
                  </div>
                </div>,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              false,
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h2>
                      Create New Course
                    </h2>,
                    <div
                      className="col"
                    >
                      <ReduxForm
                        id="create-course-form"
                        initialValues={Object {}}
                        onSubmit={[Function]}
                        organizations={
                          Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ]
                        }
                      />
                      <StatusAlert
                        alertType="danger"
                        className={Array []}
                        dismissible={false}
                        iconClassNames={Array []}
                        id="create-error"
                        message="Fail"
                        onClose={[Function]}
                        title="Course Create Form failed to load: "
                      />
                    </div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Create New Course",
                    },
                    "ref": null,
                    "rendered": "Create New Course",
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <ReduxForm
                          id="create-course-form"
                          initialValues={Object {}}
                          onSubmit={[Function]}
                          organizations={
                            Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ]
                          }
                        />,
                        undefined,
                        <StatusAlert
                          alertType="danger"
                          className={Array []}
                          dismissible={false}
                          iconClassNames={Array []}
                          id="create-error"
                          message="Fail"
                          onClose={[Function]}
                          title="Course Create Form failed to load: "
                        />,
                      ],
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "id": "create-course-form",
                          "initialValues": Object {},
                          "isCreating": undefined,
                          "onSubmit": [Function],
                          "organizations": Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      undefined,
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "alertType": "danger",
                          "className": Array [],
                          "dismissible": false,
                          "iconClassNames": Array [],
                          "id": "create-error",
                          "message": "Fail",
                          "onClose": [Function],
                          "title": "Course Create Form failed to load: ",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Create a New Course
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                    <StatusAlert
                      alertType="danger"
                      className={Array []}
                      dismissible={false}
                      iconClassNames={Array []}
                      id="create-error"
                      message="Fail"
                      onClose={[Function]}
                      title="Course Create Form failed to load: "
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Create a New Course
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a New Course",
            },
            "ref": null,
            "rendered": "Create a New Course",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                    <StatusAlert
                      alertType="danger"
                      className={Array []}
                      dismissible={false}
                      iconClassNames={Array []}
                      id="create-error"
                      message="Fail"
                      onClose={[Function]}
                      title="Course Create Form failed to load: "
                    />
                  </div>
                </div>
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                    <StatusAlert
                      alertType="danger"
                      className={Array []}
                      dismissible={false}
                      iconClassNames={Array []}
                      id="create-error"
                      message="Fail"
                      onClose={[Function]}
                      title="Course Create Form failed to load: "
                    />
                  </div>
                </div>
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  null,
                  <div>
                    <h2>
                      Create New Course
                    </h2>
                    <div
                      className="col"
                    >
                      <ReduxForm
                        id="create-course-form"
                        initialValues={Object {}}
                        onSubmit={[Function]}
                        organizations={
                          Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ]
                        }
                      />
                      <StatusAlert
                        alertType="danger"
                        className={Array []}
                        dismissible={false}
                        iconClassNames={Array []}
                        id="create-error"
                        message="Fail"
                        onClose={[Function]}
                        title="Course Create Form failed to load: "
                      />
                    </div>
                  </div>,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                false,
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h2>
                        Create New Course
                      </h2>,
                      <div
                        className="col"
                      >
                        <ReduxForm
                          id="create-course-form"
                          initialValues={Object {}}
                          onSubmit={[Function]}
                          organizations={
                            Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ]
                          }
                        />
                        <StatusAlert
                          alertType="danger"
                          className={Array []}
                          dismissible={false}
                          iconClassNames={Array []}
                          id="create-error"
                          message="Fail"
                          onClose={[Function]}
                          title="Course Create Form failed to load: "
                        />
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Create New Course",
                      },
                      "ref": null,
                      "rendered": "Create New Course",
                      "type": "h2",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <ReduxForm
                            id="create-course-form"
                            initialValues={Object {}}
                            onSubmit={[Function]}
                            organizations={
                              Array [
                                Object {
                                  "key": "edx",
                                  "name": "edX",
                                },
                                Object {
                                  "key": "edx2",
                                  "name": "edX2",
                                },
                              ]
                            }
                          />,
                          undefined,
                          <StatusAlert
                            alertType="danger"
                            className={Array []}
                            dismissible={false}
                            iconClassNames={Array []}
                            id="create-error"
                            message="Fail"
                            onClose={[Function]}
                            title="Course Create Form failed to load: "
                          />,
                        ],
                        "className": "col",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "create-course-form",
                            "initialValues": Object {},
                            "isCreating": undefined,
                            "onSubmit": [Function],
                            "organizations": Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        undefined,
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "alertType": "danger",
                            "className": Array [],
                            "dismissible": false,
                            "iconClassNames": Array [],
                            "id": "create-error",
                            "message": "Fail",
                            "onClose": [Function],
                            "title": "Course Create Form failed to load: ",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CreateCoursePage renders page correctly with course create success 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseInfo={
      Object {
        "data": Object {
          "uuid": "11111111-1111-1111-1111-111111111111",
        },
        "error": null,
      }
    }
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    initialValues={Object {}}
    publisherUserInfo={
      Object {
        "error": null,
        "isFetching": false,
        "organizations": Array [
          Object {
            "key": "edx",
            "name": "edX",
          },
          Object {
            "key": "edx2",
            "name": "edX2",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Create a New Course
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Create a New Course
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Course",
          },
          "ref": null,
          "rendered": "Create a New Course",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                null,
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              false,
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h2>
                      Create New Course
                    </h2>,
                    <div
                      className="col"
                    >
                      <ReduxForm
                        id="create-course-form"
                        initialValues={Object {}}
                        onSubmit={[Function]}
                        organizations={
                          Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ]
                        }
                      />
                    </div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Create New Course",
                    },
                    "ref": null,
                    "rendered": "Create New Course",
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <ReduxForm
                          id="create-course-form"
                          initialValues={Object {}}
                          onSubmit={[Function]}
                          organizations={
                            Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ]
                          }
                        />,
                        undefined,
                        null,
                      ],
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "id": "create-course-form",
                          "initialValues": Object {},
                          "isCreating": undefined,
                          "onSubmit": [Function],
                          "organizations": Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      undefined,
                      null,
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Create a New Course
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Create a New Course
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a New Course",
            },
            "ref": null,
            "rendered": "Create a New Course",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  null,
                  <div>
                    <h2>
                      Create New Course
                    </h2>
                    <div
                      className="col"
                    >
                      <ReduxForm
                        id="create-course-form"
                        initialValues={Object {}}
                        onSubmit={[Function]}
                        organizations={
                          Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ]
                        }
                      />
                    </div>
                  </div>,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                false,
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h2>
                        Create New Course
                      </h2>,
                      <div
                        className="col"
                      >
                        <ReduxForm
                          id="create-course-form"
                          initialValues={Object {}}
                          onSubmit={[Function]}
                          organizations={
                            Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ]
                          }
                        />
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Create New Course",
                      },
                      "ref": null,
                      "rendered": "Create New Course",
                      "type": "h2",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <ReduxForm
                            id="create-course-form"
                            initialValues={Object {}}
                            onSubmit={[Function]}
                            organizations={
                              Array [
                                Object {
                                  "key": "edx",
                                  "name": "edX",
                                },
                                Object {
                                  "key": "edx2",
                                  "name": "edX2",
                                },
                              ]
                            }
                          />,
                          undefined,
                          null,
                        ],
                        "className": "col",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "create-course-form",
                            "initialValues": Object {},
                            "isCreating": undefined,
                            "onSubmit": [Function],
                            "organizations": Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        undefined,
                        null,
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CreateCoursePage renders page correctly with no publisherUserInfo 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseInfo={
      Object {
        "data": Object {},
        "error": null,
      }
    }
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    initialValues={Object {}}
    publisherUserInfo={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "alertType": "danger",
      "className": Array [],
      "dismissible": false,
      "iconClassNames": Array [],
      "id": "error",
      "message": "User information unavailable",
      "onClose": [Function],
      "title": "Course Create Form failed to load: ",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "alertType": "danger",
        "className": Array [],
        "dismissible": false,
        "iconClassNames": Array [],
        "id": "error",
        "message": "User information unavailable",
        "onClose": [Function],
        "title": "Course Create Form failed to load: ",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CreateCoursePage renders page correctly with org error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseInfo={
      Object {
        "data": Object {},
        "error": null,
      }
    }
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    initialValues={Object {}}
    publisherUserInfo={
      Object {
        "error": "Fail",
        "isFetching": false,
        "organizations": Array [
          Object {
            "key": "edx",
            "name": "edX",
          },
          Object {
            "key": "edx2",
            "name": "edX2",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Create a New Course
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="user-info-error"
                message="Fail"
                onClose={[Function]}
                title="Course Create Form failed to load: "
              />
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Create a New Course
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Course",
          },
          "ref": null,
          "rendered": "Create a New Course",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="user-info-error"
                message="Fail"
                onClose={[Function]}
                title="Course Create Form failed to load: "
              />
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="user-info-error"
                message="Fail"
                onClose={[Function]}
                title="Course Create Form failed to load: "
              />
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="user-info-error"
                  message="Fail"
                  onClose={[Function]}
                  title="Course Create Form failed to load: "
                />,
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "alertType": "danger",
                  "className": Array [],
                  "dismissible": false,
                  "iconClassNames": Array [],
                  "id": "user-info-error",
                  "message": "Fail",
                  "onClose": [Function],
                  "title": "Course Create Form failed to load: ",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h2>
                      Create New Course
                    </h2>,
                    <div
                      className="col"
                    >
                      <ReduxForm
                        id="create-course-form"
                        initialValues={Object {}}
                        onSubmit={[Function]}
                        organizations={
                          Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ]
                        }
                      />
                    </div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Create New Course",
                    },
                    "ref": null,
                    "rendered": "Create New Course",
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <ReduxForm
                          id="create-course-form"
                          initialValues={Object {}}
                          onSubmit={[Function]}
                          organizations={
                            Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ]
                          }
                        />,
                        undefined,
                        null,
                      ],
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "id": "create-course-form",
                          "initialValues": Object {},
                          "isCreating": undefined,
                          "onSubmit": [Function],
                          "organizations": Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      undefined,
                      null,
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Create a New Course
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="user-info-error"
                  message="Fail"
                  onClose={[Function]}
                  title="Course Create Form failed to load: "
                />
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Create a New Course
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a New Course",
            },
            "ref": null,
            "rendered": "Create a New Course",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="user-info-error"
                  message="Fail"
                  onClose={[Function]}
                  title="Course Create Form failed to load: "
                />
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="user-info-error"
                  message="Fail"
                  onClose={[Function]}
                  title="Course Create Form failed to load: "
                />
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  <StatusAlert
                    alertType="danger"
                    className={Array []}
                    dismissible={false}
                    iconClassNames={Array []}
                    id="user-info-error"
                    message="Fail"
                    onClose={[Function]}
                    title="Course Create Form failed to load: "
                  />,
                  <div>
                    <h2>
                      Create New Course
                    </h2>
                    <div
                      className="col"
                    >
                      <ReduxForm
                        id="create-course-form"
                        initialValues={Object {}}
                        onSubmit={[Function]}
                        organizations={
                          Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ]
                        }
                      />
                    </div>
                  </div>,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "alertType": "danger",
                    "className": Array [],
                    "dismissible": false,
                    "iconClassNames": Array [],
                    "id": "user-info-error",
                    "message": "Fail",
                    "onClose": [Function],
                    "title": "Course Create Form failed to load: ",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h2>
                        Create New Course
                      </h2>,
                      <div
                        className="col"
                      >
                        <ReduxForm
                          id="create-course-form"
                          initialValues={Object {}}
                          onSubmit={[Function]}
                          organizations={
                            Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ]
                          }
                        />
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Create New Course",
                      },
                      "ref": null,
                      "rendered": "Create New Course",
                      "type": "h2",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <ReduxForm
                            id="create-course-form"
                            initialValues={Object {}}
                            onSubmit={[Function]}
                            organizations={
                              Array [
                                Object {
                                  "key": "edx",
                                  "name": "edX",
                                },
                                Object {
                                  "key": "edx2",
                                  "name": "edX2",
                                },
                              ]
                            }
                          />,
                          undefined,
                          null,
                        ],
                        "className": "col",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "create-course-form",
                            "initialValues": Object {},
                            "isCreating": undefined,
                            "onSubmit": [Function],
                            "organizations": Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        undefined,
                        null,
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CreateCoursePage renders page correctly with organizations 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateCoursePage
    courseInfo={
      Object {
        "data": Object {},
        "error": null,
      }
    }
    createCourse={[Function]}
    fetchOrganizations={[Function]}
    initialValues={Object {}}
    publisherUserInfo={
      Object {
        "error": null,
        "isFetching": false,
        "organizations": Array [
          Object {
            "key": "edx",
            "name": "edX",
          },
          Object {
            "key": "edx2",
            "name": "edX2",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Create a New Course
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Create a New Course
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Course",
          },
          "ref": null,
          "rendered": "Create a New Course",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <div>
                <h2>
                  Create New Course
                </h2>
                <div
                  className="col"
                >
                  <ReduxForm
                    id="create-course-form"
                    initialValues={Object {}}
                    onSubmit={[Function]}
                    organizations={
                      Array [
                        Object {
                          "key": "edx",
                          "name": "edX",
                        },
                        Object {
                          "key": "edx2",
                          "name": "edX2",
                        },
                      ]
                    }
                  />
                </div>
              </div>
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                null,
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              false,
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h2>
                      Create New Course
                    </h2>,
                    <div
                      className="col"
                    >
                      <ReduxForm
                        id="create-course-form"
                        initialValues={Object {}}
                        onSubmit={[Function]}
                        organizations={
                          Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ]
                        }
                      />
                    </div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Create New Course",
                    },
                    "ref": null,
                    "rendered": "Create New Course",
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <ReduxForm
                          id="create-course-form"
                          initialValues={Object {}}
                          onSubmit={[Function]}
                          organizations={
                            Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ]
                          }
                        />,
                        undefined,
                        null,
                      ],
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "id": "create-course-form",
                          "initialValues": Object {},
                          "isCreating": undefined,
                          "onSubmit": [Function],
                          "organizations": Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      undefined,
                      null,
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Create a New Course
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Create a New Course
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a New Course",
            },
            "ref": null,
            "rendered": "Create a New Course",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <div>
                  <h2>
                    Create New Course
                  </h2>
                  <div
                    className="col"
                  >
                    <ReduxForm
                      id="create-course-form"
                      initialValues={Object {}}
                      onSubmit={[Function]}
                      organizations={
                        Array [
                          Object {
                            "key": "edx",
                            "name": "edX",
                          },
                          Object {
                            "key": "edx2",
                            "name": "edX2",
                          },
                        ]
                      }
                    />
                  </div>
                </div>
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  null,
                  <div>
                    <h2>
                      Create New Course
                    </h2>
                    <div
                      className="col"
                    >
                      <ReduxForm
                        id="create-course-form"
                        initialValues={Object {}}
                        onSubmit={[Function]}
                        organizations={
                          Array [
                            Object {
                              "key": "edx",
                              "name": "edX",
                            },
                            Object {
                              "key": "edx2",
                              "name": "edX2",
                            },
                          ]
                        }
                      />
                    </div>
                  </div>,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                false,
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h2>
                        Create New Course
                      </h2>,
                      <div
                        className="col"
                      >
                        <ReduxForm
                          id="create-course-form"
                          initialValues={Object {}}
                          onSubmit={[Function]}
                          organizations={
                            Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ]
                          }
                        />
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Create New Course",
                      },
                      "ref": null,
                      "rendered": "Create New Course",
                      "type": "h2",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <ReduxForm
                            id="create-course-form"
                            initialValues={Object {}}
                            onSubmit={[Function]}
                            organizations={
                              Array [
                                Object {
                                  "key": "edx",
                                  "name": "edX",
                                },
                                Object {
                                  "key": "edx2",
                                  "name": "edX2",
                                },
                              ]
                            }
                          />,
                          undefined,
                          null,
                        ],
                        "className": "col",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "create-course-form",
                            "initialValues": Object {},
                            "isCreating": undefined,
                            "onSubmit": [Function],
                            "organizations": Array [
                              Object {
                                "key": "edx",
                                "name": "edX",
                              },
                              Object {
                                "key": "edx2",
                                "name": "edX2",
                              },
                            ],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        undefined,
                        null,
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
