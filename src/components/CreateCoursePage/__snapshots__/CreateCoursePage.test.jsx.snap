// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateCoursePage renders html correctly 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Create a New Course
    </title>
  </HelmetWrapper>
  <ConfirmationModal
    body="This will create a new course in studio. Confirm that your course number is correct, as it cannot be changed later."
    buttonLabel="Create"
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title="Create a New Course?"
  />
  <PageContainer
    className=""
    wide={false}
  >
    <div>
      <ReduxForm
        courseOptions={Object {}}
        courseRunOptions={Object {}}
        currentFormValues={Object {}}
        id="create-course-form"
        initialValues={Object {}}
        onSubmit={[Function]}
        organizations={Array []}
      />
    </div>
  </PageContainer>
</Fragment>
`;

exports[`CreateCoursePage renders page correctly while fetching 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Create a New Course
    </title>
  </HelmetWrapper>
  <ConfirmationModal
    body="This will create a new course in studio. Confirm that your course number is correct, as it cannot be changed later."
    buttonLabel="Create"
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title="Create a New Course?"
  />
  <PageContainer
    className=""
    wide={false}
  >
    <LoadingSpinner
      message="Loadingâ€¦"
    />
  </PageContainer>
</Fragment>
`;

exports[`CreateCoursePage renders page correctly with course create error 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Create a New Course
    </title>
  </HelmetWrapper>
  <ConfirmationModal
    body="This will create a new course in studio. Confirm that your course number is correct, as it cannot be changed later."
    buttonLabel="Create"
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title="Create a New Course?"
  />
  <PageContainer
    className=""
    wide={false}
  >
    <div>
      <ReduxForm
        courseOptions={Object {}}
        courseRunOptions={Object {}}
        currentFormValues={Object {}}
        id="create-course-form"
        initialValues={Object {}}
        isCreating={false}
        onSubmit={[Function]}
        organizations={
          Array [
            Object {
              "key": "edx",
              "name": "edX",
            },
            Object {
              "key": "edx2",
              "name": "edX2",
            },
          ]
        }
      />
      <StatusAlert
        alertType="danger"
        className=""
        dismissible={false}
        iconClassNames={Array []}
        id="create-error"
        message={
          Array [
            "Fail",
            <br />,
          ]
        }
        onClose={[Function]}
        title={null}
      />
    </div>
  </PageContainer>
</Fragment>
`;

exports[`CreateCoursePage renders page correctly with course create in progress 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Create a New Course
    </title>
  </HelmetWrapper>
  <ConfirmationModal
    body="This will create a new course in studio. Confirm that your course number is correct, as it cannot be changed later."
    buttonLabel="Create"
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title="Create a New Course?"
  />
  <PageContainer
    className=""
    wide={false}
  >
    <div>
      <ReduxForm
        courseOptions={Object {}}
        courseRunOptions={Object {}}
        currentFormValues={Object {}}
        id="create-course-form"
        initialValues={Object {}}
        isCreating={true}
        onSubmit={[Function]}
        organizations={
          Array [
            Object {
              "key": "edx",
              "name": "edX",
            },
            Object {
              "key": "edx2",
              "name": "edX2",
            },
          ]
        }
      />
    </div>
  </PageContainer>
</Fragment>
`;

exports[`CreateCoursePage renders page correctly with course create success 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Create a New Course
    </title>
  </HelmetWrapper>
  <ConfirmationModal
    body="This will create a new course in studio. Confirm that your course number is correct, as it cannot be changed later."
    buttonLabel="Create"
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title="Create a New Course?"
  />
  <PageContainer
    className=""
    wide={false}
  >
    <div>
      <ReduxForm
        courseOptions={Object {}}
        courseRunOptions={Object {}}
        currentFormValues={Object {}}
        id="create-course-form"
        initialValues={Object {}}
        isCreating={false}
        onSubmit={[Function]}
        organizations={
          Array [
            Object {
              "key": "edx",
              "name": "edX",
            },
            Object {
              "key": "edx2",
              "name": "edX2",
            },
          ]
        }
      />
    </div>
  </PageContainer>
</Fragment>
`;

exports[`CreateCoursePage renders page correctly with no publisherUserInfo 1`] = `
<StatusAlert
  alertType="danger"
  className=""
  dismissible={false}
  iconClassNames={Array []}
  id="error"
  message="User information unavailable"
  onClose={[Function]}
  title="Course Create Form failed to load: "
/>
`;

exports[`CreateCoursePage renders page correctly with org error 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Create a New Course
    </title>
  </HelmetWrapper>
  <ConfirmationModal
    body="This will create a new course in studio. Confirm that your course number is correct, as it cannot be changed later."
    buttonLabel="Create"
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title="Create a New Course?"
  />
  <PageContainer
    className=""
    wide={false}
  >
    <div>
      <ReduxForm
        courseOptions={Object {}}
        courseRunOptions={Object {}}
        currentFormValues={Object {}}
        id="create-course-form"
        initialValues={Object {}}
        isCreating={false}
        onSubmit={[Function]}
        organizations={
          Array [
            Object {
              "key": "edx",
              "name": "edX",
            },
            Object {
              "key": "edx2",
              "name": "edX2",
            },
          ]
        }
      />
      <StatusAlert
        alertType="danger"
        className=""
        dismissible={false}
        iconClassNames={Array []}
        id="create-error"
        message={
          Array [
            "Fail",
            <br />,
          ]
        }
        onClose={[Function]}
        title={null}
      />
    </div>
  </PageContainer>
</Fragment>
`;

exports[`CreateCoursePage renders page correctly with organizations 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Create a New Course
    </title>
  </HelmetWrapper>
  <ConfirmationModal
    body="This will create a new course in studio. Confirm that your course number is correct, as it cannot be changed later."
    buttonLabel="Create"
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title="Create a New Course?"
  />
  <PageContainer
    className=""
    wide={false}
  >
    <div>
      <ReduxForm
        courseOptions={Object {}}
        courseRunOptions={Object {}}
        currentFormValues={Object {}}
        id="create-course-form"
        initialValues={Object {}}
        isCreating={false}
        onSubmit={[Function]}
        organizations={
          Array [
            Object {
              "key": "edx",
              "name": "edX",
            },
            Object {
              "key": "edx2",
              "name": "edX2",
            },
          ]
        }
      />
    </div>
  </PageContainer>
</Fragment>
`;
