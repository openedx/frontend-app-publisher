// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RichEditor shows a rich text editor and an error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RichEditor
    id="rich-text-editor-test"
    input={
      Object {
        "onChange": [Function],
        "value": null,
      }
    }
    label="Rich Text Editor Test"
    maxChars={500}
    meta={
      Object {
        "error": "Required",
        "touched": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="form-group mt-3"
          id="rich-text-editor-test"
        >
          Rich Text Editor Test
        </div>,
        <StatusAlert
          alertType="danger"
          className={Array []}
          dismissible={false}
          iconClassNames={Array []}
          message="Required"
          onClose={[Function]}
          title={null}
        />,
        <div
          aria-labelledby="rich-text-editor-test"
        >
          <Editor
            init={
              Object {
                "branding": false,
                "menubar": false,
                "plugins": "legacyoutput link lists",
                "statusbar": false,
                "toolbar": "undo redo | bold italic underline | bullist numlist | link",
              }
            }
            initialValue={null}
            onChange={[Function]}
            onInit={[Function]}
            onKeyUp={[Function]}
          />
          <span>
            Recommended character limit (including spaces) is
      500. 500 characters remaining.
          </span>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Rich Text Editor Test",
          "className": "form-group mt-3",
          "id": "rich-text-editor-test",
        },
        "ref": null,
        "rendered": "Rich Text Editor Test",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "alertType": "danger",
          "className": Array [],
          "dismissible": false,
          "iconClassNames": Array [],
          "message": "Required",
          "onClose": [Function],
          "title": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "aria-labelledby": "rich-text-editor-test",
          "children": Array [
            <Editor
              init={
                Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                }
              }
              initialValue={null}
              onChange={[Function]}
              onInit={[Function]}
              onKeyUp={[Function]}
            />,
            <span>
              Recommended character limit (including spaces) is
      500. 500 characters remaining.
            </span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "init": Object {
                "branding": false,
                "menubar": false,
                "plugins": "legacyoutput link lists",
                "statusbar": false,
                "toolbar": "undo redo | bold italic underline | bullist numlist | link",
              },
              "initialValue": null,
              "onChange": [Function],
              "onInit": [Function],
              "onKeyUp": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Recommended character limit (including spaces) is
      500. 500 characters remaining.",
            },
            "ref": null,
            "rendered": "Recommended character limit (including spaces) is
      500. 500 characters remaining.",
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="form-group mt-3"
            id="rich-text-editor-test"
          >
            Rich Text Editor Test
          </div>,
          <StatusAlert
            alertType="danger"
            className={Array []}
            dismissible={false}
            iconClassNames={Array []}
            message="Required"
            onClose={[Function]}
            title={null}
          />,
          <div
            aria-labelledby="rich-text-editor-test"
          >
            <Editor
              init={
                Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                }
              }
              initialValue={null}
              onChange={[Function]}
              onInit={[Function]}
              onKeyUp={[Function]}
            />
            <span>
              Recommended character limit (including spaces) is
      500. 500 characters remaining.
            </span>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Rich Text Editor Test",
            "className": "form-group mt-3",
            "id": "rich-text-editor-test",
          },
          "ref": null,
          "rendered": "Rich Text Editor Test",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "alertType": "danger",
            "className": Array [],
            "dismissible": false,
            "iconClassNames": Array [],
            "message": "Required",
            "onClose": [Function],
            "title": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-labelledby": "rich-text-editor-test",
            "children": Array [
              <Editor
                init={
                  Object {
                    "branding": false,
                    "menubar": false,
                    "plugins": "legacyoutput link lists",
                    "statusbar": false,
                    "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                  }
                }
                initialValue={null}
                onChange={[Function]}
                onInit={[Function]}
                onKeyUp={[Function]}
              />,
              <span>
                Recommended character limit (including spaces) is
      500. 500 characters remaining.
              </span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "init": Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                },
                "initialValue": null,
                "onChange": [Function],
                "onInit": [Function],
                "onKeyUp": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Recommended character limit (including spaces) is
      500. 500 characters remaining.",
              },
              "ref": null,
              "rendered": "Recommended character limit (including spaces) is
      500. 500 characters remaining.",
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`RichEditor shows a rich text editor with default text value 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RichEditor
    id="rich-text-editor-test"
    input={
      Object {
        "onChange": [Function],
        "value": "<p>Prior text<p>",
      }
    }
    label={
      <strong>
        Rich Text Editor Test
      </strong>
    }
    maxChars={2500}
    meta={
      Object {
        "error": "",
        "touched": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="form-group mt-3"
          id="rich-text-editor-test"
        >
          <strong>
            Rich Text Editor Test
          </strong>
        </div>,
        false,
        <div
          aria-labelledby="rich-text-editor-test"
        >
          <Editor
            init={
              Object {
                "branding": false,
                "menubar": false,
                "plugins": "legacyoutput link lists",
                "statusbar": false,
                "toolbar": "undo redo | bold italic underline | bullist numlist | link",
              }
            }
            initialValue="<p>Prior text<p>"
            onChange={[Function]}
            onInit={[Function]}
            onKeyUp={[Function]}
          />
          <span>
            Recommended character limit (including spaces) is
      2500. 2500 characters remaining.
          </span>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <strong>
            Rich Text Editor Test
          </strong>,
          "className": "form-group mt-3",
          "id": "rich-text-editor-test",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Rich Text Editor Test",
          },
          "ref": null,
          "rendered": "Rich Text Editor Test",
          "type": "strong",
        },
        "type": "div",
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "aria-labelledby": "rich-text-editor-test",
          "children": Array [
            <Editor
              init={
                Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                }
              }
              initialValue="<p>Prior text<p>"
              onChange={[Function]}
              onInit={[Function]}
              onKeyUp={[Function]}
            />,
            <span>
              Recommended character limit (including spaces) is
      2500. 2500 characters remaining.
            </span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "init": Object {
                "branding": false,
                "menubar": false,
                "plugins": "legacyoutput link lists",
                "statusbar": false,
                "toolbar": "undo redo | bold italic underline | bullist numlist | link",
              },
              "initialValue": "<p>Prior text<p>",
              "onChange": [Function],
              "onInit": [Function],
              "onKeyUp": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Recommended character limit (including spaces) is
      2500. 2500 characters remaining.",
            },
            "ref": null,
            "rendered": "Recommended character limit (including spaces) is
      2500. 2500 characters remaining.",
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="form-group mt-3"
            id="rich-text-editor-test"
          >
            <strong>
              Rich Text Editor Test
            </strong>
          </div>,
          false,
          <div
            aria-labelledby="rich-text-editor-test"
          >
            <Editor
              init={
                Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                }
              }
              initialValue="<p>Prior text<p>"
              onChange={[Function]}
              onInit={[Function]}
              onKeyUp={[Function]}
            />
            <span>
              Recommended character limit (including spaces) is
      2500. 2500 characters remaining.
            </span>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <strong>
              Rich Text Editor Test
            </strong>,
            "className": "form-group mt-3",
            "id": "rich-text-editor-test",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Rich Text Editor Test",
            },
            "ref": null,
            "rendered": "Rich Text Editor Test",
            "type": "strong",
          },
          "type": "div",
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-labelledby": "rich-text-editor-test",
            "children": Array [
              <Editor
                init={
                  Object {
                    "branding": false,
                    "menubar": false,
                    "plugins": "legacyoutput link lists",
                    "statusbar": false,
                    "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                  }
                }
                initialValue="<p>Prior text<p>"
                onChange={[Function]}
                onInit={[Function]}
                onKeyUp={[Function]}
              />,
              <span>
                Recommended character limit (including spaces) is
      2500. 2500 characters remaining.
              </span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "init": Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                },
                "initialValue": "<p>Prior text<p>",
                "onChange": [Function],
                "onInit": [Function],
                "onKeyUp": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Recommended character limit (including spaces) is
      2500. 2500 characters remaining.",
              },
              "ref": null,
              "rendered": "Recommended character limit (including spaces) is
      2500. 2500 characters remaining.",
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`RichEditor shows a rich text editor with no default text value 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RichEditor
    id="rich-text-editor-test"
    input={
      Object {
        "onChange": [Function],
        "value": null,
      }
    }
    label="Rich Text Editor Test"
    maxChars={500}
    meta={
      Object {
        "error": "",
        "touched": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="form-group mt-3"
          id="rich-text-editor-test"
        >
          Rich Text Editor Test
        </div>,
        false,
        <div
          aria-labelledby="rich-text-editor-test"
        >
          <Editor
            init={
              Object {
                "branding": false,
                "menubar": false,
                "plugins": "legacyoutput link lists",
                "statusbar": false,
                "toolbar": "undo redo | bold italic underline | bullist numlist | link",
              }
            }
            initialValue={null}
            onChange={[Function]}
            onInit={[Function]}
            onKeyUp={[Function]}
          />
          <span>
            Recommended character limit (including spaces) is
      500. 500 characters remaining.
          </span>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Rich Text Editor Test",
          "className": "form-group mt-3",
          "id": "rich-text-editor-test",
        },
        "ref": null,
        "rendered": "Rich Text Editor Test",
        "type": "div",
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "aria-labelledby": "rich-text-editor-test",
          "children": Array [
            <Editor
              init={
                Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                }
              }
              initialValue={null}
              onChange={[Function]}
              onInit={[Function]}
              onKeyUp={[Function]}
            />,
            <span>
              Recommended character limit (including spaces) is
      500. 500 characters remaining.
            </span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "init": Object {
                "branding": false,
                "menubar": false,
                "plugins": "legacyoutput link lists",
                "statusbar": false,
                "toolbar": "undo redo | bold italic underline | bullist numlist | link",
              },
              "initialValue": null,
              "onChange": [Function],
              "onInit": [Function],
              "onKeyUp": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Recommended character limit (including spaces) is
      500. 500 characters remaining.",
            },
            "ref": null,
            "rendered": "Recommended character limit (including spaces) is
      500. 500 characters remaining.",
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="form-group mt-3"
            id="rich-text-editor-test"
          >
            Rich Text Editor Test
          </div>,
          false,
          <div
            aria-labelledby="rich-text-editor-test"
          >
            <Editor
              init={
                Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                }
              }
              initialValue={null}
              onChange={[Function]}
              onInit={[Function]}
              onKeyUp={[Function]}
            />
            <span>
              Recommended character limit (including spaces) is
      500. 500 characters remaining.
            </span>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Rich Text Editor Test",
            "className": "form-group mt-3",
            "id": "rich-text-editor-test",
          },
          "ref": null,
          "rendered": "Rich Text Editor Test",
          "type": "div",
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-labelledby": "rich-text-editor-test",
            "children": Array [
              <Editor
                init={
                  Object {
                    "branding": false,
                    "menubar": false,
                    "plugins": "legacyoutput link lists",
                    "statusbar": false,
                    "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                  }
                }
                initialValue={null}
                onChange={[Function]}
                onInit={[Function]}
                onKeyUp={[Function]}
              />,
              <span>
                Recommended character limit (including spaces) is
      500. 500 characters remaining.
              </span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "init": Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                },
                "initialValue": null,
                "onChange": [Function],
                "onInit": [Function],
                "onKeyUp": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Recommended character limit (including spaces) is
      500. 500 characters remaining.",
              },
              "ref": null,
              "rendered": "Recommended character limit (including spaces) is
      500. 500 characters remaining.",
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`RichEditor shows a rich text editor with no maxChars 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RichEditor
    id="rich-text-editor-test"
    input={
      Object {
        "onChange": [Function],
        "value": "<p>Prior text<p>",
      }
    }
    label={
      <strong>
        Rich Text Editor Test
      </strong>
    }
    maxChars={null}
    meta={
      Object {
        "error": "",
        "touched": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="form-group mt-3"
          id="rich-text-editor-test"
        >
          <strong>
            Rich Text Editor Test
          </strong>
        </div>,
        false,
        <div
          aria-labelledby="rich-text-editor-test"
        >
          <Editor
            init={
              Object {
                "branding": false,
                "menubar": false,
                "plugins": "legacyoutput link lists",
                "statusbar": false,
                "toolbar": "undo redo | bold italic underline | bullist numlist | link",
              }
            }
            initialValue="<p>Prior text<p>"
            onChange={[Function]}
            onInit={[Function]}
            onKeyUp={[Function]}
          />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <strong>
            Rich Text Editor Test
          </strong>,
          "className": "form-group mt-3",
          "id": "rich-text-editor-test",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Rich Text Editor Test",
          },
          "ref": null,
          "rendered": "Rich Text Editor Test",
          "type": "strong",
        },
        "type": "div",
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "aria-labelledby": "rich-text-editor-test",
          "children": Array [
            <Editor
              init={
                Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                }
              }
              initialValue="<p>Prior text<p>"
              onChange={[Function]}
              onInit={[Function]}
              onKeyUp={[Function]}
            />,
            null,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "init": Object {
                "branding": false,
                "menubar": false,
                "plugins": "legacyoutput link lists",
                "statusbar": false,
                "toolbar": "undo redo | bold italic underline | bullist numlist | link",
              },
              "initialValue": "<p>Prior text<p>",
              "onChange": [Function],
              "onInit": [Function],
              "onKeyUp": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          null,
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="form-group mt-3"
            id="rich-text-editor-test"
          >
            <strong>
              Rich Text Editor Test
            </strong>
          </div>,
          false,
          <div
            aria-labelledby="rich-text-editor-test"
          >
            <Editor
              init={
                Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                }
              }
              initialValue="<p>Prior text<p>"
              onChange={[Function]}
              onInit={[Function]}
              onKeyUp={[Function]}
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <strong>
              Rich Text Editor Test
            </strong>,
            "className": "form-group mt-3",
            "id": "rich-text-editor-test",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Rich Text Editor Test",
            },
            "ref": null,
            "rendered": "Rich Text Editor Test",
            "type": "strong",
          },
          "type": "div",
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-labelledby": "rich-text-editor-test",
            "children": Array [
              <Editor
                init={
                  Object {
                    "branding": false,
                    "menubar": false,
                    "plugins": "legacyoutput link lists",
                    "statusbar": false,
                    "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                  }
                }
                initialValue="<p>Prior text<p>"
                onChange={[Function]}
                onInit={[Function]}
                onKeyUp={[Function]}
              />,
              null,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "init": Object {
                  "branding": false,
                  "menubar": false,
                  "plugins": "legacyoutput link lists",
                  "statusbar": false,
                  "toolbar": "undo redo | bold italic underline | bullist numlist | link",
                },
                "initialValue": "<p>Prior text<p>",
                "onChange": [Function],
                "onInit": [Function],
                "onKeyUp": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            null,
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
