// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StaffList renders a list of staff members and an autocomplete input 1`] = `
<div
  tabIndex="-1"
>
  <DragDropContext
    onDragEnd={[Function]}
  >
    <Connect(Droppable)
      direction="vertical"
      droppableId="StaffList"
      ignoreContainerClipping={false}
      isCombineEnabled={false}
      isDropDisabled={false}
      type="DEFAULT"
    >
      <Component />
    </Connect(Droppable)>
  </DragDropContext>
  <label
    className="w-100"
    htmlFor="staff-search"
    id="label-staff-search"
    onKeyDown={[Function]}
  >
    <strong>
      Search or add new instructor:
    </strong>
    <Autosuggest
      alwaysRenderSuggestions={false}
      focusInputOnSuggestionClick={true}
      getSuggestionValue={[Function]}
      highlightFirstSuggestion={false}
      id="staff-search"
      inputProps={
        Object {
          "className": "form-control",
          "disabled": false,
          "onChange": [Function],
          "placeholder": "",
          "type": "text",
          "value": "",
        }
      }
      multiSection={false}
      onSuggestionSelected={[Function]}
      onSuggestionsClearRequested={[Function]}
      onSuggestionsFetchRequested={[Function]}
      renderSuggestion={[Function]}
      renderSuggestionsContainer={[Function]}
      shouldRenderSuggestions={[Function]}
      suggestions={Array []}
      theme={
        Object {
          "container": "react-autosuggest__container",
          "containerOpen": "react-autosuggest__container--open",
          "input": "react-autosuggest__input",
          "inputFocused": "react-autosuggest__input--focused",
          "inputOpen": "react-autosuggest__input--open",
          "sectionContainer": "react-autosuggest__section-container",
          "sectionContainerFirst": "react-autosuggest__section-container--first",
          "sectionTitle": "react-autosuggest__section-title",
          "suggestion": "react-autosuggest__suggestion",
          "suggestionFirst": "react-autosuggest__suggestion--first",
          "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
          "suggestionsContainer": "react-autosuggest__suggestions-container",
          "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
          "suggestionsList": "react-autosuggest__suggestions-list",
        }
      }
    />
  </label>
</div>
`;

exports[`StaffList renders correctly with an error after failed submission 1`] = `
<div
  tabIndex="-1"
>
  <StatusAlert
    alertType="danger"
    className=""
    dismissible={false}
    iconClassNames={Array []}
    message="This field is required"
    onClose={[Function]}
    title={null}
  />
  <DragDropContext
    onDragEnd={[Function]}
  >
    <Connect(Droppable)
      direction="vertical"
      droppableId="StaffList"
      ignoreContainerClipping={false}
      isCombineEnabled={false}
      isDropDisabled={false}
      type="DEFAULT"
    >
      <Component />
    </Connect(Droppable)>
  </DragDropContext>
  <label
    className="w-100"
    htmlFor="staff-search"
    id="label-staff-search"
    onKeyDown={[Function]}
  >
    <strong>
      Search or add new instructor:
    </strong>
    <Autosuggest
      alwaysRenderSuggestions={false}
      focusInputOnSuggestionClick={true}
      getSuggestionValue={[Function]}
      highlightFirstSuggestion={false}
      id="staff-search"
      inputProps={
        Object {
          "className": "form-control",
          "disabled": false,
          "onChange": [Function],
          "placeholder": "",
          "type": "text",
          "value": "",
        }
      }
      multiSection={false}
      onSuggestionSelected={[Function]}
      onSuggestionsClearRequested={[Function]}
      onSuggestionsFetchRequested={[Function]}
      renderSuggestion={[Function]}
      renderSuggestionsContainer={[Function]}
      shouldRenderSuggestions={[Function]}
      suggestions={Array []}
      theme={
        Object {
          "container": "react-autosuggest__container",
          "containerOpen": "react-autosuggest__container--open",
          "input": "react-autosuggest__input",
          "inputFocused": "react-autosuggest__input--focused",
          "inputOpen": "react-autosuggest__input--open",
          "sectionContainer": "react-autosuggest__section-container",
          "sectionContainerFirst": "react-autosuggest__section-container--first",
          "sectionTitle": "react-autosuggest__section-title",
          "suggestion": "react-autosuggest__suggestion",
          "suggestionFirst": "react-autosuggest__suggestion--first",
          "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
          "suggestionsContainer": "react-autosuggest__suggestions-container",
          "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
          "suggestionsList": "react-autosuggest__suggestions-list",
        }
      }
    />
  </label>
</div>
`;

exports[`StaffList renders correctly with referred props 1`] = `
<div
  tabIndex="-1"
>
  <DragDropContext
    onDragEnd={[Function]}
  >
    <Connect(Droppable)
      direction="vertical"
      droppableId="StaffList"
      ignoreContainerClipping={false}
      isCombineEnabled={false}
      isDropDisabled={false}
      type="DEFAULT"
    >
      <Component />
    </Connect(Droppable)>
  </DragDropContext>
  <label
    className="w-100"
    htmlFor="staff-search"
    id="label-staff-search"
    onKeyDown={[Function]}
  >
    <strong>
      Search or add new instructor:
    </strong>
    <Autosuggest
      alwaysRenderSuggestions={false}
      focusInputOnSuggestionClick={true}
      getSuggestionValue={[Function]}
      highlightFirstSuggestion={false}
      id="staff-search"
      inputProps={
        Object {
          "className": "form-control",
          "disabled": false,
          "onChange": [Function],
          "placeholder": "",
          "type": "text",
          "value": "",
        }
      }
      multiSection={false}
      onSuggestionSelected={[Function]}
      onSuggestionsClearRequested={[Function]}
      onSuggestionsFetchRequested={[Function]}
      renderSuggestion={[Function]}
      renderSuggestionsContainer={[Function]}
      shouldRenderSuggestions={[Function]}
      suggestions={Array []}
      theme={
        Object {
          "container": "react-autosuggest__container",
          "containerOpen": "react-autosuggest__container--open",
          "input": "react-autosuggest__input",
          "inputFocused": "react-autosuggest__input--focused",
          "inputOpen": "react-autosuggest__input--open",
          "sectionContainer": "react-autosuggest__section-container",
          "sectionContainerFirst": "react-autosuggest__section-container--first",
          "sectionTitle": "react-autosuggest__section-title",
          "suggestion": "react-autosuggest__suggestion",
          "suggestionFirst": "react-autosuggest__suggestion--first",
          "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
          "suggestionsContainer": "react-autosuggest__suggestions-container",
          "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
          "suggestionsList": "react-autosuggest__suggestions-list",
        }
      }
    />
  </label>
</div>
`;
