// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CourseTable displays table and button when not blacklisted 1`] = `
<PageContainer
  className=""
  wide={true}
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Publisher | undefined
    </title>
  </HelmetWrapper>
  <div
    className="row"
  >
    <div
      className="col-2 float-left"
    >
      <ButtonToolbar
        className="mb-3"
        leftJustify={true}
      >
        <Link
          replace={false}
          to="/courses/new"
        >
          <button
            className="btn btn-primary"
            type="button"
          >
            New Course
          </button>
        </Link>
      </ButtonToolbar>
    </div>
    <div
      className="col-5 float-right pt-1"
    >
      <StateManager
        closeMenuOnSelect={false}
        defaultInputValue=""
        defaultMenuIsOpen={false}
        defaultValue={null}
        isMulti={true}
        maxMenuHeight="30vh"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "Course Run Statuses",
              "options": Array [
                Object {
                  "color": "#e7e7e7",
                  "label": "In review",
                  "value": "in_review",
                },
                Object {
                  "color": "#008100",
                  "label": "Published",
                  "value": "published",
                },
                Object {
                  "color": "#0075b4",
                  "label": "Scheduled",
                  "value": "reviewed",
                },
                Object {
                  "color": "#E2C018",
                  "label": "Unsubmitted",
                  "value": "unsubmitted",
                },
              ],
            },
          ]
        }
        placeholder="Filters..."
        styles={
          Object {
            "multiValue": [Function],
            "multiValueLabel": [Function],
            "option": [Function],
          }
        }
        value={Array []}
      />
    </div>
    <div
      className="col-5 float-right"
    >
      <SearchField
        inputLabel="Search:"
        onBlur={[Function]}
        onChange={[Function]}
        onClear={[Function]}
        onFocus={[Function]}
        onSubmit={[Function]}
        placeholder=""
        screenReaderText={
          Object {
            "clearButton": "Clear search",
            "searchButton": "Submit search",
          }
        }
        value=""
      />
    </div>
  </div>
  <withRouter(Connect(TableComponent))
    className="courses"
    columns={
      Array [
        Object {
          "columnSortable": true,
          "key": "title",
          "label": "Course Name",
        },
        Object {
          "columnSortable": true,
          "key": "number",
          "label": "Course Number",
        },
        Object {
          "columnSortable": false,
          "key": "course_run_statuses",
          "label": "States",
        },
        Object {
          "columnSortable": false,
          "key": "course_editor_names",
          "label": "Course Editors",
        },
      ]
    }
    formatData={[Function]}
    tableSortable={true}
  />
</PageContainer>
`;

exports[`CourseTable displays table and button when user has no orgs 1`] = `
<PageContainer
  className=""
  wide={true}
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Publisher | undefined
    </title>
  </HelmetWrapper>
  <div
    className="row"
  >
    <div
      className="col-2 float-left"
    >
      <ButtonToolbar
        className="mb-3"
        leftJustify={true}
      >
        <Link
          replace={false}
          to="/courses/new"
        >
          <button
            className="btn btn-primary"
            type="button"
          >
            New Course
          </button>
        </Link>
      </ButtonToolbar>
    </div>
    <div
      className="col-5 float-right pt-1"
    >
      <StateManager
        closeMenuOnSelect={false}
        defaultInputValue=""
        defaultMenuIsOpen={false}
        defaultValue={null}
        isMulti={true}
        maxMenuHeight="30vh"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "Course Run Statuses",
              "options": Array [
                Object {
                  "color": "#e7e7e7",
                  "label": "In review",
                  "value": "in_review",
                },
                Object {
                  "color": "#008100",
                  "label": "Published",
                  "value": "published",
                },
                Object {
                  "color": "#0075b4",
                  "label": "Scheduled",
                  "value": "reviewed",
                },
                Object {
                  "color": "#E2C018",
                  "label": "Unsubmitted",
                  "value": "unsubmitted",
                },
              ],
            },
          ]
        }
        placeholder="Filters..."
        styles={
          Object {
            "multiValue": [Function],
            "multiValueLabel": [Function],
            "option": [Function],
          }
        }
        value={Array []}
      />
    </div>
    <div
      className="col-5 float-right"
    >
      <SearchField
        inputLabel="Search:"
        onBlur={[Function]}
        onChange={[Function]}
        onClear={[Function]}
        onFocus={[Function]}
        onSubmit={[Function]}
        placeholder=""
        screenReaderText={
          Object {
            "clearButton": "Clear search",
            "searchButton": "Submit search",
          }
        }
        value=""
      />
    </div>
  </div>
  <withRouter(Connect(TableComponent))
    className="courses"
    columns={
      Array [
        Object {
          "columnSortable": true,
          "key": "title",
          "label": "Course Name",
        },
        Object {
          "columnSortable": true,
          "key": "number",
          "label": "Course Number",
        },
        Object {
          "columnSortable": false,
          "key": "course_run_statuses",
          "label": "States",
        },
        Object {
          "columnSortable": false,
          "key": "course_editor_names",
          "label": "Course Editors",
        },
      ]
    }
    formatData={[Function]}
    tableSortable={true}
  />
</PageContainer>
`;

exports[`CourseTable hides table and button when blacklisted 1`] = `
<PageContainer
  className=""
  wide={true}
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Publisher | undefined
    </title>
  </HelmetWrapper>
  <div
    className="row"
  >
    <div
      className="col-2 float-left"
    >
      <ButtonToolbar
        className="mb-3"
        leftJustify={true}
      >
        <Link
          replace={false}
          to="/courses/new"
        >
          <button
            className="btn btn-primary"
            type="button"
          >
            New Course
          </button>
        </Link>
      </ButtonToolbar>
    </div>
    <div
      className="col-5 float-right pt-1"
    >
      <StateManager
        closeMenuOnSelect={false}
        defaultInputValue=""
        defaultMenuIsOpen={false}
        defaultValue={null}
        isMulti={true}
        maxMenuHeight="30vh"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "Course Run Statuses",
              "options": Array [
                Object {
                  "color": "#e7e7e7",
                  "label": "In review",
                  "value": "in_review",
                },
                Object {
                  "color": "#008100",
                  "label": "Published",
                  "value": "published",
                },
                Object {
                  "color": "#0075b4",
                  "label": "Scheduled",
                  "value": "reviewed",
                },
                Object {
                  "color": "#E2C018",
                  "label": "Unsubmitted",
                  "value": "unsubmitted",
                },
              ],
            },
          ]
        }
        placeholder="Filters..."
        styles={
          Object {
            "multiValue": [Function],
            "multiValueLabel": [Function],
            "option": [Function],
          }
        }
        value={Array []}
      />
    </div>
    <div
      className="col-5 float-right"
    >
      <SearchField
        inputLabel="Search:"
        onBlur={[Function]}
        onChange={[Function]}
        onClear={[Function]}
        onFocus={[Function]}
        onSubmit={[Function]}
        placeholder=""
        screenReaderText={
          Object {
            "clearButton": "Clear search",
            "searchButton": "Submit search",
          }
        }
        value=""
      />
    </div>
  </div>
  <withRouter(Connect(TableComponent))
    className="courses"
    columns={
      Array [
        Object {
          "columnSortable": true,
          "key": "title",
          "label": "Course Name",
        },
        Object {
          "columnSortable": true,
          "key": "number",
          "label": "Course Number",
        },
        Object {
          "columnSortable": false,
          "key": "course_run_statuses",
          "label": "States",
        },
        Object {
          "columnSortable": false,
          "key": "course_editor_names",
          "label": "Course Editors",
        },
      ]
    }
    formatData={[Function]}
    tableSortable={true}
  />
</PageContainer>
`;

exports[`CourseTable shows a table 1`] = `
<PageContainer
  className=""
  wide={true}
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Publisher | undefined
    </title>
  </HelmetWrapper>
  <div
    className="row"
  >
    <div
      className="col-2 float-left"
    >
      <ButtonToolbar
        className="mb-3"
        leftJustify={true}
      >
        <Link
          replace={false}
          to="/courses/new"
        >
          <button
            className="btn btn-primary"
            type="button"
          >
            New Course
          </button>
        </Link>
      </ButtonToolbar>
    </div>
    <div
      className="col-5 float-right pt-1"
    >
      <StateManager
        closeMenuOnSelect={false}
        defaultInputValue=""
        defaultMenuIsOpen={false}
        defaultValue={null}
        isMulti={true}
        maxMenuHeight="30vh"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "Course Run Statuses",
              "options": Array [
                Object {
                  "color": "#e7e7e7",
                  "label": "In review",
                  "value": "in_review",
                },
                Object {
                  "color": "#008100",
                  "label": "Published",
                  "value": "published",
                },
                Object {
                  "color": "#0075b4",
                  "label": "Scheduled",
                  "value": "reviewed",
                },
                Object {
                  "color": "#E2C018",
                  "label": "Unsubmitted",
                  "value": "unsubmitted",
                },
              ],
            },
          ]
        }
        placeholder="Filters..."
        styles={
          Object {
            "multiValue": [Function],
            "multiValueLabel": [Function],
            "option": [Function],
          }
        }
        value={Array []}
      />
    </div>
    <div
      className="col-5 float-right"
    >
      <SearchField
        inputLabel="Search:"
        onBlur={[Function]}
        onChange={[Function]}
        onClear={[Function]}
        onFocus={[Function]}
        onSubmit={[Function]}
        placeholder=""
        screenReaderText={
          Object {
            "clearButton": "Clear search",
            "searchButton": "Submit search",
          }
        }
        value=""
      />
    </div>
  </div>
  <withRouter(Connect(TableComponent))
    className="courses"
    columns={
      Array [
        Object {
          "columnSortable": true,
          "key": "title",
          "label": "Course Name",
        },
        Object {
          "columnSortable": true,
          "key": "number",
          "label": "Course Number",
        },
        Object {
          "columnSortable": false,
          "key": "course_run_statuses",
          "label": "States",
        },
        Object {
          "columnSortable": false,
          "key": "course_editor_names",
          "label": "Course Editors",
        },
      ]
    }
    formatData={[Function]}
    tableSortable={true}
  />
</PageContainer>
`;
