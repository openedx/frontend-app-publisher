// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateCourseRunForm renders html correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseCreateCourseRunForm
    handleSubmit={[Function]}
    initialValues={
      Object {
        "course": "edx+test101",
      }
    }
    pristine={true}
    submitting={false}
    title="Test Course"
    uuid="00000000-0000-0000-0000-000000000001"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="create-course-run-form row"
      >
        <div
          className="col"
        >
          <h2>
            Create a new course run
          </h2>
          <hr />
          <div
            className="row"
          >
            <div
              className="col-12"
              id="course"
            >
              <strong>
                Course
              </strong>
            </div>
            <div
              className="col-12"
            >
              <Link
                replace={false}
                to="/courses/00000000-0000-0000-0000-000000000001/edit/"
              >
                Test Course
              </Link>
            </div>
          </div>
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  <strong>
                    Start date
                  </strong>
                  <span
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="start"
              required={true}
              type="date"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  <strong>
                    End date
                  </strong>
                  <span
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="end"
              required={true}
              type="date"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                replace={false}
                to="/courses/00000000-0000-0000-0000-000000000001/edit/"
              >
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                >
                  Cancel
                </button>
              </Link>
              <button
                className="btn btn-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="col"
        >
          <h2>
            Create a new course run
          </h2>
          <hr />
          <div
            className="row"
          >
            <div
              className="col-12"
              id="course"
            >
              <strong>
                Course
              </strong>
            </div>
            <div
              className="col-12"
            >
              <Link
                replace={false}
                to="/courses/00000000-0000-0000-0000-000000000001/edit/"
              >
                Test Course
              </Link>
            </div>
          </div>
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  <strong>
                    Start date
                  </strong>
                  <span
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="start"
              required={true}
              type="date"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  <strong>
                    End date
                  </strong>
                  <span
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="end"
              required={true}
              type="date"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                replace={false}
                to="/courses/00000000-0000-0000-0000-000000000001/edit/"
              >
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                >
                  Cancel
                </button>
              </Link>
              <button
                className="btn btn-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>,
        "className": "create-course-run-form row",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2>
              Create a new course run
            </h2>,
            <hr />,
            <div
              className="row"
            >
              <div
                className="col-12"
                id="course"
              >
                <strong>
                  Course
                </strong>
              </div>
              <div
                className="col-12"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  Test Course
                </Link>
              </div>
            </div>,
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      Start date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="start"
                required={true}
                type="date"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      End date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="end"
                required={true}
                type="date"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  <button
                    className="btn btn-outline-primary"
                    disabled={false}
                  >
                    Cancel
                  </button>
                </Link>
                <button
                  className="btn btn-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>,
          ],
          "className": "col",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a new course run",
            },
            "ref": null,
            "rendered": "Create a new course run",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "hr",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col-12"
                  id="course"
                >
                  <strong>
                    Course
                  </strong>
                </div>,
                <div
                  className="col-12"
                >
                  <Link
                    replace={false}
                    to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                  >
                    Test Course
                  </Link>
                </div>,
              ],
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <strong>
                    Course
                  </strong>,
                  "className": "col-12",
                  "id": "course",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Course",
                  },
                  "ref": null,
                  "rendered": "Course",
                  "type": "strong",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Link
                    replace={false}
                    to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                  >
                    Test Course
                  </Link>,
                  "className": "col-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Test Course",
                    "replace": false,
                    "to": "/courses/00000000-0000-0000-0000-000000000001/edit/",
                  },
                  "ref": null,
                  "rendered": "Test Course",
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      <strong>
                        Start date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="start"
                  required={true}
                  type="date"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      <strong>
                        End date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="end"
                  required={true}
                  type="date"
                />,
                <div
                  className="row justify-content-end"
                >
                  <Link
                    replace={false}
                    to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                  >
                    <button
                      className="btn btn-outline-primary"
                      disabled={false}
                    >
                      Cancel
                    </button>
                  </Link>
                  <button
                    className="btn btn-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>
                </div>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    <strong>
                      Start date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "start",
                  "required": true,
                  "type": "date",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    <strong>
                      End date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "end",
                  "required": true,
                  "type": "date",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Link
                      replace={false}
                      to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                    >
                      <button
                        className="btn btn-outline-primary"
                        disabled={false}
                      >
                        Cancel
                      </button>
                    </Link>,
                    <button
                      className="btn btn-primary form-submit-btn"
                      disabled={true}
                      type="submit"
                    >
                      Submit
                    </button>,
                  ],
                  "className": "row justify-content-end",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <button
                        className="btn btn-outline-primary"
                        disabled={false}
                      >
                        Cancel
                      </button>,
                      "replace": false,
                      "to": "/courses/00000000-0000-0000-0000-000000000001/edit/",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Cancel",
                        "className": "btn btn-outline-primary",
                        "disabled": false,
                      },
                      "ref": null,
                      "rendered": "Cancel",
                      "type": "button",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Submit",
                      "className": "btn btn-primary form-submit-btn",
                      "disabled": true,
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Submit",
                    "type": "button",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="create-course-run-form row"
        >
          <div
            className="col"
          >
            <h2>
              Create a new course run
            </h2>
            <hr />
            <div
              className="row"
            >
              <div
                className="col-12"
                id="course"
              >
                <strong>
                  Course
                </strong>
              </div>
              <div
                className="col-12"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  Test Course
                </Link>
              </div>
            </div>
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      Start date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="start"
                required={true}
                type="date"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      End date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="end"
                required={true}
                type="date"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  <button
                    className="btn btn-outline-primary"
                    disabled={false}
                  >
                    Cancel
                  </button>
                </Link>
                <button
                  className="btn btn-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col"
          >
            <h2>
              Create a new course run
            </h2>
            <hr />
            <div
              className="row"
            >
              <div
                className="col-12"
                id="course"
              >
                <strong>
                  Course
                </strong>
              </div>
              <div
                className="col-12"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  Test Course
                </Link>
              </div>
            </div>
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      Start date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="start"
                required={true}
                type="date"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      End date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="end"
                required={true}
                type="date"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  <button
                    className="btn btn-outline-primary"
                    disabled={false}
                  >
                    Cancel
                  </button>
                </Link>
                <button
                  className="btn btn-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>,
          "className": "create-course-run-form row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2>
                Create a new course run
              </h2>,
              <hr />,
              <div
                className="row"
              >
                <div
                  className="col-12"
                  id="course"
                >
                  <strong>
                    Course
                  </strong>
                </div>
                <div
                  className="col-12"
                >
                  <Link
                    replace={false}
                    to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                  >
                    Test Course
                  </Link>
                </div>
              </div>,
              <form
                onSubmit={[Function]}
              >
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      <strong>
                        Start date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="start"
                  required={true}
                  type="date"
                />
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      <strong>
                        End date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="end"
                  required={true}
                  type="date"
                />
                <div
                  className="row justify-content-end"
                >
                  <Link
                    replace={false}
                    to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                  >
                    <button
                      className="btn btn-outline-primary"
                      disabled={false}
                    >
                      Cancel
                    </button>
                  </Link>
                  <button
                    className="btn btn-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>
                </div>
              </form>,
            ],
            "className": "col",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Create a new course run",
              },
              "ref": null,
              "rendered": "Create a new course run",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "hr",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-12"
                    id="course"
                  >
                    <strong>
                      Course
                    </strong>
                  </div>,
                  <div
                    className="col-12"
                  >
                    <Link
                      replace={false}
                      to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                    >
                      Test Course
                    </Link>
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Course
                    </strong>,
                    "className": "col-12",
                    "id": "course",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Course",
                    },
                    "ref": null,
                    "rendered": "Course",
                    "type": "strong",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Link
                      replace={false}
                      to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                    >
                      Test Course
                    </Link>,
                    "className": "col-12",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Test Course",
                      "replace": false,
                      "to": "/courses/00000000-0000-0000-0000-000000000001/edit/",
                    },
                    "ref": null,
                    "rendered": "Test Course",
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Field
                    component={[Function]}
                    label={
                      <React.Fragment>
                        <strong>
                          Start date
                        </strong>
                        <span
                          className="required"
                        >
                          *
                        </span>
                      </React.Fragment>
                    }
                    name="start"
                    required={true}
                    type="date"
                  />,
                  <Field
                    component={[Function]}
                    label={
                      <React.Fragment>
                        <strong>
                          End date
                        </strong>
                        <span
                          className="required"
                        >
                          *
                        </span>
                      </React.Fragment>
                    }
                    name="end"
                    required={true}
                    type="date"
                  />,
                  <div
                    className="row justify-content-end"
                  >
                    <Link
                      replace={false}
                      to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                    >
                      <button
                        className="btn btn-outline-primary"
                        disabled={false}
                      >
                        Cancel
                      </button>
                    </Link>
                    <button
                      className="btn btn-primary form-submit-btn"
                      disabled={true}
                      type="submit"
                    >
                      Submit
                    </button>
                  </div>,
                ],
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": <React.Fragment>
                      <strong>
                        Start date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>,
                    "name": "start",
                    "required": true,
                    "type": "date",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": <React.Fragment>
                      <strong>
                        End date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>,
                    "name": "end",
                    "required": true,
                    "type": "date",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Link
                        replace={false}
                        to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                      >
                        <button
                          className="btn btn-outline-primary"
                          disabled={false}
                        >
                          Cancel
                        </button>
                      </Link>,
                      <button
                        className="btn btn-primary form-submit-btn"
                        disabled={true}
                        type="submit"
                      >
                        Submit
                      </button>,
                    ],
                    "className": "row justify-content-end",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <button
                          className="btn btn-outline-primary"
                          disabled={false}
                        >
                          Cancel
                        </button>,
                        "replace": false,
                        "to": "/courses/00000000-0000-0000-0000-000000000001/edit/",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Cancel",
                          "className": "btn btn-outline-primary",
                          "disabled": false,
                        },
                        "ref": null,
                        "rendered": "Cancel",
                        "type": "button",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Submit",
                        "className": "btn btn-primary form-submit-btn",
                        "disabled": true,
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Submit",
                      "type": "button",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "form",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`CreateCourseRunForm renders html correctly when submitting and creating 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseCreateCourseRunForm
    handleSubmit={[Function]}
    initialValues={
      Object {
        "course": "edx+test101",
      }
    }
    pristine={false}
    submitting={true}
    title="Test Course"
    uuid="00000000-0000-0000-0000-000000000001"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="create-course-run-form row"
      >
        <div
          className="col"
        >
          <h2>
            Create a new course run
          </h2>
          <hr />
          <div
            className="row"
          >
            <div
              className="col-12"
              id="course"
            >
              <strong>
                Course
              </strong>
            </div>
            <div
              className="col-12"
            >
              <Link
                replace={false}
                to="/courses/00000000-0000-0000-0000-000000000001/edit/"
              >
                Test Course
              </Link>
            </div>
          </div>
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  <strong>
                    Start date
                  </strong>
                  <span
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="start"
              required={true}
              type="date"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  <strong>
                    End date
                  </strong>
                  <span
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="end"
              required={true}
              type="date"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                replace={false}
                to="/courses/00000000-0000-0000-0000-000000000001/edit/"
              >
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                >
                  Cancel
                </button>
              </Link>
              <button
                className="btn btn-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="col"
        >
          <h2>
            Create a new course run
          </h2>
          <hr />
          <div
            className="row"
          >
            <div
              className="col-12"
              id="course"
            >
              <strong>
                Course
              </strong>
            </div>
            <div
              className="col-12"
            >
              <Link
                replace={false}
                to="/courses/00000000-0000-0000-0000-000000000001/edit/"
              >
                Test Course
              </Link>
            </div>
          </div>
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  <strong>
                    Start date
                  </strong>
                  <span
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="start"
              required={true}
              type="date"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  <strong>
                    End date
                  </strong>
                  <span
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="end"
              required={true}
              type="date"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                replace={false}
                to="/courses/00000000-0000-0000-0000-000000000001/edit/"
              >
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                >
                  Cancel
                </button>
              </Link>
              <button
                className="btn btn-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>,
        "className": "create-course-run-form row",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2>
              Create a new course run
            </h2>,
            <hr />,
            <div
              className="row"
            >
              <div
                className="col-12"
                id="course"
              >
                <strong>
                  Course
                </strong>
              </div>
              <div
                className="col-12"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  Test Course
                </Link>
              </div>
            </div>,
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      Start date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="start"
                required={true}
                type="date"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      End date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="end"
                required={true}
                type="date"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  <button
                    className="btn btn-outline-primary"
                    disabled={true}
                  >
                    Cancel
                  </button>
                </Link>
                <button
                  className="btn btn-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>,
          ],
          "className": "col",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a new course run",
            },
            "ref": null,
            "rendered": "Create a new course run",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "hr",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col-12"
                  id="course"
                >
                  <strong>
                    Course
                  </strong>
                </div>,
                <div
                  className="col-12"
                >
                  <Link
                    replace={false}
                    to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                  >
                    Test Course
                  </Link>
                </div>,
              ],
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <strong>
                    Course
                  </strong>,
                  "className": "col-12",
                  "id": "course",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Course",
                  },
                  "ref": null,
                  "rendered": "Course",
                  "type": "strong",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Link
                    replace={false}
                    to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                  >
                    Test Course
                  </Link>,
                  "className": "col-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Test Course",
                    "replace": false,
                    "to": "/courses/00000000-0000-0000-0000-000000000001/edit/",
                  },
                  "ref": null,
                  "rendered": "Test Course",
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      <strong>
                        Start date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="start"
                  required={true}
                  type="date"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      <strong>
                        End date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="end"
                  required={true}
                  type="date"
                />,
                <div
                  className="row justify-content-end"
                >
                  <Link
                    replace={false}
                    to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                  >
                    <button
                      className="btn btn-outline-primary"
                      disabled={true}
                    >
                      Cancel
                    </button>
                  </Link>
                  <button
                    className="btn btn-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>
                </div>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    <strong>
                      Start date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "start",
                  "required": true,
                  "type": "date",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    <strong>
                      End date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "end",
                  "required": true,
                  "type": "date",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Link
                      replace={false}
                      to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                    >
                      <button
                        className="btn btn-outline-primary"
                        disabled={true}
                      >
                        Cancel
                      </button>
                    </Link>,
                    <button
                      className="btn btn-primary form-submit-btn"
                      disabled={true}
                      type="submit"
                    >
                      Submit
                    </button>,
                  ],
                  "className": "row justify-content-end",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <button
                        className="btn btn-outline-primary"
                        disabled={true}
                      >
                        Cancel
                      </button>,
                      "replace": false,
                      "to": "/courses/00000000-0000-0000-0000-000000000001/edit/",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Cancel",
                        "className": "btn btn-outline-primary",
                        "disabled": true,
                      },
                      "ref": null,
                      "rendered": "Cancel",
                      "type": "button",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Submit",
                      "className": "btn btn-primary form-submit-btn",
                      "disabled": true,
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Submit",
                    "type": "button",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="create-course-run-form row"
        >
          <div
            className="col"
          >
            <h2>
              Create a new course run
            </h2>
            <hr />
            <div
              className="row"
            >
              <div
                className="col-12"
                id="course"
              >
                <strong>
                  Course
                </strong>
              </div>
              <div
                className="col-12"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  Test Course
                </Link>
              </div>
            </div>
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      Start date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="start"
                required={true}
                type="date"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      End date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="end"
                required={true}
                type="date"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  <button
                    className="btn btn-outline-primary"
                    disabled={true}
                  >
                    Cancel
                  </button>
                </Link>
                <button
                  className="btn btn-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col"
          >
            <h2>
              Create a new course run
            </h2>
            <hr />
            <div
              className="row"
            >
              <div
                className="col-12"
                id="course"
              >
                <strong>
                  Course
                </strong>
              </div>
              <div
                className="col-12"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  Test Course
                </Link>
              </div>
            </div>
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      Start date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="start"
                required={true}
                type="date"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    <strong>
                      End date
                    </strong>
                    <span
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="end"
                required={true}
                type="date"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  replace={false}
                  to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                >
                  <button
                    className="btn btn-outline-primary"
                    disabled={true}
                  >
                    Cancel
                  </button>
                </Link>
                <button
                  className="btn btn-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>,
          "className": "create-course-run-form row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2>
                Create a new course run
              </h2>,
              <hr />,
              <div
                className="row"
              >
                <div
                  className="col-12"
                  id="course"
                >
                  <strong>
                    Course
                  </strong>
                </div>
                <div
                  className="col-12"
                >
                  <Link
                    replace={false}
                    to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                  >
                    Test Course
                  </Link>
                </div>
              </div>,
              <form
                onSubmit={[Function]}
              >
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      <strong>
                        Start date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="start"
                  required={true}
                  type="date"
                />
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      <strong>
                        End date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="end"
                  required={true}
                  type="date"
                />
                <div
                  className="row justify-content-end"
                >
                  <Link
                    replace={false}
                    to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                  >
                    <button
                      className="btn btn-outline-primary"
                      disabled={true}
                    >
                      Cancel
                    </button>
                  </Link>
                  <button
                    className="btn btn-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>
                </div>
              </form>,
            ],
            "className": "col",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Create a new course run",
              },
              "ref": null,
              "rendered": "Create a new course run",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "hr",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-12"
                    id="course"
                  >
                    <strong>
                      Course
                    </strong>
                  </div>,
                  <div
                    className="col-12"
                  >
                    <Link
                      replace={false}
                      to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                    >
                      Test Course
                    </Link>
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Course
                    </strong>,
                    "className": "col-12",
                    "id": "course",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Course",
                    },
                    "ref": null,
                    "rendered": "Course",
                    "type": "strong",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Link
                      replace={false}
                      to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                    >
                      Test Course
                    </Link>,
                    "className": "col-12",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Test Course",
                      "replace": false,
                      "to": "/courses/00000000-0000-0000-0000-000000000001/edit/",
                    },
                    "ref": null,
                    "rendered": "Test Course",
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Field
                    component={[Function]}
                    label={
                      <React.Fragment>
                        <strong>
                          Start date
                        </strong>
                        <span
                          className="required"
                        >
                          *
                        </span>
                      </React.Fragment>
                    }
                    name="start"
                    required={true}
                    type="date"
                  />,
                  <Field
                    component={[Function]}
                    label={
                      <React.Fragment>
                        <strong>
                          End date
                        </strong>
                        <span
                          className="required"
                        >
                          *
                        </span>
                      </React.Fragment>
                    }
                    name="end"
                    required={true}
                    type="date"
                  />,
                  <div
                    className="row justify-content-end"
                  >
                    <Link
                      replace={false}
                      to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                    >
                      <button
                        className="btn btn-outline-primary"
                        disabled={true}
                      >
                        Cancel
                      </button>
                    </Link>
                    <button
                      className="btn btn-primary form-submit-btn"
                      disabled={true}
                      type="submit"
                    >
                      Submit
                    </button>
                  </div>,
                ],
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": <React.Fragment>
                      <strong>
                        Start date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>,
                    "name": "start",
                    "required": true,
                    "type": "date",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": <React.Fragment>
                      <strong>
                        End date
                      </strong>
                      <span
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>,
                    "name": "end",
                    "required": true,
                    "type": "date",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Link
                        replace={false}
                        to="/courses/00000000-0000-0000-0000-000000000001/edit/"
                      >
                        <button
                          className="btn btn-outline-primary"
                          disabled={true}
                        >
                          Cancel
                        </button>
                      </Link>,
                      <button
                        className="btn btn-primary form-submit-btn"
                        disabled={true}
                        type="submit"
                      >
                        Submit
                      </button>,
                    ],
                    "className": "row justify-content-end",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <button
                          className="btn btn-outline-primary"
                          disabled={true}
                        >
                          Cancel
                        </button>,
                        "replace": false,
                        "to": "/courses/00000000-0000-0000-0000-000000000001/edit/",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Cancel",
                          "className": "btn btn-outline-primary",
                          "disabled": true,
                        },
                        "ref": null,
                        "rendered": "Cancel",
                        "type": "button",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Submit",
                        "className": "btn btn-primary form-submit-btn",
                        "disabled": true,
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Submit",
                      "type": "button",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "form",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
