// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CourseTable shows a populated table 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TableComponent
    className="test"
    clearTable={[Function]}
    columns={
      Array [
        Object {
          "columnSortable": true,
          "key": "col1",
          "label": "Col 1",
        },
        Object {
          "columnSortable": false,
          "key": "col2",
          "label": "Col 2",
        },
      ]
    }
    data={
      Array [
        Object {
          "col1": "Test11",
          "col2": "Test12",
        },
        Object {
          "col1": "Test21",
          "col2": "Test22",
        },
      ]
    }
    error={null}
    fetchMethod={[Function]}
    formatData={[Function]}
    id="test"
    loading={false}
    location={
      Object {
        "search": "?page=1&ordering=key",
      }
    }
    pageCount={1}
    paginateTable={[Function]}
    sortTable={[Function]}
    tableSortable={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        null,
        false,
        false,
        <div
          className="test"
        >
          <div
            className="table-responsive"
          >
            <withDeprecatedProps(Table)
              className="table-sm table-striped"
              columns={
                Array [
                  Object {
                    "columnSortable": true,
                    "key": "col1",
                    "label": "Col 1",
                    "onSort": [Function],
                  },
                  Object {
                    "columnSortable": false,
                    "key": "col2",
                    "label": "Col 2",
                    "onSort": null,
                  },
                ]
              }
              data={
                Array [
                  Object {
                    "col1": "Test11",
                    "col2": "Test12",
                  },
                  Object {
                    "col1": "Test21",
                    "col2": "Test22",
                  },
                ]
              }
              defaultSortDirection="asc"
              defaultSortedColumn="col1"
              id="test"
              tableSortable={true}
            />
          </div>
          <div
            className="mt-2 d-flex justify-content-center"
          >
            <Pagination
              buttonLabels={
                Object {
                  "currentPage": "Current Page",
                  "next": "Next",
                  "page": "Page",
                  "pageOfCount": "of",
                  "previous": "Previous",
                }
              }
              currentPage={1}
              maxPagesDisplayed={7}
              onPageSelect={[Function]}
              pageCount={1}
              paginationLabel="test-pagination"
            />
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="table-responsive"
            >
              <withDeprecatedProps(Table)
                className="table-sm table-striped"
                columns={
                  Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ]
                }
                defaultSortDirection="asc"
                defaultSortedColumn="col1"
                id="test"
                tableSortable={true}
              />
            </div>,
            <div
              className="mt-2 d-flex justify-content-center"
            >
              <Pagination
                buttonLabels={
                  Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  }
                }
                currentPage={1}
                maxPagesDisplayed={7}
                onPageSelect={[Function]}
                pageCount={1}
                paginationLabel="test-pagination"
              />
            </div>,
          ],
          "className": "test",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <withDeprecatedProps(Table)
                className="table-sm table-striped"
                columns={
                  Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ]
                }
                defaultSortDirection="asc"
                defaultSortedColumn="col1"
                id="test"
                tableSortable={true}
              />,
              "className": "table-responsive",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "table-sm table-striped",
                "columns": Array [
                  Object {
                    "columnSortable": true,
                    "key": "col1",
                    "label": "Col 1",
                    "onSort": [Function],
                  },
                  Object {
                    "columnSortable": false,
                    "key": "col2",
                    "label": "Col 2",
                    "onSort": null,
                  },
                ],
                "data": Array [
                  Object {
                    "col1": "Test11",
                    "col2": "Test12",
                  },
                  Object {
                    "col1": "Test21",
                    "col2": "Test22",
                  },
                ],
                "defaultSortDirection": "asc",
                "defaultSortedColumn": "col1",
                "id": "test",
                "tableSortable": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Pagination
                buttonLabels={
                  Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  }
                }
                currentPage={1}
                maxPagesDisplayed={7}
                onPageSelect={[Function]}
                pageCount={1}
                paginationLabel="test-pagination"
              />,
              "className": "mt-2 d-flex justify-content-center",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "buttonLabels": Object {
                  "currentPage": "Current Page",
                  "next": "Next",
                  "page": "Page",
                  "pageOfCount": "of",
                  "previous": "Previous",
                },
                "className": undefined,
                "currentPage": 1,
                "maxPagesDisplayed": 7,
                "onPageSelect": [Function],
                "pageCount": 1,
                "paginationLabel": "test-pagination",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          false,
          false,
          <div
            className="test"
          >
            <div
              className="table-responsive"
            >
              <withDeprecatedProps(Table)
                className="table-sm table-striped"
                columns={
                  Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ]
                }
                defaultSortDirection="asc"
                defaultSortedColumn="col1"
                id="test"
                tableSortable={true}
              />
            </div>
            <div
              className="mt-2 d-flex justify-content-center"
            >
              <Pagination
                buttonLabels={
                  Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  }
                }
                currentPage={1}
                maxPagesDisplayed={7}
                onPageSelect={[Function]}
                pageCount={1}
                paginationLabel="test-pagination"
              />
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="table-responsive"
              >
                <withDeprecatedProps(Table)
                  className="table-sm table-striped"
                  columns={
                    Array [
                      Object {
                        "columnSortable": true,
                        "key": "col1",
                        "label": "Col 1",
                        "onSort": [Function],
                      },
                      Object {
                        "columnSortable": false,
                        "key": "col2",
                        "label": "Col 2",
                        "onSort": null,
                      },
                    ]
                  }
                  data={
                    Array [
                      Object {
                        "col1": "Test11",
                        "col2": "Test12",
                      },
                      Object {
                        "col1": "Test21",
                        "col2": "Test22",
                      },
                    ]
                  }
                  defaultSortDirection="asc"
                  defaultSortedColumn="col1"
                  id="test"
                  tableSortable={true}
                />
              </div>,
              <div
                className="mt-2 d-flex justify-content-center"
              >
                <Pagination
                  buttonLabels={
                    Object {
                      "currentPage": "Current Page",
                      "next": "Next",
                      "page": "Page",
                      "pageOfCount": "of",
                      "previous": "Previous",
                    }
                  }
                  currentPage={1}
                  maxPagesDisplayed={7}
                  onPageSelect={[Function]}
                  pageCount={1}
                  paginationLabel="test-pagination"
                />
              </div>,
            ],
            "className": "test",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <withDeprecatedProps(Table)
                  className="table-sm table-striped"
                  columns={
                    Array [
                      Object {
                        "columnSortable": true,
                        "key": "col1",
                        "label": "Col 1",
                        "onSort": [Function],
                      },
                      Object {
                        "columnSortable": false,
                        "key": "col2",
                        "label": "Col 2",
                        "onSort": null,
                      },
                    ]
                  }
                  data={
                    Array [
                      Object {
                        "col1": "Test11",
                        "col2": "Test12",
                      },
                      Object {
                        "col1": "Test21",
                        "col2": "Test22",
                      },
                    ]
                  }
                  defaultSortDirection="asc"
                  defaultSortedColumn="col1"
                  id="test"
                  tableSortable={true}
                />,
                "className": "table-responsive",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "table-sm table-striped",
                  "columns": Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ],
                  "data": Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ],
                  "defaultSortDirection": "asc",
                  "defaultSortedColumn": "col1",
                  "id": "test",
                  "tableSortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Pagination
                  buttonLabels={
                    Object {
                      "currentPage": "Current Page",
                      "next": "Next",
                      "page": "Page",
                      "pageOfCount": "of",
                      "previous": "Previous",
                    }
                  }
                  currentPage={1}
                  maxPagesDisplayed={7}
                  onPageSelect={[Function]}
                  pageCount={1}
                  paginationLabel="test-pagination"
                />,
                "className": "mt-2 d-flex justify-content-center",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "buttonLabels": Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  },
                  "className": undefined,
                  "currentPage": 1,
                  "maxPagesDisplayed": 7,
                  "onPageSelect": [Function],
                  "pageCount": 1,
                  "paginationLabel": "test-pagination",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CourseTable shows a populated table after a component update for ordering 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TableComponent
    className="test"
    clearTable={[Function]}
    columns={
      Array [
        Object {
          "columnSortable": true,
          "key": "col1",
          "label": "Col 1",
        },
        Object {
          "columnSortable": false,
          "key": "col2",
          "label": "Col 2",
        },
      ]
    }
    data={
      Array [
        Object {
          "col1": "Test11",
          "col2": "Test12",
        },
        Object {
          "col1": "Test21",
          "col2": "Test22",
        },
      ]
    }
    error={null}
    fetchMethod={[Function]}
    formatData={[Function]}
    id="test"
    loading={false}
    location={
      Object {
        "search": "?page=1&ordering=-key",
      }
    }
    pageCount={1}
    paginateTable={[Function]}
    sortTable={[Function]}
    tableSortable={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        null,
        false,
        false,
        <div
          className="test"
        >
          <div
            className="table-responsive"
          >
            <withDeprecatedProps(Table)
              className="table-sm table-striped"
              columns={
                Array [
                  Object {
                    "columnSortable": true,
                    "key": "col1",
                    "label": "Col 1",
                    "onSort": [Function],
                  },
                  Object {
                    "columnSortable": false,
                    "key": "col2",
                    "label": "Col 2",
                    "onSort": null,
                  },
                ]
              }
              data={
                Array [
                  Object {
                    "col1": "Test11",
                    "col2": "Test12",
                  },
                  Object {
                    "col1": "Test21",
                    "col2": "Test22",
                  },
                ]
              }
              defaultSortDirection="asc"
              defaultSortedColumn="col1"
              id="test"
              tableSortable={true}
            />
          </div>
          <div
            className="mt-2 d-flex justify-content-center"
          >
            <Pagination
              buttonLabels={
                Object {
                  "currentPage": "Current Page",
                  "next": "Next",
                  "page": "Page",
                  "pageOfCount": "of",
                  "previous": "Previous",
                }
              }
              currentPage={1}
              maxPagesDisplayed={7}
              onPageSelect={[Function]}
              pageCount={1}
              paginationLabel="test-pagination"
            />
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="table-responsive"
            >
              <withDeprecatedProps(Table)
                className="table-sm table-striped"
                columns={
                  Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ]
                }
                defaultSortDirection="asc"
                defaultSortedColumn="col1"
                id="test"
                tableSortable={true}
              />
            </div>,
            <div
              className="mt-2 d-flex justify-content-center"
            >
              <Pagination
                buttonLabels={
                  Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  }
                }
                currentPage={1}
                maxPagesDisplayed={7}
                onPageSelect={[Function]}
                pageCount={1}
                paginationLabel="test-pagination"
              />
            </div>,
          ],
          "className": "test",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <withDeprecatedProps(Table)
                className="table-sm table-striped"
                columns={
                  Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ]
                }
                defaultSortDirection="asc"
                defaultSortedColumn="col1"
                id="test"
                tableSortable={true}
              />,
              "className": "table-responsive",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "table-sm table-striped",
                "columns": Array [
                  Object {
                    "columnSortable": true,
                    "key": "col1",
                    "label": "Col 1",
                    "onSort": [Function],
                  },
                  Object {
                    "columnSortable": false,
                    "key": "col2",
                    "label": "Col 2",
                    "onSort": null,
                  },
                ],
                "data": Array [
                  Object {
                    "col1": "Test11",
                    "col2": "Test12",
                  },
                  Object {
                    "col1": "Test21",
                    "col2": "Test22",
                  },
                ],
                "defaultSortDirection": "asc",
                "defaultSortedColumn": "col1",
                "id": "test",
                "tableSortable": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Pagination
                buttonLabels={
                  Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  }
                }
                currentPage={1}
                maxPagesDisplayed={7}
                onPageSelect={[Function]}
                pageCount={1}
                paginationLabel="test-pagination"
              />,
              "className": "mt-2 d-flex justify-content-center",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "buttonLabels": Object {
                  "currentPage": "Current Page",
                  "next": "Next",
                  "page": "Page",
                  "pageOfCount": "of",
                  "previous": "Previous",
                },
                "className": undefined,
                "currentPage": 1,
                "maxPagesDisplayed": 7,
                "onPageSelect": [Function],
                "pageCount": 1,
                "paginationLabel": "test-pagination",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          false,
          false,
          <div
            className="test"
          >
            <div
              className="table-responsive"
            >
              <withDeprecatedProps(Table)
                className="table-sm table-striped"
                columns={
                  Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ]
                }
                defaultSortDirection="asc"
                defaultSortedColumn="col1"
                id="test"
                tableSortable={true}
              />
            </div>
            <div
              className="mt-2 d-flex justify-content-center"
            >
              <Pagination
                buttonLabels={
                  Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  }
                }
                currentPage={1}
                maxPagesDisplayed={7}
                onPageSelect={[Function]}
                pageCount={1}
                paginationLabel="test-pagination"
              />
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="table-responsive"
              >
                <withDeprecatedProps(Table)
                  className="table-sm table-striped"
                  columns={
                    Array [
                      Object {
                        "columnSortable": true,
                        "key": "col1",
                        "label": "Col 1",
                        "onSort": [Function],
                      },
                      Object {
                        "columnSortable": false,
                        "key": "col2",
                        "label": "Col 2",
                        "onSort": null,
                      },
                    ]
                  }
                  data={
                    Array [
                      Object {
                        "col1": "Test11",
                        "col2": "Test12",
                      },
                      Object {
                        "col1": "Test21",
                        "col2": "Test22",
                      },
                    ]
                  }
                  defaultSortDirection="asc"
                  defaultSortedColumn="col1"
                  id="test"
                  tableSortable={true}
                />
              </div>,
              <div
                className="mt-2 d-flex justify-content-center"
              >
                <Pagination
                  buttonLabels={
                    Object {
                      "currentPage": "Current Page",
                      "next": "Next",
                      "page": "Page",
                      "pageOfCount": "of",
                      "previous": "Previous",
                    }
                  }
                  currentPage={1}
                  maxPagesDisplayed={7}
                  onPageSelect={[Function]}
                  pageCount={1}
                  paginationLabel="test-pagination"
                />
              </div>,
            ],
            "className": "test",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <withDeprecatedProps(Table)
                  className="table-sm table-striped"
                  columns={
                    Array [
                      Object {
                        "columnSortable": true,
                        "key": "col1",
                        "label": "Col 1",
                        "onSort": [Function],
                      },
                      Object {
                        "columnSortable": false,
                        "key": "col2",
                        "label": "Col 2",
                        "onSort": null,
                      },
                    ]
                  }
                  data={
                    Array [
                      Object {
                        "col1": "Test11",
                        "col2": "Test12",
                      },
                      Object {
                        "col1": "Test21",
                        "col2": "Test22",
                      },
                    ]
                  }
                  defaultSortDirection="asc"
                  defaultSortedColumn="col1"
                  id="test"
                  tableSortable={true}
                />,
                "className": "table-responsive",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "table-sm table-striped",
                  "columns": Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ],
                  "data": Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ],
                  "defaultSortDirection": "asc",
                  "defaultSortedColumn": "col1",
                  "id": "test",
                  "tableSortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Pagination
                  buttonLabels={
                    Object {
                      "currentPage": "Current Page",
                      "next": "Next",
                      "page": "Page",
                      "pageOfCount": "of",
                      "previous": "Previous",
                    }
                  }
                  currentPage={1}
                  maxPagesDisplayed={7}
                  onPageSelect={[Function]}
                  pageCount={1}
                  paginationLabel="test-pagination"
                />,
                "className": "mt-2 d-flex justify-content-center",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "buttonLabels": Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  },
                  "className": undefined,
                  "currentPage": 1,
                  "maxPagesDisplayed": 7,
                  "onPageSelect": [Function],
                  "pageCount": 1,
                  "paginationLabel": "test-pagination",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CourseTable shows a populated table after a component update for page 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TableComponent
    className="test"
    clearTable={[Function]}
    columns={
      Array [
        Object {
          "columnSortable": true,
          "key": "col1",
          "label": "Col 1",
        },
        Object {
          "columnSortable": false,
          "key": "col2",
          "label": "Col 2",
        },
      ]
    }
    data={
      Array [
        Object {
          "col1": "Test11",
          "col2": "Test12",
        },
        Object {
          "col1": "Test21",
          "col2": "Test22",
        },
      ]
    }
    error={null}
    fetchMethod={[Function]}
    formatData={[Function]}
    id="test"
    loading={false}
    location={
      Object {
        "search": "?page=2&ordering=key",
      }
    }
    pageCount={1}
    paginateTable={[Function]}
    sortTable={[Function]}
    tableSortable={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        null,
        false,
        false,
        <div
          className="test"
        >
          <div
            className="table-responsive"
          >
            <withDeprecatedProps(Table)
              className="table-sm table-striped"
              columns={
                Array [
                  Object {
                    "columnSortable": true,
                    "key": "col1",
                    "label": "Col 1",
                    "onSort": [Function],
                  },
                  Object {
                    "columnSortable": false,
                    "key": "col2",
                    "label": "Col 2",
                    "onSort": null,
                  },
                ]
              }
              data={
                Array [
                  Object {
                    "col1": "Test11",
                    "col2": "Test12",
                  },
                  Object {
                    "col1": "Test21",
                    "col2": "Test22",
                  },
                ]
              }
              defaultSortDirection="asc"
              defaultSortedColumn="col1"
              id="test"
              tableSortable={true}
            />
          </div>
          <div
            className="mt-2 d-flex justify-content-center"
          >
            <Pagination
              buttonLabels={
                Object {
                  "currentPage": "Current Page",
                  "next": "Next",
                  "page": "Page",
                  "pageOfCount": "of",
                  "previous": "Previous",
                }
              }
              currentPage={1}
              maxPagesDisplayed={7}
              onPageSelect={[Function]}
              pageCount={1}
              paginationLabel="test-pagination"
            />
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="table-responsive"
            >
              <withDeprecatedProps(Table)
                className="table-sm table-striped"
                columns={
                  Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ]
                }
                defaultSortDirection="asc"
                defaultSortedColumn="col1"
                id="test"
                tableSortable={true}
              />
            </div>,
            <div
              className="mt-2 d-flex justify-content-center"
            >
              <Pagination
                buttonLabels={
                  Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  }
                }
                currentPage={1}
                maxPagesDisplayed={7}
                onPageSelect={[Function]}
                pageCount={1}
                paginationLabel="test-pagination"
              />
            </div>,
          ],
          "className": "test",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <withDeprecatedProps(Table)
                className="table-sm table-striped"
                columns={
                  Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ]
                }
                defaultSortDirection="asc"
                defaultSortedColumn="col1"
                id="test"
                tableSortable={true}
              />,
              "className": "table-responsive",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "table-sm table-striped",
                "columns": Array [
                  Object {
                    "columnSortable": true,
                    "key": "col1",
                    "label": "Col 1",
                    "onSort": [Function],
                  },
                  Object {
                    "columnSortable": false,
                    "key": "col2",
                    "label": "Col 2",
                    "onSort": null,
                  },
                ],
                "data": Array [
                  Object {
                    "col1": "Test11",
                    "col2": "Test12",
                  },
                  Object {
                    "col1": "Test21",
                    "col2": "Test22",
                  },
                ],
                "defaultSortDirection": "asc",
                "defaultSortedColumn": "col1",
                "id": "test",
                "tableSortable": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Pagination
                buttonLabels={
                  Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  }
                }
                currentPage={1}
                maxPagesDisplayed={7}
                onPageSelect={[Function]}
                pageCount={1}
                paginationLabel="test-pagination"
              />,
              "className": "mt-2 d-flex justify-content-center",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "buttonLabels": Object {
                  "currentPage": "Current Page",
                  "next": "Next",
                  "page": "Page",
                  "pageOfCount": "of",
                  "previous": "Previous",
                },
                "className": undefined,
                "currentPage": 1,
                "maxPagesDisplayed": 7,
                "onPageSelect": [Function],
                "pageCount": 1,
                "paginationLabel": "test-pagination",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          false,
          false,
          <div
            className="test"
          >
            <div
              className="table-responsive"
            >
              <withDeprecatedProps(Table)
                className="table-sm table-striped"
                columns={
                  Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ]
                }
                defaultSortDirection="asc"
                defaultSortedColumn="col1"
                id="test"
                tableSortable={true}
              />
            </div>
            <div
              className="mt-2 d-flex justify-content-center"
            >
              <Pagination
                buttonLabels={
                  Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  }
                }
                currentPage={1}
                maxPagesDisplayed={7}
                onPageSelect={[Function]}
                pageCount={1}
                paginationLabel="test-pagination"
              />
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="table-responsive"
              >
                <withDeprecatedProps(Table)
                  className="table-sm table-striped"
                  columns={
                    Array [
                      Object {
                        "columnSortable": true,
                        "key": "col1",
                        "label": "Col 1",
                        "onSort": [Function],
                      },
                      Object {
                        "columnSortable": false,
                        "key": "col2",
                        "label": "Col 2",
                        "onSort": null,
                      },
                    ]
                  }
                  data={
                    Array [
                      Object {
                        "col1": "Test11",
                        "col2": "Test12",
                      },
                      Object {
                        "col1": "Test21",
                        "col2": "Test22",
                      },
                    ]
                  }
                  defaultSortDirection="asc"
                  defaultSortedColumn="col1"
                  id="test"
                  tableSortable={true}
                />
              </div>,
              <div
                className="mt-2 d-flex justify-content-center"
              >
                <Pagination
                  buttonLabels={
                    Object {
                      "currentPage": "Current Page",
                      "next": "Next",
                      "page": "Page",
                      "pageOfCount": "of",
                      "previous": "Previous",
                    }
                  }
                  currentPage={1}
                  maxPagesDisplayed={7}
                  onPageSelect={[Function]}
                  pageCount={1}
                  paginationLabel="test-pagination"
                />
              </div>,
            ],
            "className": "test",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <withDeprecatedProps(Table)
                  className="table-sm table-striped"
                  columns={
                    Array [
                      Object {
                        "columnSortable": true,
                        "key": "col1",
                        "label": "Col 1",
                        "onSort": [Function],
                      },
                      Object {
                        "columnSortable": false,
                        "key": "col2",
                        "label": "Col 2",
                        "onSort": null,
                      },
                    ]
                  }
                  data={
                    Array [
                      Object {
                        "col1": "Test11",
                        "col2": "Test12",
                      },
                      Object {
                        "col1": "Test21",
                        "col2": "Test22",
                      },
                    ]
                  }
                  defaultSortDirection="asc"
                  defaultSortedColumn="col1"
                  id="test"
                  tableSortable={true}
                />,
                "className": "table-responsive",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "table-sm table-striped",
                  "columns": Array [
                    Object {
                      "columnSortable": true,
                      "key": "col1",
                      "label": "Col 1",
                      "onSort": [Function],
                    },
                    Object {
                      "columnSortable": false,
                      "key": "col2",
                      "label": "Col 2",
                      "onSort": null,
                    },
                  ],
                  "data": Array [
                    Object {
                      "col1": "Test11",
                      "col2": "Test12",
                    },
                    Object {
                      "col1": "Test21",
                      "col2": "Test22",
                    },
                  ],
                  "defaultSortDirection": "asc",
                  "defaultSortedColumn": "col1",
                  "id": "test",
                  "tableSortable": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Pagination
                  buttonLabels={
                    Object {
                      "currentPage": "Current Page",
                      "next": "Next",
                      "page": "Page",
                      "pageOfCount": "of",
                      "previous": "Previous",
                    }
                  }
                  currentPage={1}
                  maxPagesDisplayed={7}
                  onPageSelect={[Function]}
                  pageCount={1}
                  paginationLabel="test-pagination"
                />,
                "className": "mt-2 d-flex justify-content-center",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "buttonLabels": Object {
                    "currentPage": "Current Page",
                    "next": "Next",
                    "page": "Page",
                    "pageOfCount": "of",
                    "previous": "Previous",
                  },
                  "className": undefined,
                  "currentPage": 1,
                  "maxPagesDisplayed": 7,
                  "onPageSelect": [Function],
                  "pageCount": 1,
                  "paginationLabel": "test-pagination",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CourseTable shows a table 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TableComponent
    className="test"
    clearTable={[Function]}
    columns={
      Array [
        Object {
          "columnSortable": true,
          "key": "col1",
          "label": "Col 1",
        },
        Object {
          "columnSortable": false,
          "key": "col2",
          "label": "Col 2",
        },
      ]
    }
    error={null}
    fetchMethod={[Function]}
    formatData={[Function]}
    id="test"
    loading={false}
    location={
      Object {
        "search": "?page=1&ordering=key",
      }
    }
    pageCount={1}
    paginateTable={[Function]}
    sortTable={[Function]}
    tableSortable={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        null,
        false,
        undefined,
        undefined,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      false,
      undefined,
      undefined,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          false,
          undefined,
          undefined,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        false,
        undefined,
        undefined,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CourseTable shows an empty table 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TableComponent
    className="test"
    clearTable={[Function]}
    columns={
      Array [
        Object {
          "columnSortable": true,
          "key": "col1",
          "label": "Col 1",
        },
        Object {
          "columnSortable": false,
          "key": "col2",
          "label": "Col 2",
        },
      ]
    }
    data={Array []}
    error={null}
    fetchMethod={[Function]}
    formatData={[Function]}
    id="test"
    loading={false}
    location={
      Object {
        "search": "?page=1&ordering=key",
      }
    }
    pageCount={1}
    paginateTable={[Function]}
    sortTable={[Function]}
    tableSortable={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        null,
        false,
        <StatusAlert
          alertType="warning"
          className=""
          dismissible={false}
          iconClassNames={
            Array [
              "fa",
              "fa-exclamation-circle",
            ]
          }
          message="There are no results."
          onClose={[Function]}
          title={null}
        />,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "alertType": "warning",
          "className": "",
          "dismissible": false,
          "iconClassNames": Array [
            "fa",
            "fa-exclamation-circle",
          ],
          "message": "There are no results.",
          "onClose": [Function],
          "title": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          false,
          <StatusAlert
            alertType="warning"
            className=""
            dismissible={false}
            iconClassNames={
              Array [
                "fa",
                "fa-exclamation-circle",
              ]
            }
            message="There are no results."
            onClose={[Function]}
            title={null}
          />,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "alertType": "warning",
            "className": "",
            "dismissible": false,
            "iconClassNames": Array [
              "fa",
              "fa-exclamation-circle",
            ],
            "message": "There are no results.",
            "onClose": [Function],
            "title": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CourseTable shows an error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TableComponent
    className="test"
    clearTable={[Function]}
    columns={
      Array [
        Object {
          "columnSortable": true,
          "key": "col1",
          "label": "Col 1",
        },
        Object {
          "columnSortable": false,
          "key": "col2",
          "label": "Col 2",
        },
      ]
    }
    error={[Error: Test error]}
    fetchMethod={[Function]}
    formatData={[Function]}
    id="test"
    loading={false}
    location={
      Object {
        "search": "?page=1&ordering=key",
      }
    }
    pageCount={1}
    paginateTable={[Function]}
    sortTable={[Function]}
    tableSortable={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <StatusAlert
          alertType="danger"
          className=""
          dismissible={false}
          iconClassNames={
            Array [
              "fa",
              "fa-times-circle",
            ]
          }
          message={
            Array [
              "Unable to load data",
              "Test error.",
            ]
          }
          onClose={[Function]}
          title={null}
        />,
        false,
        false,
        undefined,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "alertType": "danger",
          "className": "",
          "dismissible": false,
          "iconClassNames": Array [
            "fa",
            "fa-times-circle",
          ],
          "message": Array [
            "Unable to load data",
            "Test error.",
          ],
          "onClose": [Function],
          "title": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      false,
      undefined,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <StatusAlert
            alertType="danger"
            className=""
            dismissible={false}
            iconClassNames={
              Array [
                "fa",
                "fa-times-circle",
              ]
            }
            message={
              Array [
                "Unable to load data",
                "Test error.",
              ]
            }
            onClose={[Function]}
            title={null}
          />,
          false,
          false,
          undefined,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "alertType": "danger",
            "className": "",
            "dismissible": false,
            "iconClassNames": Array [
              "fa",
              "fa-times-circle",
            ],
            "message": Array [
              "Unable to load data",
              "Test error.",
            ],
            "onClose": [Function],
            "title": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
        undefined,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CourseTable shows loading 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TableComponent
    className="test"
    clearTable={[Function]}
    columns={
      Array [
        Object {
          "columnSortable": true,
          "key": "col1",
          "label": "Col 1",
        },
        Object {
          "columnSortable": false,
          "key": "col2",
          "label": "Col 2",
        },
      ]
    }
    error={null}
    fetchMethod={[Function]}
    formatData={[Function]}
    id="test"
    loading={true}
    location={
      Object {
        "search": "?page=1&ordering=key",
      }
    }
    pageCount={1}
    paginateTable={[Function]}
    sortTable={[Function]}
    tableSortable={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        null,
        <LoadingSpinner
          message="Loading…"
        />,
        false,
        undefined,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "message": "Loading…",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      undefined,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          <LoadingSpinner
            message="Loading…"
          />,
          false,
          undefined,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "message": "Loading…",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        undefined,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
