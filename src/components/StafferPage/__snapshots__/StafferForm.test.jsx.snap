// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StafferForm renders correctly when sent from the edit course page 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseStafferForm
    handleSubmit={[Function]}
    isCreateForm={false}
    isSaving={false}
    pristine={true}
    sourceInfo={
      Object {
        "referrer": "courses/00000000-0000-0000-0000-000000000000",
      }
    }
    stafferOptions={
      Object {
        "data": Object {
          "actions": Object {
            "POST": Object {
              "position": Object {
                "children": Object {
                  "organization": Object {
                    "choices": Array [
                      Object {
                        "display_name": "edX",
                        "value": 1,
                      },
                      Object {
                        "display_name": "bananasX",
                        "value": 2,
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      }
    }
    submitting={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <Field
          className="staffer-image"
          component={[Function]}
          id="profile_image"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Image Requirements:
                  </p>
                  <ul>
                    <li>
                      The image dimensions must be 110×110.
                    </li>
                    <li>
                      The image size must be less than 256KB.
                    </li>
                  </ul>
                </div>
              }
              id="image.label"
              optional={false}
              text="Image"
            />
          }
          maxImageSizeKilo={256}
          name="profile_image.medium.url"
          required={false}
          requiredHeight={110}
          requiredWidth={110}
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="First name"
            />
          }
          name="given_name"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Last name"
            />
          }
          name="family_name"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Instructor's title at your organization.
                  </p>
                  <p>
                    <b>
                      Examples:
                    </b>
                  </p>
                  <ul>
                    <li>
                      Professor
                    </li>
                    <li>
                      Content Developer
                    </li>
                    <li>
                      Director
                    </li>
                  </ul>
                </div>
              }
              id="title.label"
              optional={false}
              text="Title"
            />
          }
          name="position.title"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Organization"
            />
          }
          name="position.organization_id"
          options={
            Array [
              Object {
                "label": "Select instructor organization",
                "value": "",
              },
              Object {
                "label": "edX",
                "value": 1,
              },
              Object {
                "label": "bananasX",
                "value": 2,
              },
            ]
          }
          required={true}
        />
        <Field
          component={[Function]}
          id="bio"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Biography"
            />
          }
          maxChars={250}
          name="bio"
          validate={[Function]}
        />
        <Field
          component={[Function]}
          id="works"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Major works"
            />
          }
          maxChars={250}
          name="major_works"
        />
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={true}
          text="Social links"
        />
        <FieldArray
          component={[Function]}
          name="urls_detailed"
        />
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={true}
          text="Areas of expertise"
        />
        <FieldArray
          component={[Function]}
          name="areas_of_expertise"
        />
        <ButtonToolbar
          className=""
          leftJustify={false}
        >
          <Link
            className="btn btn-outline-primary form-cancel-btn"
            disabled={true}
            replace={false}
            to="courses/00000000-0000-0000-0000-000000000000"
          >
            Cancel
          </Link>
          <ActionButton
            className=""
            disabled={true}
            labels={
              Object {
                "default": "Save",
                "pending": "Saving",
              }
            }
            primary={true}
            state="default"
          />
        </ButtonToolbar>
      </form>,
      "className": "create-staffer-form",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Field
            className="staffer-image"
            component={[Function]}
            id="profile_image"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />
            }
            maxImageSizeKilo={256}
            name="profile_image.medium.url"
            required={false}
            requiredHeight={110}
            requiredWidth={110}
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />
            }
            name="given_name"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />
            }
            name="family_name"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />
            }
            name="position.title"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />
            }
            name="position.organization_id"
            options={
              Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            id="bio"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />
            }
            maxChars={250}
            name="bio"
            validate={[Function]}
          />,
          <Field
            component={[Function]}
            id="works"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />
            }
            maxChars={250}
            name="major_works"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Social links"
          />,
          <FieldArray
            component={[Function]}
            name="urls_detailed"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Areas of expertise"
          />,
          <FieldArray
            component={[Function]}
            name="areas_of_expertise"
          />,
          <ButtonToolbar
            className=""
            leftJustify={false}
          >
            <Link
              className="btn btn-outline-primary form-cancel-btn"
              disabled={true}
              replace={false}
              to="courses/00000000-0000-0000-0000-000000000000"
            >
              Cancel
            </Link>
            <ActionButton
              className=""
              disabled={true}
              labels={
                Object {
                  "default": "Save",
                  "pending": "Saving",
                }
              }
              primary={true}
              state="default"
            />
          </ButtonToolbar>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "staffer-image",
            "component": [Function],
            "id": "profile_image",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Image Requirements:
                  </p>
                  <ul>
                    <li>
                      The image dimensions must be 110×110.
                    </li>
                    <li>
                      The image size must be less than 256KB.
                    </li>
                  </ul>
                </div>
              }
              id="image.label"
              optional={false}
              text="Image"
            />,
            "maxImageSizeKilo": 256,
            "name": "profile_image.medium.url",
            "required": false,
            "requiredHeight": 110,
            "requiredWidth": 110,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="First name"
            />,
            "name": "given_name",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Last name"
            />,
            "name": "family_name",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Instructor's title at your organization.
                  </p>
                  <p>
                    <b>
                      Examples:
                    </b>
                  </p>
                  <ul>
                    <li>
                      Professor
                    </li>
                    <li>
                      Content Developer
                    </li>
                    <li>
                      Director
                    </li>
                  </ul>
                </div>
              }
              id="title.label"
              optional={false}
              text="Title"
            />,
            "name": "position.title",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Organization"
            />,
            "name": "position.organization_id",
            "options": Array [
              Object {
                "label": "Select instructor organization",
                "value": "",
              },
              Object {
                "label": "edX",
                "value": 1,
              },
              Object {
                "label": "bananasX",
                "value": 2,
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "id": "bio",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Biography"
            />,
            "maxChars": 250,
            "name": "bio",
            "validate": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "id": "works",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Major works"
            />,
            "maxChars": 250,
            "name": "major_works",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": true,
            "text": "Social links",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "urls_detailed",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": true,
            "text": "Areas of expertise",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "areas_of_expertise",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Link
                className="btn btn-outline-primary form-cancel-btn"
                disabled={true}
                replace={false}
                to="courses/00000000-0000-0000-0000-000000000000"
              >
                Cancel
              </Link>,
              <ActionButton
                className=""
                disabled={true}
                labels={
                  Object {
                    "default": "Save",
                    "pending": "Saving",
                  }
                }
                primary={true}
                state="default"
              />,
            ],
            "className": "",
            "leftJustify": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Cancel",
                "className": "btn btn-outline-primary form-cancel-btn",
                "disabled": true,
                "replace": false,
                "to": "courses/00000000-0000-0000-0000-000000000000",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "disabled": true,
                "labels": Object {
                  "default": "Save",
                  "pending": "Saving",
                },
                "primary": true,
                "state": "default",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <Field
            className="staffer-image"
            component={[Function]}
            id="profile_image"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />
            }
            maxImageSizeKilo={256}
            name="profile_image.medium.url"
            required={false}
            requiredHeight={110}
            requiredWidth={110}
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />
            }
            name="given_name"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />
            }
            name="family_name"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />
            }
            name="position.title"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />
            }
            name="position.organization_id"
            options={
              Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ]
            }
            required={true}
          />
          <Field
            component={[Function]}
            id="bio"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />
            }
            maxChars={250}
            name="bio"
            validate={[Function]}
          />
          <Field
            component={[Function]}
            id="works"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />
            }
            maxChars={250}
            name="major_works"
          />
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Social links"
          />
          <FieldArray
            component={[Function]}
            name="urls_detailed"
          />
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Areas of expertise"
          />
          <FieldArray
            component={[Function]}
            name="areas_of_expertise"
          />
          <ButtonToolbar
            className=""
            leftJustify={false}
          >
            <Link
              className="btn btn-outline-primary form-cancel-btn"
              disabled={true}
              replace={false}
              to="courses/00000000-0000-0000-0000-000000000000"
            >
              Cancel
            </Link>
            <ActionButton
              className=""
              disabled={true}
              labels={
                Object {
                  "default": "Save",
                  "pending": "Saving",
                }
              }
              primary={true}
              state="default"
            />
          </ButtonToolbar>
        </form>,
        "className": "create-staffer-form",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              className="staffer-image"
              component={[Function]}
              id="profile_image"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Image Requirements:
                      </p>
                      <ul>
                        <li>
                          The image dimensions must be 110×110.
                        </li>
                        <li>
                          The image size must be less than 256KB.
                        </li>
                      </ul>
                    </div>
                  }
                  id="image.label"
                  optional={false}
                  text="Image"
                />
              }
              maxImageSizeKilo={256}
              name="profile_image.medium.url"
              required={false}
              requiredHeight={110}
              requiredWidth={110}
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="First name"
                />
              }
              name="given_name"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Last name"
                />
              }
              name="family_name"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Instructor's title at your organization.
                      </p>
                      <p>
                        <b>
                          Examples:
                        </b>
                      </p>
                      <ul>
                        <li>
                          Professor
                        </li>
                        <li>
                          Content Developer
                        </li>
                        <li>
                          Director
                        </li>
                      </ul>
                    </div>
                  }
                  id="title.label"
                  optional={false}
                  text="Title"
                />
              }
              name="position.title"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Organization"
                />
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />,
            <Field
              component={[Function]}
              id="bio"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Biography"
                />
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />,
            <Field
              component={[Function]}
              id="works"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={true}
                  text="Major works"
                />
              }
              maxChars={250}
              name="major_works"
            />,
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Social links"
            />,
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />,
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Areas of expertise"
            />,
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />,
            <ButtonToolbar
              className=""
              leftJustify={false}
            >
              <Link
                className="btn btn-outline-primary form-cancel-btn"
                disabled={true}
                replace={false}
                to="courses/00000000-0000-0000-0000-000000000000"
              >
                Cancel
              </Link>
              <ActionButton
                className=""
                disabled={true}
                labels={
                  Object {
                    "default": "Save",
                    "pending": "Saving",
                  }
                }
                primary={true}
                state="default"
              />
            </ButtonToolbar>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "staffer-image",
              "component": [Function],
              "id": "profile_image",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />,
              "maxImageSizeKilo": 256,
              "name": "profile_image.medium.url",
              "required": false,
              "requiredHeight": 110,
              "requiredWidth": 110,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />,
              "name": "given_name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />,
              "name": "family_name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />,
              "name": "position.title",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />,
              "name": "position.organization_id",
              "options": Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ],
              "required": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "bio",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />,
              "maxChars": 250,
              "name": "bio",
              "validate": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "works",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />,
              "maxChars": 250,
              "name": "major_works",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": "",
              "id": null,
              "optional": true,
              "text": "Social links",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "urls_detailed",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": "",
              "id": null,
              "optional": true,
              "text": "Areas of expertise",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "areas_of_expertise",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Link
                  className="btn btn-outline-primary form-cancel-btn"
                  disabled={true}
                  replace={false}
                  to="courses/00000000-0000-0000-0000-000000000000"
                >
                  Cancel
                </Link>,
                <ActionButton
                  className=""
                  disabled={true}
                  labels={
                    Object {
                      "default": "Save",
                      "pending": "Saving",
                    }
                  }
                  primary={true}
                  state="default"
                />,
              ],
              "className": "",
              "leftJustify": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cancel",
                  "className": "btn btn-outline-primary form-cancel-btn",
                  "disabled": true,
                  "replace": false,
                  "to": "courses/00000000-0000-0000-0000-000000000000",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "",
                  "disabled": true,
                  "labels": Object {
                    "default": "Save",
                    "pending": "Saving",
                  },
                  "primary": true,
                  "state": "default",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`StafferForm renders correctly with staffer info 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseStafferForm
    handleSubmit={[Function]}
    isCreateForm={false}
    isSaving={false}
    pristine={true}
    sourceInfo={
      Object {
        "referrer": null,
      }
    }
    stafferInfo={
      Object {
        "data": Object {
          "areas_of_expertise": Array [
            Object {
              "id": 10,
              "value": "Experting",
            },
          ],
          "bio": "<p><strong>b</strong>io<i>grapizing</i></p>",
          "email": null,
          "family_name": "er",
          "given_name": "staff",
          "major_works": "<p><em>Workings</em></p>",
          "position": Object {
            "organization_id": 1,
            "organization_marketing_url": null,
            "organization_name": "",
            "organization_override": null,
            "title": "señor",
          },
          "profile_image": Object {
            "medium": Object {
              "height": 110,
              "url": "http://localhost:18381/media/media/people/profile_images/14d7368b-51dc-42de-9952-0870bcd1f5f1-1ffe0424ec10.medium.jpeg",
              "width": 110,
            },
          },
          "profile_image_url": "http://localhost:18381/media/media/people/profile_images/14d7368b-51dc-42de-9952-0870bcd1f5f1-1ffe0424ec10.jpeg",
          "published": true,
          "salutation": null,
          "slug": "staff-er",
          "urls": Object {
            "blog": null,
            "facebook": null,
            "twitter": null,
          },
          "urls_detailed": Array [
            Object {
              "display_title": "Github",
              "id": 10,
              "title": "Github",
              "type": "others",
              "url": "https://github.com/edx",
            },
          ],
          "uuid": "14d7368b-51dc-42de-9952-0870bcd1f5f1",
          "works": Array [],
        },
        "error": null,
        "isFetching": false,
        "isSaving": false,
      }
    }
    stafferOptions={
      Object {
        "data": Object {
          "actions": Object {
            "POST": Object {
              "position": Object {
                "children": Object {
                  "organization": Object {
                    "choices": Array [
                      Object {
                        "display_name": "edX",
                        "value": 1,
                      },
                      Object {
                        "display_name": "bananasX",
                        "value": 2,
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      }
    }
    submitting={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <Field
          className="staffer-image"
          component={[Function]}
          id="profile_image"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Image Requirements:
                  </p>
                  <ul>
                    <li>
                      The image dimensions must be 110×110.
                    </li>
                    <li>
                      The image size must be less than 256KB.
                    </li>
                  </ul>
                </div>
              }
              id="image.label"
              optional={false}
              text="Image"
            />
          }
          maxImageSizeKilo={256}
          name="profile_image.medium.url"
          required={false}
          requiredHeight={110}
          requiredWidth={110}
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="First name"
            />
          }
          name="given_name"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Last name"
            />
          }
          name="family_name"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Instructor's title at your organization.
                  </p>
                  <p>
                    <b>
                      Examples:
                    </b>
                  </p>
                  <ul>
                    <li>
                      Professor
                    </li>
                    <li>
                      Content Developer
                    </li>
                    <li>
                      Director
                    </li>
                  </ul>
                </div>
              }
              id="title.label"
              optional={false}
              text="Title"
            />
          }
          name="position.title"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Organization"
            />
          }
          name="position.organization_id"
          options={
            Array [
              Object {
                "label": "Select instructor organization",
                "value": "",
              },
              Object {
                "label": "edX",
                "value": 1,
              },
              Object {
                "label": "bananasX",
                "value": 2,
              },
            ]
          }
          required={true}
        />
        <Field
          component={[Function]}
          id="bio"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Biography"
            />
          }
          maxChars={250}
          name="bio"
          validate={[Function]}
        />
        <Field
          component={[Function]}
          id="works"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Major works"
            />
          }
          maxChars={250}
          name="major_works"
        />
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={true}
          text="Social links"
        />
        <FieldArray
          component={[Function]}
          name="urls_detailed"
        />
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={true}
          text="Areas of expertise"
        />
        <FieldArray
          component={[Function]}
          name="areas_of_expertise"
        />
        <ButtonToolbar
          className=""
          leftJustify={false}
        >
          <Link
            className="btn btn-outline-primary form-cancel-btn"
            disabled={true}
            replace={false}
            to="/"
          >
            Cancel
          </Link>
          <ActionButton
            className=""
            disabled={true}
            labels={
              Object {
                "default": "Save",
                "pending": "Saving",
              }
            }
            primary={true}
            state="default"
          />
        </ButtonToolbar>
      </form>,
      "className": "create-staffer-form",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Field
            className="staffer-image"
            component={[Function]}
            id="profile_image"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />
            }
            maxImageSizeKilo={256}
            name="profile_image.medium.url"
            required={false}
            requiredHeight={110}
            requiredWidth={110}
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />
            }
            name="given_name"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />
            }
            name="family_name"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />
            }
            name="position.title"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />
            }
            name="position.organization_id"
            options={
              Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            id="bio"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />
            }
            maxChars={250}
            name="bio"
            validate={[Function]}
          />,
          <Field
            component={[Function]}
            id="works"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />
            }
            maxChars={250}
            name="major_works"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Social links"
          />,
          <FieldArray
            component={[Function]}
            name="urls_detailed"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Areas of expertise"
          />,
          <FieldArray
            component={[Function]}
            name="areas_of_expertise"
          />,
          <ButtonToolbar
            className=""
            leftJustify={false}
          >
            <Link
              className="btn btn-outline-primary form-cancel-btn"
              disabled={true}
              replace={false}
              to="/"
            >
              Cancel
            </Link>
            <ActionButton
              className=""
              disabled={true}
              labels={
                Object {
                  "default": "Save",
                  "pending": "Saving",
                }
              }
              primary={true}
              state="default"
            />
          </ButtonToolbar>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "staffer-image",
            "component": [Function],
            "id": "profile_image",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Image Requirements:
                  </p>
                  <ul>
                    <li>
                      The image dimensions must be 110×110.
                    </li>
                    <li>
                      The image size must be less than 256KB.
                    </li>
                  </ul>
                </div>
              }
              id="image.label"
              optional={false}
              text="Image"
            />,
            "maxImageSizeKilo": 256,
            "name": "profile_image.medium.url",
            "required": false,
            "requiredHeight": 110,
            "requiredWidth": 110,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="First name"
            />,
            "name": "given_name",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Last name"
            />,
            "name": "family_name",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Instructor's title at your organization.
                  </p>
                  <p>
                    <b>
                      Examples:
                    </b>
                  </p>
                  <ul>
                    <li>
                      Professor
                    </li>
                    <li>
                      Content Developer
                    </li>
                    <li>
                      Director
                    </li>
                  </ul>
                </div>
              }
              id="title.label"
              optional={false}
              text="Title"
            />,
            "name": "position.title",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Organization"
            />,
            "name": "position.organization_id",
            "options": Array [
              Object {
                "label": "Select instructor organization",
                "value": "",
              },
              Object {
                "label": "edX",
                "value": 1,
              },
              Object {
                "label": "bananasX",
                "value": 2,
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "id": "bio",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Biography"
            />,
            "maxChars": 250,
            "name": "bio",
            "validate": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "id": "works",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Major works"
            />,
            "maxChars": 250,
            "name": "major_works",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": true,
            "text": "Social links",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "urls_detailed",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": true,
            "text": "Areas of expertise",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "areas_of_expertise",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Link
                className="btn btn-outline-primary form-cancel-btn"
                disabled={true}
                replace={false}
                to="/"
              >
                Cancel
              </Link>,
              <ActionButton
                className=""
                disabled={true}
                labels={
                  Object {
                    "default": "Save",
                    "pending": "Saving",
                  }
                }
                primary={true}
                state="default"
              />,
            ],
            "className": "",
            "leftJustify": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Cancel",
                "className": "btn btn-outline-primary form-cancel-btn",
                "disabled": true,
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "disabled": true,
                "labels": Object {
                  "default": "Save",
                  "pending": "Saving",
                },
                "primary": true,
                "state": "default",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <Field
            className="staffer-image"
            component={[Function]}
            id="profile_image"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />
            }
            maxImageSizeKilo={256}
            name="profile_image.medium.url"
            required={false}
            requiredHeight={110}
            requiredWidth={110}
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />
            }
            name="given_name"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />
            }
            name="family_name"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />
            }
            name="position.title"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />
            }
            name="position.organization_id"
            options={
              Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ]
            }
            required={true}
          />
          <Field
            component={[Function]}
            id="bio"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />
            }
            maxChars={250}
            name="bio"
            validate={[Function]}
          />
          <Field
            component={[Function]}
            id="works"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />
            }
            maxChars={250}
            name="major_works"
          />
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Social links"
          />
          <FieldArray
            component={[Function]}
            name="urls_detailed"
          />
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Areas of expertise"
          />
          <FieldArray
            component={[Function]}
            name="areas_of_expertise"
          />
          <ButtonToolbar
            className=""
            leftJustify={false}
          >
            <Link
              className="btn btn-outline-primary form-cancel-btn"
              disabled={true}
              replace={false}
              to="/"
            >
              Cancel
            </Link>
            <ActionButton
              className=""
              disabled={true}
              labels={
                Object {
                  "default": "Save",
                  "pending": "Saving",
                }
              }
              primary={true}
              state="default"
            />
          </ButtonToolbar>
        </form>,
        "className": "create-staffer-form",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              className="staffer-image"
              component={[Function]}
              id="profile_image"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Image Requirements:
                      </p>
                      <ul>
                        <li>
                          The image dimensions must be 110×110.
                        </li>
                        <li>
                          The image size must be less than 256KB.
                        </li>
                      </ul>
                    </div>
                  }
                  id="image.label"
                  optional={false}
                  text="Image"
                />
              }
              maxImageSizeKilo={256}
              name="profile_image.medium.url"
              required={false}
              requiredHeight={110}
              requiredWidth={110}
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="First name"
                />
              }
              name="given_name"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Last name"
                />
              }
              name="family_name"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Instructor's title at your organization.
                      </p>
                      <p>
                        <b>
                          Examples:
                        </b>
                      </p>
                      <ul>
                        <li>
                          Professor
                        </li>
                        <li>
                          Content Developer
                        </li>
                        <li>
                          Director
                        </li>
                      </ul>
                    </div>
                  }
                  id="title.label"
                  optional={false}
                  text="Title"
                />
              }
              name="position.title"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Organization"
                />
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />,
            <Field
              component={[Function]}
              id="bio"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Biography"
                />
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />,
            <Field
              component={[Function]}
              id="works"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={true}
                  text="Major works"
                />
              }
              maxChars={250}
              name="major_works"
            />,
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Social links"
            />,
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />,
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Areas of expertise"
            />,
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />,
            <ButtonToolbar
              className=""
              leftJustify={false}
            >
              <Link
                className="btn btn-outline-primary form-cancel-btn"
                disabled={true}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <ActionButton
                className=""
                disabled={true}
                labels={
                  Object {
                    "default": "Save",
                    "pending": "Saving",
                  }
                }
                primary={true}
                state="default"
              />
            </ButtonToolbar>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "staffer-image",
              "component": [Function],
              "id": "profile_image",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />,
              "maxImageSizeKilo": 256,
              "name": "profile_image.medium.url",
              "required": false,
              "requiredHeight": 110,
              "requiredWidth": 110,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />,
              "name": "given_name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />,
              "name": "family_name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />,
              "name": "position.title",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />,
              "name": "position.organization_id",
              "options": Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ],
              "required": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "bio",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />,
              "maxChars": 250,
              "name": "bio",
              "validate": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "works",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />,
              "maxChars": 250,
              "name": "major_works",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": "",
              "id": null,
              "optional": true,
              "text": "Social links",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "urls_detailed",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": "",
              "id": null,
              "optional": true,
              "text": "Areas of expertise",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "areas_of_expertise",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Link
                  className="btn btn-outline-primary form-cancel-btn"
                  disabled={true}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>,
                <ActionButton
                  className=""
                  disabled={true}
                  labels={
                    Object {
                      "default": "Save",
                      "pending": "Saving",
                    }
                  }
                  primary={true}
                  state="default"
                />,
              ],
              "className": "",
              "leftJustify": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cancel",
                  "className": "btn btn-outline-primary form-cancel-btn",
                  "disabled": true,
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "",
                  "disabled": true,
                  "labels": Object {
                    "default": "Save",
                    "pending": "Saving",
                  },
                  "primary": true,
                  "state": "default",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`StafferForm renders html correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseStafferForm
    handleSubmit={[Function]}
    isCreateForm={false}
    isSaving={false}
    pristine={true}
    sourceInfo={
      Object {
        "referrer": null,
      }
    }
    stafferOptions={
      Object {
        "data": Object {
          "actions": Object {
            "POST": Object {
              "position": Object {
                "children": Object {
                  "organization": Object {
                    "choices": Array [
                      Object {
                        "display_name": "edX",
                        "value": 1,
                      },
                      Object {
                        "display_name": "bananasX",
                        "value": 2,
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      }
    }
    submitting={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <Field
          className="staffer-image"
          component={[Function]}
          id="profile_image"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Image Requirements:
                  </p>
                  <ul>
                    <li>
                      The image dimensions must be 110×110.
                    </li>
                    <li>
                      The image size must be less than 256KB.
                    </li>
                  </ul>
                </div>
              }
              id="image.label"
              optional={false}
              text="Image"
            />
          }
          maxImageSizeKilo={256}
          name="profile_image.medium.url"
          required={false}
          requiredHeight={110}
          requiredWidth={110}
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="First name"
            />
          }
          name="given_name"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Last name"
            />
          }
          name="family_name"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Instructor's title at your organization.
                  </p>
                  <p>
                    <b>
                      Examples:
                    </b>
                  </p>
                  <ul>
                    <li>
                      Professor
                    </li>
                    <li>
                      Content Developer
                    </li>
                    <li>
                      Director
                    </li>
                  </ul>
                </div>
              }
              id="title.label"
              optional={false}
              text="Title"
            />
          }
          name="position.title"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Organization"
            />
          }
          name="position.organization_id"
          options={
            Array [
              Object {
                "label": "Select instructor organization",
                "value": "",
              },
              Object {
                "label": "edX",
                "value": 1,
              },
              Object {
                "label": "bananasX",
                "value": 2,
              },
            ]
          }
          required={true}
        />
        <Field
          component={[Function]}
          id="bio"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Biography"
            />
          }
          maxChars={250}
          name="bio"
          validate={[Function]}
        />
        <Field
          component={[Function]}
          id="works"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Major works"
            />
          }
          maxChars={250}
          name="major_works"
        />
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={true}
          text="Social links"
        />
        <FieldArray
          component={[Function]}
          name="urls_detailed"
        />
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={true}
          text="Areas of expertise"
        />
        <FieldArray
          component={[Function]}
          name="areas_of_expertise"
        />
        <ButtonToolbar
          className=""
          leftJustify={false}
        >
          <Link
            className="btn btn-outline-primary form-cancel-btn"
            disabled={true}
            replace={false}
            to="/"
          >
            Cancel
          </Link>
          <ActionButton
            className=""
            disabled={true}
            labels={
              Object {
                "default": "Save",
                "pending": "Saving",
              }
            }
            primary={true}
            state="default"
          />
        </ButtonToolbar>
      </form>,
      "className": "create-staffer-form",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Field
            className="staffer-image"
            component={[Function]}
            id="profile_image"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />
            }
            maxImageSizeKilo={256}
            name="profile_image.medium.url"
            required={false}
            requiredHeight={110}
            requiredWidth={110}
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />
            }
            name="given_name"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />
            }
            name="family_name"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />
            }
            name="position.title"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />
            }
            name="position.organization_id"
            options={
              Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            id="bio"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />
            }
            maxChars={250}
            name="bio"
            validate={[Function]}
          />,
          <Field
            component={[Function]}
            id="works"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />
            }
            maxChars={250}
            name="major_works"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Social links"
          />,
          <FieldArray
            component={[Function]}
            name="urls_detailed"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Areas of expertise"
          />,
          <FieldArray
            component={[Function]}
            name="areas_of_expertise"
          />,
          <ButtonToolbar
            className=""
            leftJustify={false}
          >
            <Link
              className="btn btn-outline-primary form-cancel-btn"
              disabled={true}
              replace={false}
              to="/"
            >
              Cancel
            </Link>
            <ActionButton
              className=""
              disabled={true}
              labels={
                Object {
                  "default": "Save",
                  "pending": "Saving",
                }
              }
              primary={true}
              state="default"
            />
          </ButtonToolbar>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "staffer-image",
            "component": [Function],
            "id": "profile_image",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Image Requirements:
                  </p>
                  <ul>
                    <li>
                      The image dimensions must be 110×110.
                    </li>
                    <li>
                      The image size must be less than 256KB.
                    </li>
                  </ul>
                </div>
              }
              id="image.label"
              optional={false}
              text="Image"
            />,
            "maxImageSizeKilo": 256,
            "name": "profile_image.medium.url",
            "required": false,
            "requiredHeight": 110,
            "requiredWidth": 110,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="First name"
            />,
            "name": "given_name",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Last name"
            />,
            "name": "family_name",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Instructor's title at your organization.
                  </p>
                  <p>
                    <b>
                      Examples:
                    </b>
                  </p>
                  <ul>
                    <li>
                      Professor
                    </li>
                    <li>
                      Content Developer
                    </li>
                    <li>
                      Director
                    </li>
                  </ul>
                </div>
              }
              id="title.label"
              optional={false}
              text="Title"
            />,
            "name": "position.title",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Organization"
            />,
            "name": "position.organization_id",
            "options": Array [
              Object {
                "label": "Select instructor organization",
                "value": "",
              },
              Object {
                "label": "edX",
                "value": 1,
              },
              Object {
                "label": "bananasX",
                "value": 2,
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "id": "bio",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Biography"
            />,
            "maxChars": 250,
            "name": "bio",
            "validate": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "id": "works",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Major works"
            />,
            "maxChars": 250,
            "name": "major_works",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": true,
            "text": "Social links",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "urls_detailed",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": true,
            "text": "Areas of expertise",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "areas_of_expertise",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Link
                className="btn btn-outline-primary form-cancel-btn"
                disabled={true}
                replace={false}
                to="/"
              >
                Cancel
              </Link>,
              <ActionButton
                className=""
                disabled={true}
                labels={
                  Object {
                    "default": "Save",
                    "pending": "Saving",
                  }
                }
                primary={true}
                state="default"
              />,
            ],
            "className": "",
            "leftJustify": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Cancel",
                "className": "btn btn-outline-primary form-cancel-btn",
                "disabled": true,
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "disabled": true,
                "labels": Object {
                  "default": "Save",
                  "pending": "Saving",
                },
                "primary": true,
                "state": "default",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <Field
            className="staffer-image"
            component={[Function]}
            id="profile_image"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />
            }
            maxImageSizeKilo={256}
            name="profile_image.medium.url"
            required={false}
            requiredHeight={110}
            requiredWidth={110}
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />
            }
            name="given_name"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />
            }
            name="family_name"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />
            }
            name="position.title"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />
            }
            name="position.organization_id"
            options={
              Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ]
            }
            required={true}
          />
          <Field
            component={[Function]}
            id="bio"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />
            }
            maxChars={250}
            name="bio"
            validate={[Function]}
          />
          <Field
            component={[Function]}
            id="works"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />
            }
            maxChars={250}
            name="major_works"
          />
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Social links"
          />
          <FieldArray
            component={[Function]}
            name="urls_detailed"
          />
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Areas of expertise"
          />
          <FieldArray
            component={[Function]}
            name="areas_of_expertise"
          />
          <ButtonToolbar
            className=""
            leftJustify={false}
          >
            <Link
              className="btn btn-outline-primary form-cancel-btn"
              disabled={true}
              replace={false}
              to="/"
            >
              Cancel
            </Link>
            <ActionButton
              className=""
              disabled={true}
              labels={
                Object {
                  "default": "Save",
                  "pending": "Saving",
                }
              }
              primary={true}
              state="default"
            />
          </ButtonToolbar>
        </form>,
        "className": "create-staffer-form",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              className="staffer-image"
              component={[Function]}
              id="profile_image"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Image Requirements:
                      </p>
                      <ul>
                        <li>
                          The image dimensions must be 110×110.
                        </li>
                        <li>
                          The image size must be less than 256KB.
                        </li>
                      </ul>
                    </div>
                  }
                  id="image.label"
                  optional={false}
                  text="Image"
                />
              }
              maxImageSizeKilo={256}
              name="profile_image.medium.url"
              required={false}
              requiredHeight={110}
              requiredWidth={110}
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="First name"
                />
              }
              name="given_name"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Last name"
                />
              }
              name="family_name"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Instructor's title at your organization.
                      </p>
                      <p>
                        <b>
                          Examples:
                        </b>
                      </p>
                      <ul>
                        <li>
                          Professor
                        </li>
                        <li>
                          Content Developer
                        </li>
                        <li>
                          Director
                        </li>
                      </ul>
                    </div>
                  }
                  id="title.label"
                  optional={false}
                  text="Title"
                />
              }
              name="position.title"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Organization"
                />
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />,
            <Field
              component={[Function]}
              id="bio"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Biography"
                />
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />,
            <Field
              component={[Function]}
              id="works"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={true}
                  text="Major works"
                />
              }
              maxChars={250}
              name="major_works"
            />,
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Social links"
            />,
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />,
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Areas of expertise"
            />,
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />,
            <ButtonToolbar
              className=""
              leftJustify={false}
            >
              <Link
                className="btn btn-outline-primary form-cancel-btn"
                disabled={true}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <ActionButton
                className=""
                disabled={true}
                labels={
                  Object {
                    "default": "Save",
                    "pending": "Saving",
                  }
                }
                primary={true}
                state="default"
              />
            </ButtonToolbar>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "staffer-image",
              "component": [Function],
              "id": "profile_image",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />,
              "maxImageSizeKilo": 256,
              "name": "profile_image.medium.url",
              "required": false,
              "requiredHeight": 110,
              "requiredWidth": 110,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />,
              "name": "given_name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />,
              "name": "family_name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />,
              "name": "position.title",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />,
              "name": "position.organization_id",
              "options": Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ],
              "required": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "bio",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />,
              "maxChars": 250,
              "name": "bio",
              "validate": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "works",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />,
              "maxChars": 250,
              "name": "major_works",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": "",
              "id": null,
              "optional": true,
              "text": "Social links",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "urls_detailed",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": "",
              "id": null,
              "optional": true,
              "text": "Areas of expertise",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "areas_of_expertise",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Link
                  className="btn btn-outline-primary form-cancel-btn"
                  disabled={true}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>,
                <ActionButton
                  className=""
                  disabled={true}
                  labels={
                    Object {
                      "default": "Save",
                      "pending": "Saving",
                    }
                  }
                  primary={true}
                  state="default"
                />,
              ],
              "className": "",
              "leftJustify": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cancel",
                  "className": "btn btn-outline-primary form-cancel-btn",
                  "disabled": true,
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "",
                  "disabled": true,
                  "labels": Object {
                    "default": "Save",
                    "pending": "Saving",
                  },
                  "primary": true,
                  "state": "default",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`StafferForm renders html correctly when creating 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseStafferForm
    handleSubmit={[Function]}
    isCreateForm={false}
    isSaving={true}
    pristine={false}
    sourceInfo={
      Object {
        "referrer": null,
      }
    }
    stafferOptions={
      Object {
        "data": Object {
          "actions": Object {
            "POST": Object {
              "position": Object {
                "children": Object {
                  "organization": Object {
                    "choices": Array [
                      Object {
                        "display_name": "edX",
                        "value": 1,
                      },
                      Object {
                        "display_name": "bananasX",
                        "value": 2,
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      }
    }
    submitting={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <Field
          className="staffer-image"
          component={[Function]}
          id="profile_image"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Image Requirements:
                  </p>
                  <ul>
                    <li>
                      The image dimensions must be 110×110.
                    </li>
                    <li>
                      The image size must be less than 256KB.
                    </li>
                  </ul>
                </div>
              }
              id="image.label"
              optional={false}
              text="Image"
            />
          }
          maxImageSizeKilo={256}
          name="profile_image.medium.url"
          required={false}
          requiredHeight={110}
          requiredWidth={110}
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="First name"
            />
          }
          name="given_name"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Last name"
            />
          }
          name="family_name"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Instructor's title at your organization.
                  </p>
                  <p>
                    <b>
                      Examples:
                    </b>
                  </p>
                  <ul>
                    <li>
                      Professor
                    </li>
                    <li>
                      Content Developer
                    </li>
                    <li>
                      Director
                    </li>
                  </ul>
                </div>
              }
              id="title.label"
              optional={false}
              text="Title"
            />
          }
          name="position.title"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Organization"
            />
          }
          name="position.organization_id"
          options={
            Array [
              Object {
                "label": "Select instructor organization",
                "value": "",
              },
              Object {
                "label": "edX",
                "value": 1,
              },
              Object {
                "label": "bananasX",
                "value": 2,
              },
            ]
          }
          required={true}
        />
        <Field
          component={[Function]}
          id="bio"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Biography"
            />
          }
          maxChars={250}
          name="bio"
          validate={[Function]}
        />
        <Field
          component={[Function]}
          id="works"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Major works"
            />
          }
          maxChars={250}
          name="major_works"
        />
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={true}
          text="Social links"
        />
        <FieldArray
          component={[Function]}
          name="urls_detailed"
        />
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={true}
          text="Areas of expertise"
        />
        <FieldArray
          component={[Function]}
          name="areas_of_expertise"
        />
        <ButtonToolbar
          className=""
          leftJustify={false}
        >
          <Link
            className="btn btn-outline-primary form-cancel-btn"
            disabled={true}
            replace={false}
            to="/"
          >
            Cancel
          </Link>
          <ActionButton
            className=""
            disabled={true}
            labels={
              Object {
                "default": "Save",
                "pending": "Saving",
              }
            }
            primary={true}
            state="pending"
          />
        </ButtonToolbar>
      </form>,
      "className": "create-staffer-form",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Field
            className="staffer-image"
            component={[Function]}
            id="profile_image"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />
            }
            maxImageSizeKilo={256}
            name="profile_image.medium.url"
            required={false}
            requiredHeight={110}
            requiredWidth={110}
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />
            }
            name="given_name"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />
            }
            name="family_name"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />
            }
            name="position.title"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />
            }
            name="position.organization_id"
            options={
              Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            id="bio"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />
            }
            maxChars={250}
            name="bio"
            validate={[Function]}
          />,
          <Field
            component={[Function]}
            id="works"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />
            }
            maxChars={250}
            name="major_works"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Social links"
          />,
          <FieldArray
            component={[Function]}
            name="urls_detailed"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Areas of expertise"
          />,
          <FieldArray
            component={[Function]}
            name="areas_of_expertise"
          />,
          <ButtonToolbar
            className=""
            leftJustify={false}
          >
            <Link
              className="btn btn-outline-primary form-cancel-btn"
              disabled={true}
              replace={false}
              to="/"
            >
              Cancel
            </Link>
            <ActionButton
              className=""
              disabled={true}
              labels={
                Object {
                  "default": "Save",
                  "pending": "Saving",
                }
              }
              primary={true}
              state="pending"
            />
          </ButtonToolbar>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "staffer-image",
            "component": [Function],
            "id": "profile_image",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Image Requirements:
                  </p>
                  <ul>
                    <li>
                      The image dimensions must be 110×110.
                    </li>
                    <li>
                      The image size must be less than 256KB.
                    </li>
                  </ul>
                </div>
              }
              id="image.label"
              optional={false}
              text="Image"
            />,
            "maxImageSizeKilo": 256,
            "name": "profile_image.medium.url",
            "required": false,
            "requiredHeight": 110,
            "requiredWidth": 110,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="First name"
            />,
            "name": "given_name",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Last name"
            />,
            "name": "family_name",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Instructor's title at your organization.
                  </p>
                  <p>
                    <b>
                      Examples:
                    </b>
                  </p>
                  <ul>
                    <li>
                      Professor
                    </li>
                    <li>
                      Content Developer
                    </li>
                    <li>
                      Director
                    </li>
                  </ul>
                </div>
              }
              id="title.label"
              optional={false}
              text="Title"
            />,
            "name": "position.title",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Organization"
            />,
            "name": "position.organization_id",
            "options": Array [
              Object {
                "label": "Select instructor organization",
                "value": "",
              },
              Object {
                "label": "edX",
                "value": 1,
              },
              Object {
                "label": "bananasX",
                "value": 2,
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "id": "bio",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Biography"
            />,
            "maxChars": 250,
            "name": "bio",
            "validate": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "id": "works",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Major works"
            />,
            "maxChars": 250,
            "name": "major_works",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": true,
            "text": "Social links",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "urls_detailed",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": true,
            "text": "Areas of expertise",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "areas_of_expertise",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Link
                className="btn btn-outline-primary form-cancel-btn"
                disabled={true}
                replace={false}
                to="/"
              >
                Cancel
              </Link>,
              <ActionButton
                className=""
                disabled={true}
                labels={
                  Object {
                    "default": "Save",
                    "pending": "Saving",
                  }
                }
                primary={true}
                state="pending"
              />,
            ],
            "className": "",
            "leftJustify": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Cancel",
                "className": "btn btn-outline-primary form-cancel-btn",
                "disabled": true,
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "disabled": true,
                "labels": Object {
                  "default": "Save",
                  "pending": "Saving",
                },
                "primary": true,
                "state": "pending",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <Field
            className="staffer-image"
            component={[Function]}
            id="profile_image"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />
            }
            maxImageSizeKilo={256}
            name="profile_image.medium.url"
            required={false}
            requiredHeight={110}
            requiredWidth={110}
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />
            }
            name="given_name"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />
            }
            name="family_name"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />
            }
            name="position.title"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />
            }
            name="position.organization_id"
            options={
              Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ]
            }
            required={true}
          />
          <Field
            component={[Function]}
            id="bio"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />
            }
            maxChars={250}
            name="bio"
            validate={[Function]}
          />
          <Field
            component={[Function]}
            id="works"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />
            }
            maxChars={250}
            name="major_works"
          />
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Social links"
          />
          <FieldArray
            component={[Function]}
            name="urls_detailed"
          />
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Areas of expertise"
          />
          <FieldArray
            component={[Function]}
            name="areas_of_expertise"
          />
          <ButtonToolbar
            className=""
            leftJustify={false}
          >
            <Link
              className="btn btn-outline-primary form-cancel-btn"
              disabled={true}
              replace={false}
              to="/"
            >
              Cancel
            </Link>
            <ActionButton
              className=""
              disabled={true}
              labels={
                Object {
                  "default": "Save",
                  "pending": "Saving",
                }
              }
              primary={true}
              state="pending"
            />
          </ButtonToolbar>
        </form>,
        "className": "create-staffer-form",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              className="staffer-image"
              component={[Function]}
              id="profile_image"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Image Requirements:
                      </p>
                      <ul>
                        <li>
                          The image dimensions must be 110×110.
                        </li>
                        <li>
                          The image size must be less than 256KB.
                        </li>
                      </ul>
                    </div>
                  }
                  id="image.label"
                  optional={false}
                  text="Image"
                />
              }
              maxImageSizeKilo={256}
              name="profile_image.medium.url"
              required={false}
              requiredHeight={110}
              requiredWidth={110}
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="First name"
                />
              }
              name="given_name"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Last name"
                />
              }
              name="family_name"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Instructor's title at your organization.
                      </p>
                      <p>
                        <b>
                          Examples:
                        </b>
                      </p>
                      <ul>
                        <li>
                          Professor
                        </li>
                        <li>
                          Content Developer
                        </li>
                        <li>
                          Director
                        </li>
                      </ul>
                    </div>
                  }
                  id="title.label"
                  optional={false}
                  text="Title"
                />
              }
              name="position.title"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Organization"
                />
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />,
            <Field
              component={[Function]}
              id="bio"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Biography"
                />
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />,
            <Field
              component={[Function]}
              id="works"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={true}
                  text="Major works"
                />
              }
              maxChars={250}
              name="major_works"
            />,
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Social links"
            />,
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />,
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Areas of expertise"
            />,
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />,
            <ButtonToolbar
              className=""
              leftJustify={false}
            >
              <Link
                className="btn btn-outline-primary form-cancel-btn"
                disabled={true}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <ActionButton
                className=""
                disabled={true}
                labels={
                  Object {
                    "default": "Save",
                    "pending": "Saving",
                  }
                }
                primary={true}
                state="pending"
              />
            </ButtonToolbar>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "staffer-image",
              "component": [Function],
              "id": "profile_image",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />,
              "maxImageSizeKilo": 256,
              "name": "profile_image.medium.url",
              "required": false,
              "requiredHeight": 110,
              "requiredWidth": 110,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />,
              "name": "given_name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />,
              "name": "family_name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />,
              "name": "position.title",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />,
              "name": "position.organization_id",
              "options": Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ],
              "required": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "bio",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />,
              "maxChars": 250,
              "name": "bio",
              "validate": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "works",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />,
              "maxChars": 250,
              "name": "major_works",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": "",
              "id": null,
              "optional": true,
              "text": "Social links",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "urls_detailed",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": "",
              "id": null,
              "optional": true,
              "text": "Areas of expertise",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "areas_of_expertise",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Link
                  className="btn btn-outline-primary form-cancel-btn"
                  disabled={true}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>,
                <ActionButton
                  className=""
                  disabled={true}
                  labels={
                    Object {
                      "default": "Save",
                      "pending": "Saving",
                    }
                  }
                  primary={true}
                  state="pending"
                />,
              ],
              "className": "",
              "leftJustify": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cancel",
                  "className": "btn btn-outline-primary form-cancel-btn",
                  "disabled": true,
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "",
                  "disabled": true,
                  "labels": Object {
                    "default": "Save",
                    "pending": "Saving",
                  },
                  "primary": true,
                  "state": "pending",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`StafferForm renders html correctly when submitting 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseStafferForm
    handleSubmit={[Function]}
    isCreateForm={false}
    isSaving={false}
    pristine={false}
    sourceInfo={
      Object {
        "referrer": null,
      }
    }
    stafferOptions={
      Object {
        "data": Object {
          "actions": Object {
            "POST": Object {
              "position": Object {
                "children": Object {
                  "organization": Object {
                    "choices": Array [
                      Object {
                        "display_name": "edX",
                        "value": 1,
                      },
                      Object {
                        "display_name": "bananasX",
                        "value": 2,
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      }
    }
    submitting={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <Field
          className="staffer-image"
          component={[Function]}
          id="profile_image"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Image Requirements:
                  </p>
                  <ul>
                    <li>
                      The image dimensions must be 110×110.
                    </li>
                    <li>
                      The image size must be less than 256KB.
                    </li>
                  </ul>
                </div>
              }
              id="image.label"
              optional={false}
              text="Image"
            />
          }
          maxImageSizeKilo={256}
          name="profile_image.medium.url"
          required={false}
          requiredHeight={110}
          requiredWidth={110}
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="First name"
            />
          }
          name="given_name"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Last name"
            />
          }
          name="family_name"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Instructor's title at your organization.
                  </p>
                  <p>
                    <b>
                      Examples:
                    </b>
                  </p>
                  <ul>
                    <li>
                      Professor
                    </li>
                    <li>
                      Content Developer
                    </li>
                    <li>
                      Director
                    </li>
                  </ul>
                </div>
              }
              id="title.label"
              optional={false}
              text="Title"
            />
          }
          name="position.title"
          required={true}
          type="text"
        />
        <Field
          component={[Function]}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Organization"
            />
          }
          name="position.organization_id"
          options={
            Array [
              Object {
                "label": "Select instructor organization",
                "value": "",
              },
              Object {
                "label": "edX",
                "value": 1,
              },
              Object {
                "label": "bananasX",
                "value": 2,
              },
            ]
          }
          required={true}
        />
        <Field
          component={[Function]}
          id="bio"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Biography"
            />
          }
          maxChars={250}
          name="bio"
          validate={[Function]}
        />
        <Field
          component={[Function]}
          id="works"
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Major works"
            />
          }
          maxChars={250}
          name="major_works"
        />
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={true}
          text="Social links"
        />
        <FieldArray
          component={[Function]}
          name="urls_detailed"
        />
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={true}
          text="Areas of expertise"
        />
        <FieldArray
          component={[Function]}
          name="areas_of_expertise"
        />
        <ButtonToolbar
          className=""
          leftJustify={false}
        >
          <Link
            className="btn btn-outline-primary form-cancel-btn"
            disabled={false}
            replace={false}
            to="/"
          >
            Cancel
          </Link>
          <ActionButton
            className=""
            disabled={false}
            labels={
              Object {
                "default": "Save",
                "pending": "Saving",
              }
            }
            primary={true}
            state="default"
          />
        </ButtonToolbar>
      </form>,
      "className": "create-staffer-form",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Field
            className="staffer-image"
            component={[Function]}
            id="profile_image"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />
            }
            maxImageSizeKilo={256}
            name="profile_image.medium.url"
            required={false}
            requiredHeight={110}
            requiredWidth={110}
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />
            }
            name="given_name"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />
            }
            name="family_name"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />
            }
            name="position.title"
            required={true}
            type="text"
          />,
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />
            }
            name="position.organization_id"
            options={
              Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            id="bio"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />
            }
            maxChars={250}
            name="bio"
            validate={[Function]}
          />,
          <Field
            component={[Function]}
            id="works"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />
            }
            maxChars={250}
            name="major_works"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Social links"
          />,
          <FieldArray
            component={[Function]}
            name="urls_detailed"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Areas of expertise"
          />,
          <FieldArray
            component={[Function]}
            name="areas_of_expertise"
          />,
          <ButtonToolbar
            className=""
            leftJustify={false}
          >
            <Link
              className="btn btn-outline-primary form-cancel-btn"
              disabled={false}
              replace={false}
              to="/"
            >
              Cancel
            </Link>
            <ActionButton
              className=""
              disabled={false}
              labels={
                Object {
                  "default": "Save",
                  "pending": "Saving",
                }
              }
              primary={true}
              state="default"
            />
          </ButtonToolbar>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "staffer-image",
            "component": [Function],
            "id": "profile_image",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Image Requirements:
                  </p>
                  <ul>
                    <li>
                      The image dimensions must be 110×110.
                    </li>
                    <li>
                      The image size must be less than 256KB.
                    </li>
                  </ul>
                </div>
              }
              id="image.label"
              optional={false}
              text="Image"
            />,
            "maxImageSizeKilo": 256,
            "name": "profile_image.medium.url",
            "required": false,
            "requiredHeight": 110,
            "requiredWidth": 110,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="First name"
            />,
            "name": "given_name",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Last name"
            />,
            "name": "family_name",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Instructor's title at your organization.
                  </p>
                  <p>
                    <b>
                      Examples:
                    </b>
                  </p>
                  <ul>
                    <li>
                      Professor
                    </li>
                    <li>
                      Content Developer
                    </li>
                    <li>
                      Director
                    </li>
                  </ul>
                </div>
              }
              id="title.label"
              optional={false}
              text="Title"
            />,
            "name": "position.title",
            "required": true,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Organization"
            />,
            "name": "position.organization_id",
            "options": Array [
              Object {
                "label": "Select instructor organization",
                "value": "",
              },
              Object {
                "label": "edX",
                "value": 1,
              },
              Object {
                "label": "bananasX",
                "value": 2,
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "id": "bio",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Biography"
            />,
            "maxChars": 250,
            "name": "bio",
            "validate": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "id": "works",
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Major works"
            />,
            "maxChars": 250,
            "name": "major_works",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": true,
            "text": "Social links",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "urls_detailed",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": true,
            "text": "Areas of expertise",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "areas_of_expertise",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Link
                className="btn btn-outline-primary form-cancel-btn"
                disabled={false}
                replace={false}
                to="/"
              >
                Cancel
              </Link>,
              <ActionButton
                className=""
                disabled={false}
                labels={
                  Object {
                    "default": "Save",
                    "pending": "Saving",
                  }
                }
                primary={true}
                state="default"
              />,
            ],
            "className": "",
            "leftJustify": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Cancel",
                "className": "btn btn-outline-primary form-cancel-btn",
                "disabled": false,
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "disabled": false,
                "labels": Object {
                  "default": "Save",
                  "pending": "Saving",
                },
                "primary": true,
                "state": "default",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <Field
            className="staffer-image"
            component={[Function]}
            id="profile_image"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />
            }
            maxImageSizeKilo={256}
            name="profile_image.medium.url"
            required={false}
            requiredHeight={110}
            requiredWidth={110}
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />
            }
            name="given_name"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />
            }
            name="family_name"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />
            }
            name="position.title"
            required={true}
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />
            }
            name="position.organization_id"
            options={
              Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ]
            }
            required={true}
          />
          <Field
            component={[Function]}
            id="bio"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />
            }
            maxChars={250}
            name="bio"
            validate={[Function]}
          />
          <Field
            component={[Function]}
            id="works"
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />
            }
            maxChars={250}
            name="major_works"
          />
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Social links"
          />
          <FieldArray
            component={[Function]}
            name="urls_detailed"
          />
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={true}
            text="Areas of expertise"
          />
          <FieldArray
            component={[Function]}
            name="areas_of_expertise"
          />
          <ButtonToolbar
            className=""
            leftJustify={false}
          >
            <Link
              className="btn btn-outline-primary form-cancel-btn"
              disabled={false}
              replace={false}
              to="/"
            >
              Cancel
            </Link>
            <ActionButton
              className=""
              disabled={false}
              labels={
                Object {
                  "default": "Save",
                  "pending": "Saving",
                }
              }
              primary={true}
              state="default"
            />
          </ButtonToolbar>
        </form>,
        "className": "create-staffer-form",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              className="staffer-image"
              component={[Function]}
              id="profile_image"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Image Requirements:
                      </p>
                      <ul>
                        <li>
                          The image dimensions must be 110×110.
                        </li>
                        <li>
                          The image size must be less than 256KB.
                        </li>
                      </ul>
                    </div>
                  }
                  id="image.label"
                  optional={false}
                  text="Image"
                />
              }
              maxImageSizeKilo={256}
              name="profile_image.medium.url"
              required={false}
              requiredHeight={110}
              requiredWidth={110}
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="First name"
                />
              }
              name="given_name"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Last name"
                />
              }
              name="family_name"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Instructor's title at your organization.
                      </p>
                      <p>
                        <b>
                          Examples:
                        </b>
                      </p>
                      <ul>
                        <li>
                          Professor
                        </li>
                        <li>
                          Content Developer
                        </li>
                        <li>
                          Director
                        </li>
                      </ul>
                    </div>
                  }
                  id="title.label"
                  optional={false}
                  text="Title"
                />
              }
              name="position.title"
              required={true}
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Organization"
                />
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />,
            <Field
              component={[Function]}
              id="bio"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={false}
                  text="Biography"
                />
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />,
            <Field
              component={[Function]}
              id="works"
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText=""
                  id={null}
                  optional={true}
                  text="Major works"
                />
              }
              maxChars={250}
              name="major_works"
            />,
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Social links"
            />,
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />,
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText=""
              id={null}
              optional={true}
              text="Areas of expertise"
            />,
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />,
            <ButtonToolbar
              className=""
              leftJustify={false}
            >
              <Link
                className="btn btn-outline-primary form-cancel-btn"
                disabled={false}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <ActionButton
                className=""
                disabled={false}
                labels={
                  Object {
                    "default": "Save",
                    "pending": "Saving",
                  }
                }
                primary={true}
                state="default"
              />
            </ButtonToolbar>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "staffer-image",
              "component": [Function],
              "id": "profile_image",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Image Requirements:
                    </p>
                    <ul>
                      <li>
                        The image dimensions must be 110×110.
                      </li>
                      <li>
                        The image size must be less than 256KB.
                      </li>
                    </ul>
                  </div>
                }
                id="image.label"
                optional={false}
                text="Image"
              />,
              "maxImageSizeKilo": 256,
              "name": "profile_image.medium.url",
              "required": false,
              "requiredHeight": 110,
              "requiredWidth": 110,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="First name"
              />,
              "name": "given_name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Last name"
              />,
              "name": "family_name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Instructor's title at your organization.
                    </p>
                    <p>
                      <b>
                        Examples:
                      </b>
                    </p>
                    <ul>
                      <li>
                        Professor
                      </li>
                      <li>
                        Content Developer
                      </li>
                      <li>
                        Director
                      </li>
                    </ul>
                  </div>
                }
                id="title.label"
                optional={false}
                text="Title"
              />,
              "name": "position.title",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Organization"
              />,
              "name": "position.organization_id",
              "options": Array [
                Object {
                  "label": "Select instructor organization",
                  "value": "",
                },
                Object {
                  "label": "edX",
                  "value": 1,
                },
                Object {
                  "label": "bananasX",
                  "value": 2,
                },
              ],
              "required": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "bio",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Biography"
              />,
              "maxChars": 250,
              "name": "bio",
              "validate": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "works",
              "label": <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={true}
                text="Major works"
              />,
              "maxChars": 250,
              "name": "major_works",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": "",
              "id": null,
              "optional": true,
              "text": "Social links",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "urls_detailed",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": "",
              "id": null,
              "optional": true,
              "text": "Areas of expertise",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "areas_of_expertise",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Link
                  className="btn btn-outline-primary form-cancel-btn"
                  disabled={false}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>,
                <ActionButton
                  className=""
                  disabled={false}
                  labels={
                    Object {
                      "default": "Save",
                      "pending": "Saving",
                    }
                  }
                  primary={true}
                  state="default"
                />,
              ],
              "className": "",
              "leftJustify": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cancel",
                  "className": "btn btn-outline-primary form-cancel-btn",
                  "disabled": false,
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "",
                  "disabled": false,
                  "labels": Object {
                    "default": "Save",
                    "pending": "Saving",
                  },
                  "primary": true,
                  "state": "default",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
