// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StafferForm renders correctly with staffer info 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseStafferForm
    handleSubmit={[Function]}
    isCreateForm={false}
    isSaving={false}
    pristine={true}
    stafferInfo={
      Object {
        "data": Object {
          "areas_of_expertise": Array [
            Object {
              "id": 10,
              "value": "Experting",
            },
          ],
          "bio": "<p><strong>b</strong>io<i>grapizing</i></p>",
          "email": null,
          "family_name": "er",
          "given_name": "staff",
          "major_works": "<p><em>Workings</em></p>",
          "position": Object {
            "organization_id": 1,
            "organization_marketing_url": null,
            "organization_name": "",
            "organization_override": null,
            "title": "seÃ±or",
          },
          "profile_image": Object {
            "medium": Object {
              "height": 110,
              "url": "http://localhost:18381/media/media/people/profile_images/14d7368b-51dc-42de-9952-0870bcd1f5f1-1ffe0424ec10.medium.jpeg",
              "width": 110,
            },
          },
          "profile_image_url": "http://localhost:18381/media/media/people/profile_images/14d7368b-51dc-42de-9952-0870bcd1f5f1-1ffe0424ec10.jpeg",
          "published": true,
          "salutation": null,
          "slug": "staff-er",
          "urls": Object {
            "blog": null,
            "facebook": null,
            "twitter": null,
          },
          "urls_detailed": Array [
            Object {
              "display_title": "Github",
              "id": 10,
              "title": "Github",
              "type": "others",
              "url": "https://github.com/edx",
            },
          ],
          "uuid": "14d7368b-51dc-42de-9952-0870bcd1f5f1",
          "works": Array [],
        },
        "error": null,
        "isFetching": false,
        "isSaving": false,
      }
    }
    stafferOptions={
      Object {
        "data": Object {
          "actions": Object {
            "POST": Object {
              "position": Object {
                "children": Object {
                  "organization": Object {
                    "choices": Array [
                      Object {
                        "display_name": "edX",
                        "value": 1,
                      },
                      Object {
                        "display_name": "bananasX",
                        "value": 2,
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      }
    }
    submitting={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="create-staffer-form row"
      >
        <div
          className="col"
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="col"
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>,
        "className": "create-staffer-form row",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>,
          "className": "col",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />,
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />,
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />,
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />,
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />,
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "profile_image",
                "label": <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "profile_image.medium.url",
                "required": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "given_name",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "family_name",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "position.title",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "position.organization_id",
                "options": Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ],
                "required": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "bio",
                "label": <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "maxChars": 250,
                "name": "bio",
                "validate": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "works",
                "label": <React.Fragment>
                  Major works (optional)
                </React.Fragment>,
                "maxChars": 250,
                "name": "major_works",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "name": "urls_detailed",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "name": "areas_of_expertise",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    className={
                      Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ]
                    }
                    disabled={true}
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Cancel
                  </Link>,
                  <button
                    className="btn btn-outline-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>,
                ],
                "className": "row justify-content-end",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Cancel",
                    "className": Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ],
                    "disabled": true,
                    "onClick": [Function],
                    "replace": false,
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Submit",
                    "className": "btn btn-outline-primary form-submit-btn",
                    "disabled": true,
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Submit",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="create-staffer-form row"
        >
          <div
            className="col"
          >
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col"
          >
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>,
          "className": "create-staffer-form row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>,
            "className": "col",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Field
                  component={[Function]}
                  id="profile_image"
                  label={
                    <React.Fragment>
                      Image:
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="profile_image.medium.url"
                  required={false}
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      First name
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="given_name"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Last name
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="family_name"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Position
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="position.title"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Organization
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="position.organization_id"
                  options={
                    Array [
                      Object {
                        "label": "Select instructor organization",
                        "value": "",
                      },
                      Object {
                        "label": "edX",
                        "value": 1,
                      },
                      Object {
                        "label": "bananasX",
                        "value": 2,
                      },
                    ]
                  }
                  required={true}
                />,
                <Field
                  component={[Function]}
                  id="bio"
                  label={
                    <React.Fragment>
                      Biography
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  maxChars={250}
                  name="bio"
                  validate={[Function]}
                />,
                <Field
                  component={[Function]}
                  id="works"
                  label={
                    <React.Fragment>
                      Major works (optional)
                    </React.Fragment>
                  }
                  maxChars={250}
                  name="major_works"
                />,
                <FieldArray
                  component={[Function]}
                  name="urls_detailed"
                />,
                <FieldArray
                  component={[Function]}
                  name="areas_of_expertise"
                />,
                <div
                  className="row justify-content-end"
                >
                  <Link
                    className={
                      Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ]
                    }
                    disabled={true}
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Cancel
                  </Link>
                  <button
                    className="btn btn-outline-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>
                </div>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "profile_image",
                  "label": <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "profile_image.medium.url",
                  "required": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "given_name",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "family_name",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "position.title",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "position.organization_id",
                  "options": Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ],
                  "required": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "bio",
                  "label": <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "maxChars": 250,
                  "name": "bio",
                  "validate": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "works",
                  "label": <React.Fragment>
                    Major works (optional)
                  </React.Fragment>,
                  "maxChars": 250,
                  "name": "major_works",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "name": "urls_detailed",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "name": "areas_of_expertise",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Link
                      className={
                        Array [
                          "btn btn-link ml-3 form-cancel-btn",
                        ]
                      }
                      disabled={true}
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Cancel
                    </Link>,
                    <button
                      className="btn btn-outline-primary form-submit-btn"
                      disabled={true}
                      type="submit"
                    >
                      Submit
                    </button>,
                  ],
                  "className": "row justify-content-end",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Cancel",
                      "className": Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ],
                      "disabled": true,
                      "onClick": [Function],
                      "replace": false,
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "Cancel",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Submit",
                      "className": "btn btn-outline-primary form-submit-btn",
                      "disabled": true,
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Submit",
                    "type": "button",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`StafferForm renders html correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseStafferForm
    handleSubmit={[Function]}
    isCreateForm={false}
    isSaving={false}
    pristine={true}
    stafferOptions={
      Object {
        "data": Object {
          "actions": Object {
            "POST": Object {
              "position": Object {
                "children": Object {
                  "organization": Object {
                    "choices": Array [
                      Object {
                        "display_name": "edX",
                        "value": 1,
                      },
                      Object {
                        "display_name": "bananasX",
                        "value": 2,
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      }
    }
    submitting={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="create-staffer-form row"
      >
        <div
          className="col"
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="col"
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>,
        "className": "create-staffer-form row",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>,
          "className": "col",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />,
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />,
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />,
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />,
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />,
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "profile_image",
                "label": <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "profile_image.medium.url",
                "required": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "given_name",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "family_name",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "position.title",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "position.organization_id",
                "options": Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ],
                "required": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "bio",
                "label": <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "maxChars": 250,
                "name": "bio",
                "validate": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "works",
                "label": <React.Fragment>
                  Major works (optional)
                </React.Fragment>,
                "maxChars": 250,
                "name": "major_works",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "name": "urls_detailed",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "name": "areas_of_expertise",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    className={
                      Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ]
                    }
                    disabled={true}
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Cancel
                  </Link>,
                  <button
                    className="btn btn-outline-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>,
                ],
                "className": "row justify-content-end",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Cancel",
                    "className": Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ],
                    "disabled": true,
                    "onClick": [Function],
                    "replace": false,
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Submit",
                    "className": "btn btn-outline-primary form-submit-btn",
                    "disabled": true,
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Submit",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="create-staffer-form row"
        >
          <div
            className="col"
          >
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col"
          >
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>,
          "className": "create-staffer-form row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>,
            "className": "col",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Field
                  component={[Function]}
                  id="profile_image"
                  label={
                    <React.Fragment>
                      Image:
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="profile_image.medium.url"
                  required={false}
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      First name
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="given_name"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Last name
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="family_name"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Position
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="position.title"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Organization
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="position.organization_id"
                  options={
                    Array [
                      Object {
                        "label": "Select instructor organization",
                        "value": "",
                      },
                      Object {
                        "label": "edX",
                        "value": 1,
                      },
                      Object {
                        "label": "bananasX",
                        "value": 2,
                      },
                    ]
                  }
                  required={true}
                />,
                <Field
                  component={[Function]}
                  id="bio"
                  label={
                    <React.Fragment>
                      Biography
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  maxChars={250}
                  name="bio"
                  validate={[Function]}
                />,
                <Field
                  component={[Function]}
                  id="works"
                  label={
                    <React.Fragment>
                      Major works (optional)
                    </React.Fragment>
                  }
                  maxChars={250}
                  name="major_works"
                />,
                <FieldArray
                  component={[Function]}
                  name="urls_detailed"
                />,
                <FieldArray
                  component={[Function]}
                  name="areas_of_expertise"
                />,
                <div
                  className="row justify-content-end"
                >
                  <Link
                    className={
                      Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ]
                    }
                    disabled={true}
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Cancel
                  </Link>
                  <button
                    className="btn btn-outline-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>
                </div>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "profile_image",
                  "label": <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "profile_image.medium.url",
                  "required": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "given_name",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "family_name",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "position.title",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "position.organization_id",
                  "options": Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ],
                  "required": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "bio",
                  "label": <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "maxChars": 250,
                  "name": "bio",
                  "validate": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "works",
                  "label": <React.Fragment>
                    Major works (optional)
                  </React.Fragment>,
                  "maxChars": 250,
                  "name": "major_works",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "name": "urls_detailed",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "name": "areas_of_expertise",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Link
                      className={
                        Array [
                          "btn btn-link ml-3 form-cancel-btn",
                        ]
                      }
                      disabled={true}
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Cancel
                    </Link>,
                    <button
                      className="btn btn-outline-primary form-submit-btn"
                      disabled={true}
                      type="submit"
                    >
                      Submit
                    </button>,
                  ],
                  "className": "row justify-content-end",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Cancel",
                      "className": Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ],
                      "disabled": true,
                      "onClick": [Function],
                      "replace": false,
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "Cancel",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Submit",
                      "className": "btn btn-outline-primary form-submit-btn",
                      "disabled": true,
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Submit",
                    "type": "button",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`StafferForm renders html correctly when creating 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseStafferForm
    handleSubmit={[Function]}
    isCreateForm={false}
    isSaving={true}
    pristine={false}
    stafferOptions={
      Object {
        "data": Object {
          "actions": Object {
            "POST": Object {
              "position": Object {
                "children": Object {
                  "organization": Object {
                    "choices": Array [
                      Object {
                        "display_name": "edX",
                        "value": 1,
                      },
                      Object {
                        "display_name": "bananasX",
                        "value": 2,
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      }
    }
    submitting={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="create-staffer-form row"
      >
        <div
          className="col"
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="col"
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>,
        "className": "create-staffer-form row",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>,
          "className": "col",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />,
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />,
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />,
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />,
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />,
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "profile_image",
                "label": <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "profile_image.medium.url",
                "required": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "given_name",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "family_name",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "position.title",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "position.organization_id",
                "options": Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ],
                "required": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "bio",
                "label": <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "maxChars": 250,
                "name": "bio",
                "validate": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "works",
                "label": <React.Fragment>
                  Major works (optional)
                </React.Fragment>,
                "maxChars": 250,
                "name": "major_works",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "name": "urls_detailed",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "name": "areas_of_expertise",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    className={
                      Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ]
                    }
                    disabled={true}
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Cancel
                  </Link>,
                  <button
                    className="btn btn-outline-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>,
                ],
                "className": "row justify-content-end",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Cancel",
                    "className": Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ],
                    "disabled": true,
                    "onClick": [Function],
                    "replace": false,
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Submit",
                    "className": "btn btn-outline-primary form-submit-btn",
                    "disabled": true,
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Submit",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="create-staffer-form row"
        >
          <div
            className="col"
          >
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col"
          >
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>,
          "className": "create-staffer-form row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>,
            "className": "col",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Field
                  component={[Function]}
                  id="profile_image"
                  label={
                    <React.Fragment>
                      Image:
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="profile_image.medium.url"
                  required={false}
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      First name
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="given_name"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Last name
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="family_name"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Position
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="position.title"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Organization
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="position.organization_id"
                  options={
                    Array [
                      Object {
                        "label": "Select instructor organization",
                        "value": "",
                      },
                      Object {
                        "label": "edX",
                        "value": 1,
                      },
                      Object {
                        "label": "bananasX",
                        "value": 2,
                      },
                    ]
                  }
                  required={true}
                />,
                <Field
                  component={[Function]}
                  id="bio"
                  label={
                    <React.Fragment>
                      Biography
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  maxChars={250}
                  name="bio"
                  validate={[Function]}
                />,
                <Field
                  component={[Function]}
                  id="works"
                  label={
                    <React.Fragment>
                      Major works (optional)
                    </React.Fragment>
                  }
                  maxChars={250}
                  name="major_works"
                />,
                <FieldArray
                  component={[Function]}
                  name="urls_detailed"
                />,
                <FieldArray
                  component={[Function]}
                  name="areas_of_expertise"
                />,
                <div
                  className="row justify-content-end"
                >
                  <Link
                    className={
                      Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ]
                    }
                    disabled={true}
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Cancel
                  </Link>
                  <button
                    className="btn btn-outline-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>
                </div>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "profile_image",
                  "label": <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "profile_image.medium.url",
                  "required": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "given_name",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "family_name",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "position.title",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "position.organization_id",
                  "options": Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ],
                  "required": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "bio",
                  "label": <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "maxChars": 250,
                  "name": "bio",
                  "validate": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "works",
                  "label": <React.Fragment>
                    Major works (optional)
                  </React.Fragment>,
                  "maxChars": 250,
                  "name": "major_works",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "name": "urls_detailed",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "name": "areas_of_expertise",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Link
                      className={
                        Array [
                          "btn btn-link ml-3 form-cancel-btn",
                        ]
                      }
                      disabled={true}
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Cancel
                    </Link>,
                    <button
                      className="btn btn-outline-primary form-submit-btn"
                      disabled={true}
                      type="submit"
                    >
                      Submit
                    </button>,
                  ],
                  "className": "row justify-content-end",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Cancel",
                      "className": Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ],
                      "disabled": true,
                      "onClick": [Function],
                      "replace": false,
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "Cancel",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Submit",
                      "className": "btn btn-outline-primary form-submit-btn",
                      "disabled": true,
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Submit",
                    "type": "button",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`StafferForm renders html correctly when submitting 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BaseStafferForm
    handleSubmit={[Function]}
    isCreateForm={false}
    isSaving={false}
    pristine={false}
    stafferOptions={
      Object {
        "data": Object {
          "actions": Object {
            "POST": Object {
              "position": Object {
                "children": Object {
                  "organization": Object {
                    "choices": Array [
                      Object {
                        "display_name": "edX",
                        "value": 1,
                      },
                      Object {
                        "display_name": "bananasX",
                        "value": 2,
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      }
    }
    submitting={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="create-staffer-form row"
      >
        <div
          className="col"
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="col"
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>
        </div>,
        "className": "create-staffer-form row",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              id="profile_image"
              label={
                <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="profile_image.medium.url"
              required={false}
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="given_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="family_name"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.title"
              required={true}
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="position.organization_id"
              options={
                Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ]
              }
              required={true}
            />
            <Field
              component={[Function]}
              id="bio"
              label={
                <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              maxChars={250}
              name="bio"
              validate={[Function]}
            />
            <Field
              component={[Function]}
              id="works"
              label={
                <React.Fragment>
                  Major works (optional)
                </React.Fragment>
              }
              maxChars={250}
              name="major_works"
            />
            <FieldArray
              component={[Function]}
              name="urls_detailed"
            />
            <FieldArray
              component={[Function]}
              name="areas_of_expertise"
            />
            <div
              className="row justify-content-end"
            >
              <Link
                className={
                  Array [
                    "btn btn-link ml-3 form-cancel-btn",
                  ]
                }
                disabled={true}
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Cancel
              </Link>
              <button
                className="btn btn-outline-primary form-submit-btn"
                disabled={true}
                type="submit"
              >
                Submit
              </button>
            </div>
          </form>,
          "className": "col",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />,
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />,
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />,
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />,
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />,
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "profile_image",
                "label": <React.Fragment>
                  Image:
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "profile_image.medium.url",
                "required": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  First name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "given_name",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Last name
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "family_name",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Position
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "position.title",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Organization
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "position.organization_id",
                "options": Array [
                  Object {
                    "label": "Select instructor organization",
                    "value": "",
                  },
                  Object {
                    "label": "edX",
                    "value": 1,
                  },
                  Object {
                    "label": "bananasX",
                    "value": 2,
                  },
                ],
                "required": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "bio",
                "label": <React.Fragment>
                  Biography
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "maxChars": 250,
                "name": "bio",
                "validate": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "works",
                "label": <React.Fragment>
                  Major works (optional)
                </React.Fragment>,
                "maxChars": 250,
                "name": "major_works",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "name": "urls_detailed",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "name": "areas_of_expertise",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    className={
                      Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ]
                    }
                    disabled={true}
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Cancel
                  </Link>,
                  <button
                    className="btn btn-outline-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>,
                ],
                "className": "row justify-content-end",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Cancel",
                    "className": Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ],
                    "disabled": true,
                    "onClick": [Function],
                    "replace": false,
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Submit",
                    "className": "btn btn-outline-primary form-submit-btn",
                    "disabled": true,
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Submit",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="create-staffer-form row"
        >
          <div
            className="col"
          >
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col"
          >
            <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>,
          "className": "create-staffer-form row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              onSubmit={[Function]}
            >
              <Field
                component={[Function]}
                id="profile_image"
                label={
                  <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="profile_image.medium.url"
                required={false}
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="given_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="family_name"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.title"
                required={true}
                type="text"
              />
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="position.organization_id"
                options={
                  Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ]
                }
                required={true}
              />
              <Field
                component={[Function]}
                id="bio"
                label={
                  <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                maxChars={250}
                name="bio"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                id="works"
                label={
                  <React.Fragment>
                    Major works (optional)
                  </React.Fragment>
                }
                maxChars={250}
                name="major_works"
              />
              <FieldArray
                component={[Function]}
                name="urls_detailed"
              />
              <FieldArray
                component={[Function]}
                name="areas_of_expertise"
              />
              <div
                className="row justify-content-end"
              >
                <Link
                  className={
                    Array [
                      "btn btn-link ml-3 form-cancel-btn",
                    ]
                  }
                  disabled={true}
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  Cancel
                </Link>
                <button
                  className="btn btn-outline-primary form-submit-btn"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </div>
            </form>,
            "className": "col",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Field
                  component={[Function]}
                  id="profile_image"
                  label={
                    <React.Fragment>
                      Image:
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="profile_image.medium.url"
                  required={false}
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      First name
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="given_name"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Last name
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="family_name"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Position
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="position.title"
                  required={true}
                  type="text"
                />,
                <Field
                  component={[Function]}
                  label={
                    <React.Fragment>
                      Organization
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  name="position.organization_id"
                  options={
                    Array [
                      Object {
                        "label": "Select instructor organization",
                        "value": "",
                      },
                      Object {
                        "label": "edX",
                        "value": 1,
                      },
                      Object {
                        "label": "bananasX",
                        "value": 2,
                      },
                    ]
                  }
                  required={true}
                />,
                <Field
                  component={[Function]}
                  id="bio"
                  label={
                    <React.Fragment>
                      Biography
                      <span
                        aria-hidden={true}
                        className="required"
                      >
                        *
                      </span>
                    </React.Fragment>
                  }
                  maxChars={250}
                  name="bio"
                  validate={[Function]}
                />,
                <Field
                  component={[Function]}
                  id="works"
                  label={
                    <React.Fragment>
                      Major works (optional)
                    </React.Fragment>
                  }
                  maxChars={250}
                  name="major_works"
                />,
                <FieldArray
                  component={[Function]}
                  name="urls_detailed"
                />,
                <FieldArray
                  component={[Function]}
                  name="areas_of_expertise"
                />,
                <div
                  className="row justify-content-end"
                >
                  <Link
                    className={
                      Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ]
                    }
                    disabled={true}
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    Cancel
                  </Link>
                  <button
                    className="btn btn-outline-primary form-submit-btn"
                    disabled={true}
                    type="submit"
                  >
                    Submit
                  </button>
                </div>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "profile_image",
                  "label": <React.Fragment>
                    Image:
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "profile_image.medium.url",
                  "required": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    First name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "given_name",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Last name
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "family_name",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Position
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "position.title",
                  "required": true,
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "label": <React.Fragment>
                    Organization
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "name": "position.organization_id",
                  "options": Array [
                    Object {
                      "label": "Select instructor organization",
                      "value": "",
                    },
                    Object {
                      "label": "edX",
                      "value": 1,
                    },
                    Object {
                      "label": "bananasX",
                      "value": 2,
                    },
                  ],
                  "required": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "bio",
                  "label": <React.Fragment>
                    Biography
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>,
                  "maxChars": 250,
                  "name": "bio",
                  "validate": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "works",
                  "label": <React.Fragment>
                    Major works (optional)
                  </React.Fragment>,
                  "maxChars": 250,
                  "name": "major_works",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "name": "urls_detailed",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "name": "areas_of_expertise",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Link
                      className={
                        Array [
                          "btn btn-link ml-3 form-cancel-btn",
                        ]
                      }
                      disabled={true}
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      Cancel
                    </Link>,
                    <button
                      className="btn btn-outline-primary form-submit-btn"
                      disabled={true}
                      type="submit"
                    >
                      Submit
                    </button>,
                  ],
                  "className": "row justify-content-end",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Cancel",
                      "className": Array [
                        "btn btn-link ml-3 form-cancel-btn",
                      ],
                      "disabled": true,
                      "onClick": [Function],
                      "replace": false,
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "Cancel",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Submit",
                      "className": "btn btn-outline-primary form-submit-btn",
                      "disabled": true,
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Submit",
                    "type": "button",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
