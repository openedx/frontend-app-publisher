// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Social links renders correctly when given fields 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SocialLinks
    fields={
      Array [
        Object {},
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ul
          className="list-group p-0 m-0 container-fluid"
        >
          <li
            className="social-link list-group-item row d-flex align-items-center px-0 mx-0"
          >
            <div
              className="col-4"
            >
              <Field
                component={[Function]}
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText=""
                    id={null}
                    required={true}
                    requiredForSubmit={false}
                    text="Type"
                  />
                }
                name="[object Object].type"
                options={
                  Array [
                    Object {
                      "label": "Please select a type",
                      "value": "",
                    },
                    Object {
                      "label": "Facebook",
                      "value": "facebook",
                    },
                    Object {
                      "label": "Twitter",
                      "value": "twitter",
                    },
                    Object {
                      "label": "Blog",
                      "value": "blog",
                    },
                    Object {
                      "label": "Other",
                      "value": "others",
                    },
                  ]
                }
                required={true}
              />
            </div>
            <div
              className="col-3"
            >
              <Field
                component={[Function]}
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText=""
                    id={null}
                    required={false}
                    requiredForSubmit={false}
                    text="Title"
                  />
                }
                name="[object Object].title"
                type="text"
              />
            </div>
            <div
              className="col-4"
            >
              <Field
                component={[Function]}
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText=""
                    id={null}
                    required={true}
                    requiredForSubmit={false}
                    text="URL"
                  />
                }
                name="[object Object].url"
                required={true}
                type="url"
              />
            </div>
            <input
              name="[object Object].id"
              type="hidden"
            />
            <RemoveButton
              className="col-1 m-auto"
              label="Remove social link"
              onRemove={[Function]}
              targetFieldNumber={0}
            />
          </li>
        </ul>,
        <button
          className="btn btn-outline-primary js-add-button mt-2"
          onClick={[Function]}
          type="button"
        >
          Add social link
        </button>,
      ],
      "className": "social-links mb-3",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li
              className="social-link list-group-item row d-flex align-items-center px-0 mx-0"
            >
              <div
                className="col-4"
              >
                <Field
                  component={[Function]}
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText=""
                      id={null}
                      required={true}
                      requiredForSubmit={false}
                      text="Type"
                    />
                  }
                  name="[object Object].type"
                  options={
                    Array [
                      Object {
                        "label": "Please select a type",
                        "value": "",
                      },
                      Object {
                        "label": "Facebook",
                        "value": "facebook",
                      },
                      Object {
                        "label": "Twitter",
                        "value": "twitter",
                      },
                      Object {
                        "label": "Blog",
                        "value": "blog",
                      },
                      Object {
                        "label": "Other",
                        "value": "others",
                      },
                    ]
                  }
                  required={true}
                />
              </div>
              <div
                className="col-3"
              >
                <Field
                  component={[Function]}
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText=""
                      id={null}
                      required={false}
                      requiredForSubmit={false}
                      text="Title"
                    />
                  }
                  name="[object Object].title"
                  type="text"
                />
              </div>
              <div
                className="col-4"
              >
                <Field
                  component={[Function]}
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText=""
                      id={null}
                      required={true}
                      requiredForSubmit={false}
                      text="URL"
                    />
                  }
                  name="[object Object].url"
                  required={true}
                  type="url"
                />
              </div>
              <input
                name="[object Object].id"
                type="hidden"
              />
              <RemoveButton
                className="col-1 m-auto"
                label="Remove social link"
                onRemove={[Function]}
                targetFieldNumber={0}
              />
            </li>,
          ],
          "className": "list-group p-0 m-0 container-fluid",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "[object Object]",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col-4"
                >
                  <Field
                    component={[Function]}
                    label={
                      <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={true}
                        requiredForSubmit={false}
                        text="Type"
                      />
                    }
                    name="[object Object].type"
                    options={
                      Array [
                        Object {
                          "label": "Please select a type",
                          "value": "",
                        },
                        Object {
                          "label": "Facebook",
                          "value": "facebook",
                        },
                        Object {
                          "label": "Twitter",
                          "value": "twitter",
                        },
                        Object {
                          "label": "Blog",
                          "value": "blog",
                        },
                        Object {
                          "label": "Other",
                          "value": "others",
                        },
                      ]
                    }
                    required={true}
                  />
                </div>,
                <div
                  className="col-3"
                >
                  <Field
                    component={[Function]}
                    label={
                      <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={false}
                        requiredForSubmit={false}
                        text="Title"
                      />
                    }
                    name="[object Object].title"
                    type="text"
                  />
                </div>,
                <div
                  className="col-4"
                >
                  <Field
                    component={[Function]}
                    label={
                      <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={true}
                        requiredForSubmit={false}
                        text="URL"
                      />
                    }
                    name="[object Object].url"
                    required={true}
                    type="url"
                  />
                </div>,
                <input
                  name="[object Object].id"
                  type="hidden"
                />,
                <RemoveButton
                  className="col-1 m-auto"
                  label="Remove social link"
                  onRemove={[Function]}
                  targetFieldNumber={0}
                />,
              ],
              "className": "social-link list-group-item row d-flex align-items-center px-0 mx-0",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label={
                      <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={true}
                        requiredForSubmit={false}
                        text="Type"
                      />
                    }
                    name="[object Object].type"
                    options={
                      Array [
                        Object {
                          "label": "Please select a type",
                          "value": "",
                        },
                        Object {
                          "label": "Facebook",
                          "value": "facebook",
                        },
                        Object {
                          "label": "Twitter",
                          "value": "twitter",
                        },
                        Object {
                          "label": "Blog",
                          "value": "blog",
                        },
                        Object {
                          "label": "Other",
                          "value": "others",
                        },
                      ]
                    }
                    required={true}
                  />,
                  "className": "col-4",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": <FieldLabel
                      className=""
                      extraText=""
                      helpText=""
                      id={null}
                      required={true}
                      requiredForSubmit={false}
                      text="Type"
                    />,
                    "name": "[object Object].type",
                    "options": Array [
                      Object {
                        "label": "Please select a type",
                        "value": "",
                      },
                      Object {
                        "label": "Facebook",
                        "value": "facebook",
                      },
                      Object {
                        "label": "Twitter",
                        "value": "twitter",
                      },
                      Object {
                        "label": "Blog",
                        "value": "blog",
                      },
                      Object {
                        "label": "Other",
                        "value": "others",
                      },
                    ],
                    "required": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label={
                      <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={false}
                        requiredForSubmit={false}
                        text="Title"
                      />
                    }
                    name="[object Object].title"
                    type="text"
                  />,
                  "className": "col-3",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": <FieldLabel
                      className=""
                      extraText=""
                      helpText=""
                      id={null}
                      required={false}
                      requiredForSubmit={false}
                      text="Title"
                    />,
                    "name": "[object Object].title",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label={
                      <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={true}
                        requiredForSubmit={false}
                        text="URL"
                      />
                    }
                    name="[object Object].url"
                    required={true}
                    type="url"
                  />,
                  "className": "col-4",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": <FieldLabel
                      className=""
                      extraText=""
                      helpText=""
                      id={null}
                      required={true}
                      requiredForSubmit={false}
                      text="URL"
                    />,
                    "name": "[object Object].url",
                    "required": true,
                    "type": "url",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "[object Object].id",
                  "type": "hidden",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "col-1 m-auto",
                  "label": "Remove social link",
                  "onRemove": [Function],
                  "targetFieldNumber": 0,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "li",
          },
        ],
        "type": "ul",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add social link",
          "className": "btn btn-outline-primary js-add-button mt-2",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": "Add social link",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ul
            className="list-group p-0 m-0 container-fluid"
          >
            <li
              className="social-link list-group-item row d-flex align-items-center px-0 mx-0"
            >
              <div
                className="col-4"
              >
                <Field
                  component={[Function]}
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText=""
                      id={null}
                      required={true}
                      requiredForSubmit={false}
                      text="Type"
                    />
                  }
                  name="[object Object].type"
                  options={
                    Array [
                      Object {
                        "label": "Please select a type",
                        "value": "",
                      },
                      Object {
                        "label": "Facebook",
                        "value": "facebook",
                      },
                      Object {
                        "label": "Twitter",
                        "value": "twitter",
                      },
                      Object {
                        "label": "Blog",
                        "value": "blog",
                      },
                      Object {
                        "label": "Other",
                        "value": "others",
                      },
                    ]
                  }
                  required={true}
                />
              </div>
              <div
                className="col-3"
              >
                <Field
                  component={[Function]}
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText=""
                      id={null}
                      required={false}
                      requiredForSubmit={false}
                      text="Title"
                    />
                  }
                  name="[object Object].title"
                  type="text"
                />
              </div>
              <div
                className="col-4"
              >
                <Field
                  component={[Function]}
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText=""
                      id={null}
                      required={true}
                      requiredForSubmit={false}
                      text="URL"
                    />
                  }
                  name="[object Object].url"
                  required={true}
                  type="url"
                />
              </div>
              <input
                name="[object Object].id"
                type="hidden"
              />
              <RemoveButton
                className="col-1 m-auto"
                label="Remove social link"
                onRemove={[Function]}
                targetFieldNumber={0}
              />
            </li>
          </ul>,
          <button
            className="btn btn-outline-primary js-add-button mt-2"
            onClick={[Function]}
            type="button"
          >
            Add social link
          </button>,
        ],
        "className": "social-links mb-3",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li
                className="social-link list-group-item row d-flex align-items-center px-0 mx-0"
              >
                <div
                  className="col-4"
                >
                  <Field
                    component={[Function]}
                    label={
                      <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={true}
                        requiredForSubmit={false}
                        text="Type"
                      />
                    }
                    name="[object Object].type"
                    options={
                      Array [
                        Object {
                          "label": "Please select a type",
                          "value": "",
                        },
                        Object {
                          "label": "Facebook",
                          "value": "facebook",
                        },
                        Object {
                          "label": "Twitter",
                          "value": "twitter",
                        },
                        Object {
                          "label": "Blog",
                          "value": "blog",
                        },
                        Object {
                          "label": "Other",
                          "value": "others",
                        },
                      ]
                    }
                    required={true}
                  />
                </div>
                <div
                  className="col-3"
                >
                  <Field
                    component={[Function]}
                    label={
                      <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={false}
                        requiredForSubmit={false}
                        text="Title"
                      />
                    }
                    name="[object Object].title"
                    type="text"
                  />
                </div>
                <div
                  className="col-4"
                >
                  <Field
                    component={[Function]}
                    label={
                      <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={true}
                        requiredForSubmit={false}
                        text="URL"
                      />
                    }
                    name="[object Object].url"
                    required={true}
                    type="url"
                  />
                </div>
                <input
                  name="[object Object].id"
                  type="hidden"
                />
                <RemoveButton
                  className="col-1 m-auto"
                  label="Remove social link"
                  onRemove={[Function]}
                  targetFieldNumber={0}
                />
              </li>,
            ],
            "className": "list-group p-0 m-0 container-fluid",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "[object Object]",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-4"
                  >
                    <Field
                      component={[Function]}
                      label={
                        <FieldLabel
                          className=""
                          extraText=""
                          helpText=""
                          id={null}
                          required={true}
                          requiredForSubmit={false}
                          text="Type"
                        />
                      }
                      name="[object Object].type"
                      options={
                        Array [
                          Object {
                            "label": "Please select a type",
                            "value": "",
                          },
                          Object {
                            "label": "Facebook",
                            "value": "facebook",
                          },
                          Object {
                            "label": "Twitter",
                            "value": "twitter",
                          },
                          Object {
                            "label": "Blog",
                            "value": "blog",
                          },
                          Object {
                            "label": "Other",
                            "value": "others",
                          },
                        ]
                      }
                      required={true}
                    />
                  </div>,
                  <div
                    className="col-3"
                  >
                    <Field
                      component={[Function]}
                      label={
                        <FieldLabel
                          className=""
                          extraText=""
                          helpText=""
                          id={null}
                          required={false}
                          requiredForSubmit={false}
                          text="Title"
                        />
                      }
                      name="[object Object].title"
                      type="text"
                    />
                  </div>,
                  <div
                    className="col-4"
                  >
                    <Field
                      component={[Function]}
                      label={
                        <FieldLabel
                          className=""
                          extraText=""
                          helpText=""
                          id={null}
                          required={true}
                          requiredForSubmit={false}
                          text="URL"
                        />
                      }
                      name="[object Object].url"
                      required={true}
                      type="url"
                    />
                  </div>,
                  <input
                    name="[object Object].id"
                    type="hidden"
                  />,
                  <RemoveButton
                    className="col-1 m-auto"
                    label="Remove social link"
                    onRemove={[Function]}
                    targetFieldNumber={0}
                  />,
                ],
                "className": "social-link list-group-item row d-flex align-items-center px-0 mx-0",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label={
                        <FieldLabel
                          className=""
                          extraText=""
                          helpText=""
                          id={null}
                          required={true}
                          requiredForSubmit={false}
                          text="Type"
                        />
                      }
                      name="[object Object].type"
                      options={
                        Array [
                          Object {
                            "label": "Please select a type",
                            "value": "",
                          },
                          Object {
                            "label": "Facebook",
                            "value": "facebook",
                          },
                          Object {
                            "label": "Twitter",
                            "value": "twitter",
                          },
                          Object {
                            "label": "Blog",
                            "value": "blog",
                          },
                          Object {
                            "label": "Other",
                            "value": "others",
                          },
                        ]
                      }
                      required={true}
                    />,
                    "className": "col-4",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={true}
                        requiredForSubmit={false}
                        text="Type"
                      />,
                      "name": "[object Object].type",
                      "options": Array [
                        Object {
                          "label": "Please select a type",
                          "value": "",
                        },
                        Object {
                          "label": "Facebook",
                          "value": "facebook",
                        },
                        Object {
                          "label": "Twitter",
                          "value": "twitter",
                        },
                        Object {
                          "label": "Blog",
                          "value": "blog",
                        },
                        Object {
                          "label": "Other",
                          "value": "others",
                        },
                      ],
                      "required": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label={
                        <FieldLabel
                          className=""
                          extraText=""
                          helpText=""
                          id={null}
                          required={false}
                          requiredForSubmit={false}
                          text="Title"
                        />
                      }
                      name="[object Object].title"
                      type="text"
                    />,
                    "className": "col-3",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={false}
                        requiredForSubmit={false}
                        text="Title"
                      />,
                      "name": "[object Object].title",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label={
                        <FieldLabel
                          className=""
                          extraText=""
                          helpText=""
                          id={null}
                          required={true}
                          requiredForSubmit={false}
                          text="URL"
                        />
                      }
                      name="[object Object].url"
                      required={true}
                      type="url"
                    />,
                    "className": "col-4",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": <FieldLabel
                        className=""
                        extraText=""
                        helpText=""
                        id={null}
                        required={true}
                        requiredForSubmit={false}
                        text="URL"
                      />,
                      "name": "[object Object].url",
                      "required": true,
                      "type": "url",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "[object Object].id",
                    "type": "hidden",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "col-1 m-auto",
                    "label": "Remove social link",
                    "onRemove": [Function],
                    "targetFieldNumber": 0,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "li",
            },
          ],
          "type": "ul",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add social link",
            "className": "btn btn-outline-primary js-add-button mt-2",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": "Add social link",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Social links renders correctly with no fields 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SocialLinks
    fields={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ul
          className="list-group p-0 m-0 container-fluid"
        />,
        <button
          className="btn btn-outline-primary js-add-button mt-2"
          onClick={[Function]}
          type="button"
        >
          Add social link
        </button>,
      ],
      "className": "social-links mb-3",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "list-group p-0 m-0 container-fluid",
        },
        "ref": null,
        "rendered": Array [],
        "type": "ul",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add social link",
          "className": "btn btn-outline-primary js-add-button mt-2",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": "Add social link",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ul
            className="list-group p-0 m-0 container-fluid"
          />,
          <button
            className="btn btn-outline-primary js-add-button mt-2"
            onClick={[Function]}
            type="button"
          >
            Add social link
          </button>,
        ],
        "className": "social-links mb-3",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "list-group p-0 m-0 container-fluid",
          },
          "ref": null,
          "rendered": Array [],
          "type": "ul",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add social link",
            "className": "btn btn-outline-primary js-add-button mt-2",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": "Add social link",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
