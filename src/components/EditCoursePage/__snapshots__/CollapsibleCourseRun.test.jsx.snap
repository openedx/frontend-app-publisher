// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Collapsible Course Run renders correctly when given a published course run 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CollapsibleCourseRun
    authentication={Object {}}
    courseId="test-course"
    courseInReview={false}
    courseRun={
      Object {
        "content_language": "ar-ae",
        "end": "2010-01-01T00:00:00Z",
        "external_key": null,
        "go_live_date": "1999-12-31T00:00:00Z",
        "has_ofac_restrictions": false,
        "key": "edX101+DemoX",
        "max_effort": 1,
        "min_effort": 1,
        "pacing_type": "self_paced",
        "run_type": "00000000-0000-4000-0000-000000000000",
        "seats": Array [],
        "start": "2000-01-01T12:00:00Z",
        "status": "published",
        "transcript_languages": Array [
          "ar-ae",
        ],
        "weeks_to_complete": 1,
      }
    }
    courseRunTypeOptions={Object {}}
    courseSubmitInfo={
      Object {
        "isSubmittingRunReview": false,
      }
    }
    courseSubmitting={false}
    courseUuid="11111111-1111-1111-1111-111111111111"
    editable={false}
    index={0}
    isOpen={false}
    isSubmittingForReview={false}
    languageOptions={
      Array [
        Object {
          "label": "Arabic - United Arab Emirates",
          "value": "ar-ae",
        },
      ]
    }
    owners={Array []}
    pacingTypeOptions={
      Array [
        Object {
          "label": "Self-paced",
          "value": "self_paced",
        },
      ]
    }
    runTypeModes={Object {}}
    sourceInfo={Object {}}
    stafferInfo={Object {}}
    targetRun={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="mb-3"
        >
          <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>
        </div>,
        <div>
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            format={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />
            }
            maxLength="10"
            name="test-course.go_live_date"
            normalize={[Function]}
            pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
            placeholder="yyyy/mm/dd"
            required={false}
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="Start date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.start"
            timeLabel="Start time (UTC)"
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="End date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.end"
            timeLabel="End time (UTC)"
            type="text"
          />
        </div>,
        <hr />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />
          }
          name="test-course.run_type"
          options={
            Array [
              Object {
                "label": "Select Course enrollment track first",
                "value": "",
              },
            ]
          }
          required={true}
        />,
        <Field
          component={[Function]}
          disabled={true}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />
          }
          name="test-course.pacing_type"
          options={
            Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ]
          }
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText={
            <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>
          }
          id="test-course.staff.label"
          optional={false}
          text="Staff"
        />,
        <Field
          component={[Function]}
          courseRunKey="edX101+DemoX"
          courseUuid="11111111-1111-1111-1111-111111111111"
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          name="test-course.staff"
          owners={Array []}
          sourceInfo={Object {}}
          stafferInfo={Object {}}
        />,
        <div
          className="row"
        >
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />
              }
              name="test-course.min_effort"
              required={false}
              type="number"
            />
          </div>
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />
              }
              name="test-course.max_effort"
              required={false}
              type="number"
            />
          </div>
        </div>,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />
          }
          name="test-course.weeks_to_complete"
          required={false}
          type="number"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />
          }
          name="test-course.content_language"
          options={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          required={false}
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={false}
          text="Transcript languages"
        />,
        <FieldArray
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          languageOptions={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          name="test-course.transcript_languages"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />
          }
          name="test-course.expected_program_type"
          type="text"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />
          }
          name="test-course.expected_program_name"
          type="text"
        />,
        undefined,
        <div>
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>
            }
            id="ofac-notice-label"
            optional={false}
            text="Course Embargo (OFAC) Restriction text added to the FAQ section"
          />
          <div
            className="mb-3"
          >
            No
          </div>
        </div>,
        undefined,
        false,
      ],
      "onToggle": undefined,
      "open": false,
      "title": <div
        className="course-run-label"
      >
        <span>
          Course run starting on Jan 01, 2000 - Self Paced
        </span>
        <Pill
          statuses={
            Array [
              "published",
            ]
          }
        />
        <div
          className="course-run-label"
        >
          <span>
            
          </span>
        </div>
        <div
          className="course-run-studio-url"
        >
          <React.Fragment>
            Studio URL -Â 
            <withDeprecatedProps(Hyperlink)
              destination="undefined/course/edX101+DemoX"
              target="_blank"
            >
              edX101+DemoX
            </withDeprecatedProps(Hyperlink)>
          </React.Fragment>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>,
          "className": "mb-3",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-hidden": true,
            "children": " All fields are required for publication unless otherwise specified.",
            "className": "text-info",
          },
          "ref": null,
          "rendered": " All fields are required for publication unless otherwise specified.",
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={false}
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "disabled": true,
              "extraInput": Object {
                "onInvalid": [Function],
              },
              "format": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />,
              "maxLength": "10",
              "name": "test-course.go_live_date",
              "normalize": [Function],
              "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
              "placeholder": "yyyy/mm/dd",
              "required": false,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "Start date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.start",
              "timeLabel": "Start time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "End date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.end",
              "timeLabel": "End time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText="Cannot edit after submission"
            helpText={
              <div>
                <p>
                  The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                </p>
                <p>
                  <a
                    href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Learn more.
                  </a>
                </p>
              </div>
            }
            id="test-course.run_type.label"
            optional={false}
            text="Course run enrollment track"
          />,
          "name": "test-course.run_type",
          "options": Array [
            Object {
              "label": "Select Course enrollment track first",
              "value": "",
            },
          ],
          "required": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  Course pacing is editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit course pacing.
                  </a>
                  .
                </p>
              </div>
            }
            id="test-course.pacing_type.label"
            optional={false}
            text="Course pacing"
          />,
          "name": "test-course.pacing_type",
          "options": Array [
            Object {
              "label": "Self-paced",
              "value": "self_paced",
            },
          ],
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": <div>
            <p>
              The primary instructor or instructors for the course.
            </p>
            <p>
              The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
            </p>
          </div>,
          "id": "test-course.staff.label",
          "optional": false,
          "text": "Staff",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "courseRunKey": "edX101+DemoX",
          "courseUuid": "11111111-1111-1111-1111-111111111111",
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "name": "test-course.staff",
          "owners": Array [],
          "sourceInfo": Object {},
          "stafferInfo": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />
            </div>,
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />
            </div>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />,
                "name": "test-course.min_effort",
                "required": false,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />,
                "name": "test-course.max_effort",
                "required": false,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                </p>
              </div>
            }
            id="test-course.weeks_to_complete.label"
            optional={false}
            text="Length"
          />,
          "name": "test-course.weeks_to_complete",
          "required": false,
          "type": "number",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Content language"
          />,
          "name": "test-course.content_language",
          "options": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "required": false,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": "",
          "id": null,
          "optional": false,
          "text": "Transcript languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "languageOptions": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "name": "test-course.transcript_languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program type here.
                </p>
              </div>
            }
            id="test-course.expected_program_type.label"
            optional={true}
            text="Expected Program Type"
          />,
          "name": "test-course.expected_program_type",
          "options": undefined,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program name here.
                </p>
              </div>
            }
            id="test-course.expected_program_name.label"
            optional={true}
            text="Expected Program Name"
          />,
          "name": "test-course.expected_program_name",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />,
            <div
              className="mb-3"
            >
              No
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>,
              "id": "ofac-notice-label",
              "optional": false,
              "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No",
              "className": "mb-3",
            },
            "ref": null,
            "rendered": "No",
            "type": "div",
          },
        ],
        "type": "div",
      },
      undefined,
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="mb-3"
          >
            <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>
          </div>,
          <div>
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={false}
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />
          </div>,
          <hr />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText="Cannot edit after submission"
                helpText={
                  <div>
                    <p>
                      The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                    </p>
                    <p>
                      <a
                        href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn more.
                      </a>
                    </p>
                  </div>
                }
                id="test-course.run_type.label"
                optional={false}
                text="Course run enrollment track"
              />
            }
            name="test-course.run_type"
            options={
              Array [
                Object {
                  "label": "Select Course enrollment track first",
                  "value": "",
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            disabled={true}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course pacing is editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit course pacing.
                      </a>
                      .
                    </p>
                  </div>
                }
                id="test-course.pacing_type.label"
                optional={false}
                text="Course pacing"
              />
            }
            name="test-course.pacing_type"
            options={
              Array [
                Object {
                  "label": "Self-paced",
                  "value": "self_paced",
                },
              ]
            }
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  The primary instructor or instructors for the course.
                </p>
                <p>
                  The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
                </p>
              </div>
            }
            id="test-course.staff.label"
            optional={false}
            text="Staff"
          />,
          <Field
            component={[Function]}
            courseRunKey="edX101+DemoX"
            courseUuid="11111111-1111-1111-1111-111111111111"
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            name="test-course.staff"
            owners={Array []}
            sourceInfo={Object {}}
            stafferInfo={Object {}}
          />,
          <div
            className="row"
          >
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />
            </div>
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />
            </div>
          </div>,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                    </p>
                  </div>
                }
                id="test-course.weeks_to_complete.label"
                optional={false}
                text="Length"
              />
            }
            name="test-course.weeks_to_complete"
            required={false}
            type="number"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Content language"
              />
            }
            name="test-course.content_language"
            options={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            required={false}
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Transcript languages"
          />,
          <FieldArray
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            languageOptions={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            name="test-course.transcript_languages"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program type here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_type.label"
                optional={true}
                text="Expected Program Type"
              />
            }
            name="test-course.expected_program_type"
            type="text"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program name here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_name.label"
                optional={true}
                text="Expected Program Name"
              />
            }
            name="test-course.expected_program_name"
            type="text"
          />,
          undefined,
          <div>
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />
            <div
              className="mb-3"
            >
              No
            </div>
          </div>,
          undefined,
          false,
        ],
        "onToggle": undefined,
        "open": false,
        "title": <div
          className="course-run-label"
        >
          <span>
            Course run starting on Jan 01, 2000 - Self Paced
          </span>
          <Pill
            statuses={
              Array [
                "published",
              ]
            }
          />
          <div
            className="course-run-label"
          >
            <span>
              
            </span>
          </div>
          <div
            className="course-run-studio-url"
          >
            <React.Fragment>
              Studio URL -Â 
              <withDeprecatedProps(Hyperlink)
                destination="undefined/course/edX101+DemoX"
                target="_blank"
              >
                edX101+DemoX
              </withDeprecatedProps(Hyperlink)>
            </React.Fragment>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>,
            "className": "mb-3",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-hidden": true,
              "children": " All fields are required for publication unless otherwise specified.",
              "className": "text-info",
            },
            "ref": null,
            "rendered": " All fields are required for publication unless otherwise specified.",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "onInvalid": [Function],
                  }
                }
                format={[Function]}
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          Required Format: yyyy/mm/dd
                        </p>
                        <p>
                          The scheduled date for when the course run will be live and published.
                        </p>
                        <p>
                          To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                        </p>
                        <p>
                          If you donâ€™t have a publish date yet, set to 1 year in the future.
                        </p>
                      </div>
                    }
                    id="test-course.go_live_date.label"
                    optional={false}
                    text="Publish date"
                  />
                }
                maxLength="10"
                name="test-course.go_live_date"
                normalize={[Function]}
                pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
                placeholder="yyyy/mm/dd"
                required={false}
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="Start date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.start"
                timeLabel="Start time (UTC)"
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="End date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.end"
                timeLabel="End time (UTC)"
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "onInvalid": [Function],
                },
                "format": [Function],
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />,
                "maxLength": "10",
                "name": "test-course.go_live_date",
                "normalize": [Function],
                "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
                "placeholder": "yyyy/mm/dd",
                "required": false,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "Start date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.start",
                "timeLabel": "Start time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "End date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.end",
                "timeLabel": "End time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />,
            "name": "test-course.run_type",
            "options": Array [
              Object {
                "label": "Select Course enrollment track first",
                "value": "",
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />,
            "name": "test-course.pacing_type",
            "options": Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>,
            "id": "test-course.staff.label",
            "optional": false,
            "text": "Staff",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "courseRunKey": "edX101+DemoX",
            "courseUuid": "11111111-1111-1111-1111-111111111111",
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "name": "test-course.staff",
            "owners": Array [],
            "sourceInfo": Object {},
            "stafferInfo": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={false}
                  type="number"
                />
              </div>,
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={false}
                  type="number"
                />
              </div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={false}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />,
                  "name": "test-course.min_effort",
                  "required": false,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={false}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />,
                  "name": "test-course.max_effort",
                  "required": false,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />,
            "name": "test-course.weeks_to_complete",
            "required": false,
            "type": "number",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />,
            "name": "test-course.content_language",
            "options": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "required": false,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": false,
            "text": "Transcript languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "languageOptions": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "name": "test-course.transcript_languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />,
            "name": "test-course.expected_program_type",
            "options": undefined,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />,
            "name": "test-course.expected_program_name",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FieldLabel
                className="mb-2"
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course embargo status for OFAC is managed internally, please contact support with questions.
                    </p>
                  </div>
                }
                id="ofac-notice-label"
                optional={false}
                text="Course Embargo (OFAC) Restriction text added to the FAQ section"
              />,
              <div
                className="mb-3"
              >
                No
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "mb-2",
                "extraText": "",
                "helpText": <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>,
                "id": "ofac-notice-label",
                "optional": false,
                "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "No",
                "className": "mb-3",
              },
              "ref": null,
              "rendered": "No",
              "type": "div",
            },
          ],
          "type": "div",
        },
        undefined,
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Collapsible Course Run renders correctly when given an unpublished course run 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CollapsibleCourseRun
    authentication={Object {}}
    courseId="test-course"
    courseInReview={false}
    courseRun={
      Object {
        "content_language": "ar-ae",
        "end": "2010-01-01T00:00:00Z",
        "external_key": null,
        "go_live_date": "1999-12-31T00:00:00Z",
        "has_ofac_restrictions": false,
        "key": "edX101+DemoX",
        "max_effort": 1,
        "min_effort": 1,
        "pacing_type": "self_paced",
        "run_type": "00000000-0000-4000-0000-000000000000",
        "seats": Array [],
        "start": "2000-01-01T12:00:00Z",
        "status": "unpublished",
        "transcript_languages": Array [
          "ar-ae",
        ],
        "weeks_to_complete": 1,
      }
    }
    courseRunTypeOptions={Object {}}
    courseSubmitInfo={
      Object {
        "isSubmittingRunReview": false,
      }
    }
    courseSubmitting={false}
    courseUuid="11111111-1111-1111-1111-111111111111"
    editable={false}
    index={1}
    isOpen={false}
    isSubmittingForReview={false}
    languageOptions={
      Array [
        Object {
          "label": "Arabic - United Arab Emirates",
          "value": "ar-ae",
        },
      ]
    }
    owners={Array []}
    pacingTypeOptions={
      Array [
        Object {
          "label": "Self-paced",
          "value": "self_paced",
        },
      ]
    }
    runTypeModes={Object {}}
    sourceInfo={Object {}}
    stafferInfo={Object {}}
    targetRun={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="mb-3"
        >
          <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>
        </div>,
        <div>
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            format={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />
            }
            maxLength="10"
            name="test-course.go_live_date"
            normalize={[Function]}
            pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
            placeholder="yyyy/mm/dd"
            required={false}
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="Start date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.start"
            timeLabel="Start time (UTC)"
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="End date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.end"
            timeLabel="End time (UTC)"
            type="text"
          />
        </div>,
        <hr />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />
          }
          name="test-course.run_type"
          options={
            Array [
              Object {
                "label": "Select Course enrollment track first",
                "value": "",
              },
            ]
          }
          required={true}
        />,
        <Field
          component={[Function]}
          disabled={true}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />
          }
          name="test-course.pacing_type"
          options={
            Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ]
          }
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText={
            <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>
          }
          id="test-course.staff.label"
          optional={false}
          text="Staff"
        />,
        <Field
          component={[Function]}
          courseRunKey="edX101+DemoX"
          courseUuid="11111111-1111-1111-1111-111111111111"
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          name="test-course.staff"
          owners={Array []}
          sourceInfo={Object {}}
          stafferInfo={Object {}}
        />,
        <div
          className="row"
        >
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />
              }
              name="test-course.min_effort"
              required={false}
              type="number"
            />
          </div>
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />
              }
              name="test-course.max_effort"
              required={false}
              type="number"
            />
          </div>
        </div>,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />
          }
          name="test-course.weeks_to_complete"
          required={false}
          type="number"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />
          }
          name="test-course.content_language"
          options={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          required={false}
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={false}
          text="Transcript languages"
        />,
        <FieldArray
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          languageOptions={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          name="test-course.transcript_languages"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />
          }
          name="test-course.expected_program_type"
          type="text"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />
          }
          name="test-course.expected_program_name"
          type="text"
        />,
        undefined,
        <div>
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>
            }
            id="ofac-notice-label"
            optional={false}
            text="Course Embargo (OFAC) Restriction text added to the FAQ section"
          />
          <div
            className="mb-3"
          >
            No
          </div>
        </div>,
        undefined,
        false,
      ],
      "onToggle": undefined,
      "open": false,
      "title": <div
        className="course-run-label"
      >
        <span>
          Course run starting on Jan 01, 2000 - Self Paced
        </span>
        <Pill
          statuses={
            Array [
              "unpublished",
            ]
          }
        />
        <div
          className="course-run-label"
        >
          <span>
            Publish date is Dec 31, 1999
          </span>
        </div>
        <div
          className="course-run-studio-url"
        >
          <React.Fragment>
            Studio URL -Â 
            <withDeprecatedProps(Hyperlink)
              destination="undefined/course/edX101+DemoX"
              target="_blank"
            >
              edX101+DemoX
            </withDeprecatedProps(Hyperlink)>
          </React.Fragment>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>,
          "className": "mb-3",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-hidden": true,
            "children": " All fields are required for publication unless otherwise specified.",
            "className": "text-info",
          },
          "ref": null,
          "rendered": " All fields are required for publication unless otherwise specified.",
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={false}
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "disabled": true,
              "extraInput": Object {
                "onInvalid": [Function],
              },
              "format": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />,
              "maxLength": "10",
              "name": "test-course.go_live_date",
              "normalize": [Function],
              "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
              "placeholder": "yyyy/mm/dd",
              "required": false,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "Start date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.start",
              "timeLabel": "Start time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "End date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.end",
              "timeLabel": "End time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText="Cannot edit after submission"
            helpText={
              <div>
                <p>
                  The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                </p>
                <p>
                  <a
                    href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Learn more.
                  </a>
                </p>
              </div>
            }
            id="test-course.run_type.label"
            optional={false}
            text="Course run enrollment track"
          />,
          "name": "test-course.run_type",
          "options": Array [
            Object {
              "label": "Select Course enrollment track first",
              "value": "",
            },
          ],
          "required": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  Course pacing is editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit course pacing.
                  </a>
                  .
                </p>
              </div>
            }
            id="test-course.pacing_type.label"
            optional={false}
            text="Course pacing"
          />,
          "name": "test-course.pacing_type",
          "options": Array [
            Object {
              "label": "Self-paced",
              "value": "self_paced",
            },
          ],
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": <div>
            <p>
              The primary instructor or instructors for the course.
            </p>
            <p>
              The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
            </p>
          </div>,
          "id": "test-course.staff.label",
          "optional": false,
          "text": "Staff",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "courseRunKey": "edX101+DemoX",
          "courseUuid": "11111111-1111-1111-1111-111111111111",
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "name": "test-course.staff",
          "owners": Array [],
          "sourceInfo": Object {},
          "stafferInfo": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />
            </div>,
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />
            </div>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />,
                "name": "test-course.min_effort",
                "required": false,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />,
                "name": "test-course.max_effort",
                "required": false,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                </p>
              </div>
            }
            id="test-course.weeks_to_complete.label"
            optional={false}
            text="Length"
          />,
          "name": "test-course.weeks_to_complete",
          "required": false,
          "type": "number",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Content language"
          />,
          "name": "test-course.content_language",
          "options": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "required": false,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": "",
          "id": null,
          "optional": false,
          "text": "Transcript languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "languageOptions": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "name": "test-course.transcript_languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program type here.
                </p>
              </div>
            }
            id="test-course.expected_program_type.label"
            optional={true}
            text="Expected Program Type"
          />,
          "name": "test-course.expected_program_type",
          "options": undefined,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program name here.
                </p>
              </div>
            }
            id="test-course.expected_program_name.label"
            optional={true}
            text="Expected Program Name"
          />,
          "name": "test-course.expected_program_name",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />,
            <div
              className="mb-3"
            >
              No
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>,
              "id": "ofac-notice-label",
              "optional": false,
              "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No",
              "className": "mb-3",
            },
            "ref": null,
            "rendered": "No",
            "type": "div",
          },
        ],
        "type": "div",
      },
      undefined,
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="mb-3"
          >
            <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>
          </div>,
          <div>
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={false}
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />
          </div>,
          <hr />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText="Cannot edit after submission"
                helpText={
                  <div>
                    <p>
                      The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                    </p>
                    <p>
                      <a
                        href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn more.
                      </a>
                    </p>
                  </div>
                }
                id="test-course.run_type.label"
                optional={false}
                text="Course run enrollment track"
              />
            }
            name="test-course.run_type"
            options={
              Array [
                Object {
                  "label": "Select Course enrollment track first",
                  "value": "",
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            disabled={true}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course pacing is editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit course pacing.
                      </a>
                      .
                    </p>
                  </div>
                }
                id="test-course.pacing_type.label"
                optional={false}
                text="Course pacing"
              />
            }
            name="test-course.pacing_type"
            options={
              Array [
                Object {
                  "label": "Self-paced",
                  "value": "self_paced",
                },
              ]
            }
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  The primary instructor or instructors for the course.
                </p>
                <p>
                  The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
                </p>
              </div>
            }
            id="test-course.staff.label"
            optional={false}
            text="Staff"
          />,
          <Field
            component={[Function]}
            courseRunKey="edX101+DemoX"
            courseUuid="11111111-1111-1111-1111-111111111111"
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            name="test-course.staff"
            owners={Array []}
            sourceInfo={Object {}}
            stafferInfo={Object {}}
          />,
          <div
            className="row"
          >
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />
            </div>
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />
            </div>
          </div>,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                    </p>
                  </div>
                }
                id="test-course.weeks_to_complete.label"
                optional={false}
                text="Length"
              />
            }
            name="test-course.weeks_to_complete"
            required={false}
            type="number"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Content language"
              />
            }
            name="test-course.content_language"
            options={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            required={false}
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Transcript languages"
          />,
          <FieldArray
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            languageOptions={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            name="test-course.transcript_languages"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program type here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_type.label"
                optional={true}
                text="Expected Program Type"
              />
            }
            name="test-course.expected_program_type"
            type="text"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program name here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_name.label"
                optional={true}
                text="Expected Program Name"
              />
            }
            name="test-course.expected_program_name"
            type="text"
          />,
          undefined,
          <div>
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />
            <div
              className="mb-3"
            >
              No
            </div>
          </div>,
          undefined,
          false,
        ],
        "onToggle": undefined,
        "open": false,
        "title": <div
          className="course-run-label"
        >
          <span>
            Course run starting on Jan 01, 2000 - Self Paced
          </span>
          <Pill
            statuses={
              Array [
                "unpublished",
              ]
            }
          />
          <div
            className="course-run-label"
          >
            <span>
              Publish date is Dec 31, 1999
            </span>
          </div>
          <div
            className="course-run-studio-url"
          >
            <React.Fragment>
              Studio URL -Â 
              <withDeprecatedProps(Hyperlink)
                destination="undefined/course/edX101+DemoX"
                target="_blank"
              >
                edX101+DemoX
              </withDeprecatedProps(Hyperlink)>
            </React.Fragment>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>,
            "className": "mb-3",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-hidden": true,
              "children": " All fields are required for publication unless otherwise specified.",
              "className": "text-info",
            },
            "ref": null,
            "rendered": " All fields are required for publication unless otherwise specified.",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "onInvalid": [Function],
                  }
                }
                format={[Function]}
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          Required Format: yyyy/mm/dd
                        </p>
                        <p>
                          The scheduled date for when the course run will be live and published.
                        </p>
                        <p>
                          To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                        </p>
                        <p>
                          If you donâ€™t have a publish date yet, set to 1 year in the future.
                        </p>
                      </div>
                    }
                    id="test-course.go_live_date.label"
                    optional={false}
                    text="Publish date"
                  />
                }
                maxLength="10"
                name="test-course.go_live_date"
                normalize={[Function]}
                pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
                placeholder="yyyy/mm/dd"
                required={false}
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="Start date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.start"
                timeLabel="Start time (UTC)"
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="End date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.end"
                timeLabel="End time (UTC)"
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "onInvalid": [Function],
                },
                "format": [Function],
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />,
                "maxLength": "10",
                "name": "test-course.go_live_date",
                "normalize": [Function],
                "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
                "placeholder": "yyyy/mm/dd",
                "required": false,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "Start date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.start",
                "timeLabel": "Start time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "End date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.end",
                "timeLabel": "End time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />,
            "name": "test-course.run_type",
            "options": Array [
              Object {
                "label": "Select Course enrollment track first",
                "value": "",
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />,
            "name": "test-course.pacing_type",
            "options": Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>,
            "id": "test-course.staff.label",
            "optional": false,
            "text": "Staff",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "courseRunKey": "edX101+DemoX",
            "courseUuid": "11111111-1111-1111-1111-111111111111",
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "name": "test-course.staff",
            "owners": Array [],
            "sourceInfo": Object {},
            "stafferInfo": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={false}
                  type="number"
                />
              </div>,
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={false}
                  type="number"
                />
              </div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={false}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />,
                  "name": "test-course.min_effort",
                  "required": false,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={false}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />,
                  "name": "test-course.max_effort",
                  "required": false,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />,
            "name": "test-course.weeks_to_complete",
            "required": false,
            "type": "number",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />,
            "name": "test-course.content_language",
            "options": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "required": false,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": false,
            "text": "Transcript languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "languageOptions": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "name": "test-course.transcript_languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />,
            "name": "test-course.expected_program_type",
            "options": undefined,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />,
            "name": "test-course.expected_program_name",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FieldLabel
                className="mb-2"
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course embargo status for OFAC is managed internally, please contact support with questions.
                    </p>
                  </div>
                }
                id="ofac-notice-label"
                optional={false}
                text="Course Embargo (OFAC) Restriction text added to the FAQ section"
              />,
              <div
                className="mb-3"
              >
                No
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "mb-2",
                "extraText": "",
                "helpText": <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>,
                "id": "ofac-notice-label",
                "optional": false,
                "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "No",
                "className": "mb-3",
              },
              "ref": null,
              "rendered": "No",
              "type": "div",
            },
          ],
          "type": "div",
        },
        undefined,
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Collapsible Course Run renders correctly when submitting for review 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CollapsibleCourseRun
    authentication={Object {}}
    courseId="test-course"
    courseInReview={false}
    courseRun={
      Object {
        "content_language": "ar-ae",
        "end": "2010-01-01T00:00:00Z",
        "external_key": null,
        "go_live_date": "1999-12-31T00:00:00Z",
        "has_ofac_restrictions": false,
        "key": "edX101+DemoX",
        "max_effort": 1,
        "min_effort": 1,
        "pacing_type": "self_paced",
        "run_type": "00000000-0000-4000-0000-000000000000",
        "seats": Array [],
        "start": "2000-01-01T12:00:00Z",
        "status": "unpublished",
        "transcript_languages": Array [
          "ar-ae",
        ],
        "weeks_to_complete": 1,
      }
    }
    courseRunTypeOptions={Object {}}
    courseSubmitInfo={
      Object {
        "isSubmittingRunReview": false,
      }
    }
    courseSubmitting={false}
    courseUuid="11111111-1111-1111-1111-111111111111"
    editable={false}
    index={1}
    isOpen={false}
    isSubmittingForReview={true}
    languageOptions={
      Array [
        Object {
          "label": "Arabic - United Arab Emirates",
          "value": "ar-ae",
        },
      ]
    }
    owners={Array []}
    pacingTypeOptions={
      Array [
        Object {
          "label": "Self-paced",
          "value": "self_paced",
        },
      ]
    }
    runTypeModes={Object {}}
    sourceInfo={Object {}}
    stafferInfo={Object {}}
    targetRun={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="mb-3"
        >
          <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>
        </div>,
        <div>
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            format={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />
            }
            maxLength="10"
            name="test-course.go_live_date"
            normalize={[Function]}
            pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
            placeholder="yyyy/mm/dd"
            required={null}
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="Start date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.start"
            timeLabel="Start time (UTC)"
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="End date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.end"
            timeLabel="End time (UTC)"
            type="text"
          />
        </div>,
        <hr />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />
          }
          name="test-course.run_type"
          options={
            Array [
              Object {
                "label": "Select Course enrollment track first",
                "value": "",
              },
            ]
          }
          required={true}
        />,
        <Field
          component={[Function]}
          disabled={true}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />
          }
          name="test-course.pacing_type"
          options={
            Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ]
          }
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText={
            <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>
          }
          id="test-course.staff.label"
          optional={false}
          text="Staff"
        />,
        <Field
          component={[Function]}
          courseRunKey="edX101+DemoX"
          courseUuid="11111111-1111-1111-1111-111111111111"
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          name="test-course.staff"
          owners={Array []}
          sourceInfo={Object {}}
          stafferInfo={Object {}}
        />,
        <div
          className="row"
        >
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />
              }
              name="test-course.min_effort"
              required={null}
              type="number"
            />
          </div>
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />
              }
              name="test-course.max_effort"
              required={null}
              type="number"
            />
          </div>
        </div>,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />
          }
          name="test-course.weeks_to_complete"
          required={null}
          type="number"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />
          }
          name="test-course.content_language"
          options={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          required={null}
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={false}
          text="Transcript languages"
        />,
        <FieldArray
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          languageOptions={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          name="test-course.transcript_languages"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />
          }
          name="test-course.expected_program_type"
          type="text"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />
          }
          name="test-course.expected_program_name"
          type="text"
        />,
        undefined,
        <div>
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>
            }
            id="ofac-notice-label"
            optional={false}
            text="Course Embargo (OFAC) Restriction text added to the FAQ section"
          />
          <div
            className="mb-3"
          >
            No
          </div>
        </div>,
        undefined,
        false,
      ],
      "onToggle": undefined,
      "open": false,
      "title": <div
        className="course-run-label"
      >
        <span>
          Course run starting on Jan 01, 2000 - Self Paced
        </span>
        <Pill
          statuses={
            Array [
              "unpublished",
            ]
          }
        />
        <div
          className="course-run-label"
        >
          <span>
            Publish date is Dec 31, 1999
          </span>
        </div>
        <div
          className="course-run-studio-url"
        >
          <React.Fragment>
            Studio URL -Â 
            <withDeprecatedProps(Hyperlink)
              destination="undefined/course/edX101+DemoX"
              target="_blank"
            >
              edX101+DemoX
            </withDeprecatedProps(Hyperlink)>
          </React.Fragment>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>,
          "className": "mb-3",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-hidden": true,
            "children": " All fields are required for publication unless otherwise specified.",
            "className": "text-info",
          },
          "ref": null,
          "rendered": " All fields are required for publication unless otherwise specified.",
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={null}
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "disabled": true,
              "extraInput": Object {
                "onInvalid": [Function],
              },
              "format": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />,
              "maxLength": "10",
              "name": "test-course.go_live_date",
              "normalize": [Function],
              "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
              "placeholder": "yyyy/mm/dd",
              "required": null,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "Start date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.start",
              "timeLabel": "Start time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "End date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.end",
              "timeLabel": "End time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText="Cannot edit after submission"
            helpText={
              <div>
                <p>
                  The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                </p>
                <p>
                  <a
                    href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Learn more.
                  </a>
                </p>
              </div>
            }
            id="test-course.run_type.label"
            optional={false}
            text="Course run enrollment track"
          />,
          "name": "test-course.run_type",
          "options": Array [
            Object {
              "label": "Select Course enrollment track first",
              "value": "",
            },
          ],
          "required": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  Course pacing is editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit course pacing.
                  </a>
                  .
                </p>
              </div>
            }
            id="test-course.pacing_type.label"
            optional={false}
            text="Course pacing"
          />,
          "name": "test-course.pacing_type",
          "options": Array [
            Object {
              "label": "Self-paced",
              "value": "self_paced",
            },
          ],
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": <div>
            <p>
              The primary instructor or instructors for the course.
            </p>
            <p>
              The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
            </p>
          </div>,
          "id": "test-course.staff.label",
          "optional": false,
          "text": "Staff",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "courseRunKey": "edX101+DemoX",
          "courseUuid": "11111111-1111-1111-1111-111111111111",
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "name": "test-course.staff",
          "owners": Array [],
          "sourceInfo": Object {},
          "stafferInfo": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={null}
                type="number"
              />
            </div>,
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={null}
                type="number"
              />
            </div>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={null}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />,
                "name": "test-course.min_effort",
                "required": null,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={null}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />,
                "name": "test-course.max_effort",
                "required": null,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                </p>
              </div>
            }
            id="test-course.weeks_to_complete.label"
            optional={false}
            text="Length"
          />,
          "name": "test-course.weeks_to_complete",
          "required": null,
          "type": "number",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Content language"
          />,
          "name": "test-course.content_language",
          "options": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "required": null,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": "",
          "id": null,
          "optional": false,
          "text": "Transcript languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "languageOptions": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "name": "test-course.transcript_languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program type here.
                </p>
              </div>
            }
            id="test-course.expected_program_type.label"
            optional={true}
            text="Expected Program Type"
          />,
          "name": "test-course.expected_program_type",
          "options": undefined,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program name here.
                </p>
              </div>
            }
            id="test-course.expected_program_name.label"
            optional={true}
            text="Expected Program Name"
          />,
          "name": "test-course.expected_program_name",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />,
            <div
              className="mb-3"
            >
              No
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>,
              "id": "ofac-notice-label",
              "optional": false,
              "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No",
              "className": "mb-3",
            },
            "ref": null,
            "rendered": "No",
            "type": "div",
          },
        ],
        "type": "div",
      },
      undefined,
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="mb-3"
          >
            <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>
          </div>,
          <div>
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={null}
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />
          </div>,
          <hr />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText="Cannot edit after submission"
                helpText={
                  <div>
                    <p>
                      The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                    </p>
                    <p>
                      <a
                        href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn more.
                      </a>
                    </p>
                  </div>
                }
                id="test-course.run_type.label"
                optional={false}
                text="Course run enrollment track"
              />
            }
            name="test-course.run_type"
            options={
              Array [
                Object {
                  "label": "Select Course enrollment track first",
                  "value": "",
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            disabled={true}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course pacing is editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit course pacing.
                      </a>
                      .
                    </p>
                  </div>
                }
                id="test-course.pacing_type.label"
                optional={false}
                text="Course pacing"
              />
            }
            name="test-course.pacing_type"
            options={
              Array [
                Object {
                  "label": "Self-paced",
                  "value": "self_paced",
                },
              ]
            }
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  The primary instructor or instructors for the course.
                </p>
                <p>
                  The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
                </p>
              </div>
            }
            id="test-course.staff.label"
            optional={false}
            text="Staff"
          />,
          <Field
            component={[Function]}
            courseRunKey="edX101+DemoX"
            courseUuid="11111111-1111-1111-1111-111111111111"
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            name="test-course.staff"
            owners={Array []}
            sourceInfo={Object {}}
            stafferInfo={Object {}}
          />,
          <div
            className="row"
          >
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={null}
                type="number"
              />
            </div>
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={null}
                type="number"
              />
            </div>
          </div>,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                    </p>
                  </div>
                }
                id="test-course.weeks_to_complete.label"
                optional={false}
                text="Length"
              />
            }
            name="test-course.weeks_to_complete"
            required={null}
            type="number"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Content language"
              />
            }
            name="test-course.content_language"
            options={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            required={null}
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Transcript languages"
          />,
          <FieldArray
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            languageOptions={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            name="test-course.transcript_languages"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program type here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_type.label"
                optional={true}
                text="Expected Program Type"
              />
            }
            name="test-course.expected_program_type"
            type="text"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program name here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_name.label"
                optional={true}
                text="Expected Program Name"
              />
            }
            name="test-course.expected_program_name"
            type="text"
          />,
          undefined,
          <div>
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />
            <div
              className="mb-3"
            >
              No
            </div>
          </div>,
          undefined,
          false,
        ],
        "onToggle": undefined,
        "open": false,
        "title": <div
          className="course-run-label"
        >
          <span>
            Course run starting on Jan 01, 2000 - Self Paced
          </span>
          <Pill
            statuses={
              Array [
                "unpublished",
              ]
            }
          />
          <div
            className="course-run-label"
          >
            <span>
              Publish date is Dec 31, 1999
            </span>
          </div>
          <div
            className="course-run-studio-url"
          >
            <React.Fragment>
              Studio URL -Â 
              <withDeprecatedProps(Hyperlink)
                destination="undefined/course/edX101+DemoX"
                target="_blank"
              >
                edX101+DemoX
              </withDeprecatedProps(Hyperlink)>
            </React.Fragment>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>,
            "className": "mb-3",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-hidden": true,
              "children": " All fields are required for publication unless otherwise specified.",
              "className": "text-info",
            },
            "ref": null,
            "rendered": " All fields are required for publication unless otherwise specified.",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "onInvalid": [Function],
                  }
                }
                format={[Function]}
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          Required Format: yyyy/mm/dd
                        </p>
                        <p>
                          The scheduled date for when the course run will be live and published.
                        </p>
                        <p>
                          To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                        </p>
                        <p>
                          If you donâ€™t have a publish date yet, set to 1 year in the future.
                        </p>
                      </div>
                    }
                    id="test-course.go_live_date.label"
                    optional={false}
                    text="Publish date"
                  />
                }
                maxLength="10"
                name="test-course.go_live_date"
                normalize={[Function]}
                pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
                placeholder="yyyy/mm/dd"
                required={null}
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="Start date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.start"
                timeLabel="Start time (UTC)"
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="End date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.end"
                timeLabel="End time (UTC)"
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "onInvalid": [Function],
                },
                "format": [Function],
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />,
                "maxLength": "10",
                "name": "test-course.go_live_date",
                "normalize": [Function],
                "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
                "placeholder": "yyyy/mm/dd",
                "required": null,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "Start date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.start",
                "timeLabel": "Start time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "End date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.end",
                "timeLabel": "End time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />,
            "name": "test-course.run_type",
            "options": Array [
              Object {
                "label": "Select Course enrollment track first",
                "value": "",
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />,
            "name": "test-course.pacing_type",
            "options": Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>,
            "id": "test-course.staff.label",
            "optional": false,
            "text": "Staff",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "courseRunKey": "edX101+DemoX",
            "courseUuid": "11111111-1111-1111-1111-111111111111",
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "name": "test-course.staff",
            "owners": Array [],
            "sourceInfo": Object {},
            "stafferInfo": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={null}
                  type="number"
                />
              </div>,
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={null}
                  type="number"
                />
              </div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={null}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />,
                  "name": "test-course.min_effort",
                  "required": null,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={null}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />,
                  "name": "test-course.max_effort",
                  "required": null,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />,
            "name": "test-course.weeks_to_complete",
            "required": null,
            "type": "number",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />,
            "name": "test-course.content_language",
            "options": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "required": null,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": false,
            "text": "Transcript languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "languageOptions": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "name": "test-course.transcript_languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />,
            "name": "test-course.expected_program_type",
            "options": undefined,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />,
            "name": "test-course.expected_program_name",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FieldLabel
                className="mb-2"
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course embargo status for OFAC is managed internally, please contact support with questions.
                    </p>
                  </div>
                }
                id="ofac-notice-label"
                optional={false}
                text="Course Embargo (OFAC) Restriction text added to the FAQ section"
              />,
              <div
                className="mb-3"
              >
                No
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "mb-2",
                "extraText": "",
                "helpText": <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>,
                "id": "ofac-notice-label",
                "optional": false,
                "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "No",
                "className": "mb-3",
              },
              "ref": null,
              "rendered": "No",
              "type": "div",
            },
          ],
          "type": "div",
        },
        undefined,
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Collapsible Course Run renders correctly when submitting for review and given a matching target run 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CollapsibleCourseRun
    authentication={Object {}}
    courseId="test-course"
    courseInReview={false}
    courseRun={
      Object {
        "content_language": "ar-ae",
        "end": "2010-01-01T00:00:00Z",
        "external_key": null,
        "go_live_date": "1999-12-31T00:00:00Z",
        "has_ofac_restrictions": false,
        "key": "edX101+DemoX",
        "max_effort": 1,
        "min_effort": 1,
        "pacing_type": "self_paced",
        "run_type": "00000000-0000-4000-0000-000000000000",
        "seats": Array [],
        "start": "2000-01-01T12:00:00Z",
        "status": "published",
        "transcript_languages": Array [
          "ar-ae",
        ],
        "weeks_to_complete": 1,
      }
    }
    courseRunTypeOptions={Object {}}
    courseSubmitInfo={
      Object {
        "isSubmittingRunReview": false,
      }
    }
    courseSubmitting={false}
    courseUuid="11111111-1111-1111-1111-111111111111"
    editable={false}
    index={0}
    isOpen={false}
    isSubmittingForReview={true}
    languageOptions={
      Array [
        Object {
          "label": "Arabic - United Arab Emirates",
          "value": "ar-ae",
        },
      ]
    }
    owners={Array []}
    pacingTypeOptions={
      Array [
        Object {
          "label": "Self-paced",
          "value": "self_paced",
        },
      ]
    }
    runTypeModes={Object {}}
    sourceInfo={Object {}}
    stafferInfo={Object {}}
    targetRun={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="mb-3"
        >
          <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>
        </div>,
        <div>
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            format={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />
            }
            maxLength="10"
            name="test-course.go_live_date"
            normalize={[Function]}
            pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
            placeholder="yyyy/mm/dd"
            required={null}
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="Start date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.start"
            timeLabel="Start time (UTC)"
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="End date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.end"
            timeLabel="End time (UTC)"
            type="text"
          />
        </div>,
        <hr />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />
          }
          name="test-course.run_type"
          options={
            Array [
              Object {
                "label": "Select Course enrollment track first",
                "value": "",
              },
            ]
          }
          required={true}
        />,
        <Field
          component={[Function]}
          disabled={true}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />
          }
          name="test-course.pacing_type"
          options={
            Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ]
          }
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText={
            <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>
          }
          id="test-course.staff.label"
          optional={false}
          text="Staff"
        />,
        <Field
          component={[Function]}
          courseRunKey="edX101+DemoX"
          courseUuid="11111111-1111-1111-1111-111111111111"
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          name="test-course.staff"
          owners={Array []}
          sourceInfo={Object {}}
          stafferInfo={Object {}}
        />,
        <div
          className="row"
        >
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />
              }
              name="test-course.min_effort"
              required={null}
              type="number"
            />
          </div>
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />
              }
              name="test-course.max_effort"
              required={null}
              type="number"
            />
          </div>
        </div>,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />
          }
          name="test-course.weeks_to_complete"
          required={null}
          type="number"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />
          }
          name="test-course.content_language"
          options={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          required={null}
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={false}
          text="Transcript languages"
        />,
        <FieldArray
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          languageOptions={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          name="test-course.transcript_languages"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />
          }
          name="test-course.expected_program_type"
          type="text"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />
          }
          name="test-course.expected_program_name"
          type="text"
        />,
        undefined,
        <div>
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>
            }
            id="ofac-notice-label"
            optional={false}
            text="Course Embargo (OFAC) Restriction text added to the FAQ section"
          />
          <div
            className="mb-3"
          >
            No
          </div>
        </div>,
        undefined,
        false,
      ],
      "onToggle": undefined,
      "open": false,
      "title": <div
        className="course-run-label"
      >
        <span>
          Course run starting on Jan 01, 2000 - Self Paced
        </span>
        <Pill
          statuses={
            Array [
              "published",
            ]
          }
        />
        <div
          className="course-run-label"
        >
          <span>
            
          </span>
        </div>
        <div
          className="course-run-studio-url"
        >
          <React.Fragment>
            Studio URL -Â 
            <withDeprecatedProps(Hyperlink)
              destination="undefined/course/edX101+DemoX"
              target="_blank"
            >
              edX101+DemoX
            </withDeprecatedProps(Hyperlink)>
          </React.Fragment>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>,
          "className": "mb-3",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-hidden": true,
            "children": " All fields are required for publication unless otherwise specified.",
            "className": "text-info",
          },
          "ref": null,
          "rendered": " All fields are required for publication unless otherwise specified.",
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={null}
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "disabled": true,
              "extraInput": Object {
                "onInvalid": [Function],
              },
              "format": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />,
              "maxLength": "10",
              "name": "test-course.go_live_date",
              "normalize": [Function],
              "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
              "placeholder": "yyyy/mm/dd",
              "required": null,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "Start date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.start",
              "timeLabel": "Start time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "End date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.end",
              "timeLabel": "End time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText="Cannot edit after submission"
            helpText={
              <div>
                <p>
                  The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                </p>
                <p>
                  <a
                    href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Learn more.
                  </a>
                </p>
              </div>
            }
            id="test-course.run_type.label"
            optional={false}
            text="Course run enrollment track"
          />,
          "name": "test-course.run_type",
          "options": Array [
            Object {
              "label": "Select Course enrollment track first",
              "value": "",
            },
          ],
          "required": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  Course pacing is editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit course pacing.
                  </a>
                  .
                </p>
              </div>
            }
            id="test-course.pacing_type.label"
            optional={false}
            text="Course pacing"
          />,
          "name": "test-course.pacing_type",
          "options": Array [
            Object {
              "label": "Self-paced",
              "value": "self_paced",
            },
          ],
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": <div>
            <p>
              The primary instructor or instructors for the course.
            </p>
            <p>
              The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
            </p>
          </div>,
          "id": "test-course.staff.label",
          "optional": false,
          "text": "Staff",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "courseRunKey": "edX101+DemoX",
          "courseUuid": "11111111-1111-1111-1111-111111111111",
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "name": "test-course.staff",
          "owners": Array [],
          "sourceInfo": Object {},
          "stafferInfo": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={null}
                type="number"
              />
            </div>,
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={null}
                type="number"
              />
            </div>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={null}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />,
                "name": "test-course.min_effort",
                "required": null,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={null}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />,
                "name": "test-course.max_effort",
                "required": null,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                </p>
              </div>
            }
            id="test-course.weeks_to_complete.label"
            optional={false}
            text="Length"
          />,
          "name": "test-course.weeks_to_complete",
          "required": null,
          "type": "number",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Content language"
          />,
          "name": "test-course.content_language",
          "options": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "required": null,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": "",
          "id": null,
          "optional": false,
          "text": "Transcript languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "languageOptions": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "name": "test-course.transcript_languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program type here.
                </p>
              </div>
            }
            id="test-course.expected_program_type.label"
            optional={true}
            text="Expected Program Type"
          />,
          "name": "test-course.expected_program_type",
          "options": undefined,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program name here.
                </p>
              </div>
            }
            id="test-course.expected_program_name.label"
            optional={true}
            text="Expected Program Name"
          />,
          "name": "test-course.expected_program_name",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />,
            <div
              className="mb-3"
            >
              No
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>,
              "id": "ofac-notice-label",
              "optional": false,
              "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No",
              "className": "mb-3",
            },
            "ref": null,
            "rendered": "No",
            "type": "div",
          },
        ],
        "type": "div",
      },
      undefined,
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="mb-3"
          >
            <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>
          </div>,
          <div>
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={null}
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />
          </div>,
          <hr />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText="Cannot edit after submission"
                helpText={
                  <div>
                    <p>
                      The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                    </p>
                    <p>
                      <a
                        href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn more.
                      </a>
                    </p>
                  </div>
                }
                id="test-course.run_type.label"
                optional={false}
                text="Course run enrollment track"
              />
            }
            name="test-course.run_type"
            options={
              Array [
                Object {
                  "label": "Select Course enrollment track first",
                  "value": "",
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            disabled={true}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course pacing is editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit course pacing.
                      </a>
                      .
                    </p>
                  </div>
                }
                id="test-course.pacing_type.label"
                optional={false}
                text="Course pacing"
              />
            }
            name="test-course.pacing_type"
            options={
              Array [
                Object {
                  "label": "Self-paced",
                  "value": "self_paced",
                },
              ]
            }
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  The primary instructor or instructors for the course.
                </p>
                <p>
                  The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
                </p>
              </div>
            }
            id="test-course.staff.label"
            optional={false}
            text="Staff"
          />,
          <Field
            component={[Function]}
            courseRunKey="edX101+DemoX"
            courseUuid="11111111-1111-1111-1111-111111111111"
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            name="test-course.staff"
            owners={Array []}
            sourceInfo={Object {}}
            stafferInfo={Object {}}
          />,
          <div
            className="row"
          >
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={null}
                type="number"
              />
            </div>
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={null}
                type="number"
              />
            </div>
          </div>,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                    </p>
                  </div>
                }
                id="test-course.weeks_to_complete.label"
                optional={false}
                text="Length"
              />
            }
            name="test-course.weeks_to_complete"
            required={null}
            type="number"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Content language"
              />
            }
            name="test-course.content_language"
            options={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            required={null}
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Transcript languages"
          />,
          <FieldArray
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            languageOptions={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            name="test-course.transcript_languages"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program type here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_type.label"
                optional={true}
                text="Expected Program Type"
              />
            }
            name="test-course.expected_program_type"
            type="text"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program name here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_name.label"
                optional={true}
                text="Expected Program Name"
              />
            }
            name="test-course.expected_program_name"
            type="text"
          />,
          undefined,
          <div>
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />
            <div
              className="mb-3"
            >
              No
            </div>
          </div>,
          undefined,
          false,
        ],
        "onToggle": undefined,
        "open": false,
        "title": <div
          className="course-run-label"
        >
          <span>
            Course run starting on Jan 01, 2000 - Self Paced
          </span>
          <Pill
            statuses={
              Array [
                "published",
              ]
            }
          />
          <div
            className="course-run-label"
          >
            <span>
              
            </span>
          </div>
          <div
            className="course-run-studio-url"
          >
            <React.Fragment>
              Studio URL -Â 
              <withDeprecatedProps(Hyperlink)
                destination="undefined/course/edX101+DemoX"
                target="_blank"
              >
                edX101+DemoX
              </withDeprecatedProps(Hyperlink)>
            </React.Fragment>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>,
            "className": "mb-3",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-hidden": true,
              "children": " All fields are required for publication unless otherwise specified.",
              "className": "text-info",
            },
            "ref": null,
            "rendered": " All fields are required for publication unless otherwise specified.",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "onInvalid": [Function],
                  }
                }
                format={[Function]}
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          Required Format: yyyy/mm/dd
                        </p>
                        <p>
                          The scheduled date for when the course run will be live and published.
                        </p>
                        <p>
                          To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                        </p>
                        <p>
                          If you donâ€™t have a publish date yet, set to 1 year in the future.
                        </p>
                      </div>
                    }
                    id="test-course.go_live_date.label"
                    optional={false}
                    text="Publish date"
                  />
                }
                maxLength="10"
                name="test-course.go_live_date"
                normalize={[Function]}
                pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
                placeholder="yyyy/mm/dd"
                required={null}
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="Start date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.start"
                timeLabel="Start time (UTC)"
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="End date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.end"
                timeLabel="End time (UTC)"
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "onInvalid": [Function],
                },
                "format": [Function],
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />,
                "maxLength": "10",
                "name": "test-course.go_live_date",
                "normalize": [Function],
                "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
                "placeholder": "yyyy/mm/dd",
                "required": null,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "Start date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.start",
                "timeLabel": "Start time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "End date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.end",
                "timeLabel": "End time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />,
            "name": "test-course.run_type",
            "options": Array [
              Object {
                "label": "Select Course enrollment track first",
                "value": "",
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />,
            "name": "test-course.pacing_type",
            "options": Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>,
            "id": "test-course.staff.label",
            "optional": false,
            "text": "Staff",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "courseRunKey": "edX101+DemoX",
            "courseUuid": "11111111-1111-1111-1111-111111111111",
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "name": "test-course.staff",
            "owners": Array [],
            "sourceInfo": Object {},
            "stafferInfo": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={null}
                  type="number"
                />
              </div>,
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={null}
                  type="number"
                />
              </div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={null}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />,
                  "name": "test-course.min_effort",
                  "required": null,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={null}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />,
                  "name": "test-course.max_effort",
                  "required": null,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />,
            "name": "test-course.weeks_to_complete",
            "required": null,
            "type": "number",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />,
            "name": "test-course.content_language",
            "options": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "required": null,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": false,
            "text": "Transcript languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "languageOptions": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "name": "test-course.transcript_languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />,
            "name": "test-course.expected_program_type",
            "options": undefined,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />,
            "name": "test-course.expected_program_name",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FieldLabel
                className="mb-2"
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course embargo status for OFAC is managed internally, please contact support with questions.
                    </p>
                  </div>
                }
                id="ofac-notice-label"
                optional={false}
                text="Course Embargo (OFAC) Restriction text added to the FAQ section"
              />,
              <div
                className="mb-3"
              >
                No
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "mb-2",
                "extraText": "",
                "helpText": <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>,
                "id": "ofac-notice-label",
                "optional": false,
                "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "No",
                "className": "mb-3",
              },
              "ref": null,
              "rendered": "No",
              "type": "div",
            },
          ],
          "type": "div",
        },
        undefined,
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Collapsible Course Run renders correctly with a course run type 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CollapsibleCourseRun
    authentication={Object {}}
    courseId="test-course"
    courseInReview={false}
    courseRun={
      Object {
        "content_language": "ar-ae",
        "end": "2010-01-01T00:00:00Z",
        "external_key": null,
        "go_live_date": "1999-12-31T00:00:00Z",
        "has_ofac_restrictions": false,
        "key": "edX101+DemoX",
        "max_effort": 1,
        "min_effort": 1,
        "pacing_type": "self_paced",
        "run_type": "00000000-0000-4000-0000-000000000000",
        "seats": Array [],
        "start": "2000-01-01T12:00:00Z",
        "status": "unpublished",
        "transcript_languages": Array [
          "ar-ae",
        ],
        "weeks_to_complete": 1,
      }
    }
    courseRunTypeOptions={
      Object {
        "8a8f30e1-23ce-4ed3-a361-1325c656b67b": Array [
          Object {
            "label": "Select enrollment track",
            "value": "",
          },
          Object {
            "label": "Verified and Audit",
            "value": "4e260c57-24ef-46c1-9a0d-5ec3a30f6b0c",
          },
          Object {
            "label": "Audit Only",
            "value": "cfacfc62-54bd-4e1b-939a-5a94f12fbd8d",
          },
          Object {
            "label": "Masters, Verified, and Audit",
            "value": "00000000-0000-4000-0000-000000000000",
          },
        ],
      }
    }
    courseSubmitInfo={
      Object {
        "isSubmittingRunReview": false,
      }
    }
    courseSubmitting={false}
    courseUuid="11111111-1111-1111-1111-111111111111"
    currentFormValues={
      Object {
        "course_runs": Array [
          Object {
            "content_language": "ar-ae",
            "end": "2010-01-01T00:00:00Z",
            "external_key": null,
            "go_live_date": "1999-12-31T00:00:00Z",
            "has_ofac_restrictions": false,
            "key": "edX101+DemoX",
            "max_effort": 1,
            "min_effort": 1,
            "pacing_type": "self_paced",
            "run_type": "00000000-0000-4000-0000-000000000000",
            "seats": Array [],
            "start": "2000-01-01T12:00:00Z",
            "status": "published",
            "transcript_languages": Array [
              "ar-ae",
            ],
            "weeks_to_complete": 1,
          },
          Object {
            "content_language": "ar-ae",
            "end": "2010-01-01T00:00:00Z",
            "external_key": null,
            "go_live_date": "1999-12-31T00:00:00Z",
            "has_ofac_restrictions": false,
            "key": "edX101+DemoX",
            "max_effort": 1,
            "min_effort": 1,
            "pacing_type": "self_paced",
            "run_type": "00000000-0000-4000-0000-000000000000",
            "seats": Array [],
            "start": "2000-01-01T12:00:00Z",
            "status": "unpublished",
            "transcript_languages": Array [
              "ar-ae",
            ],
            "weeks_to_complete": 1,
          },
        ],
        "type": "8a8f30e1-23ce-4ed3-a361-1325c656b67b",
      }
    }
    editable={false}
    index={1}
    isOpen={false}
    isSubmittingForReview={false}
    languageOptions={
      Array [
        Object {
          "label": "Arabic - United Arab Emirates",
          "value": "ar-ae",
        },
      ]
    }
    owners={Array []}
    pacingTypeOptions={
      Array [
        Object {
          "label": "Self-paced",
          "value": "self_paced",
        },
      ]
    }
    runTypeModes={Object {}}
    sourceInfo={Object {}}
    stafferInfo={Object {}}
    targetRun={null}
    type="8a8f30e1-23ce-4ed3-a361-1325c656b67b"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="mb-3"
        >
          <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>
        </div>,
        <div>
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            format={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />
            }
            maxLength="10"
            name="test-course.go_live_date"
            normalize={[Function]}
            pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
            placeholder="yyyy/mm/dd"
            required={false}
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="Start date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.start"
            timeLabel="Start time (UTC)"
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="End date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.end"
            timeLabel="End time (UTC)"
            type="text"
          />
        </div>,
        <hr />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />
          }
          name="test-course.run_type"
          options={
            Array [
              Object {
                "label": "Select enrollment track",
                "value": "",
              },
              Object {
                "label": "Verified and Audit",
                "value": "4e260c57-24ef-46c1-9a0d-5ec3a30f6b0c",
              },
              Object {
                "label": "Audit Only",
                "value": "cfacfc62-54bd-4e1b-939a-5a94f12fbd8d",
              },
              Object {
                "label": "Masters, Verified, and Audit",
                "value": "00000000-0000-4000-0000-000000000000",
              },
            ]
          }
          required={true}
        />,
        <Field
          component={[Function]}
          disabled={true}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />
          }
          name="test-course.pacing_type"
          options={
            Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ]
          }
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText={
            <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>
          }
          id="test-course.staff.label"
          optional={false}
          text="Staff"
        />,
        <Field
          component={[Function]}
          courseRunKey="edX101+DemoX"
          courseUuid="11111111-1111-1111-1111-111111111111"
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          name="test-course.staff"
          owners={Array []}
          sourceInfo={Object {}}
          stafferInfo={Object {}}
        />,
        <div
          className="row"
        >
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />
              }
              name="test-course.min_effort"
              required={false}
              type="number"
            />
          </div>
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />
              }
              name="test-course.max_effort"
              required={false}
              type="number"
            />
          </div>
        </div>,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />
          }
          name="test-course.weeks_to_complete"
          required={false}
          type="number"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />
          }
          name="test-course.content_language"
          options={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          required={false}
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={false}
          text="Transcript languages"
        />,
        <FieldArray
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          languageOptions={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          name="test-course.transcript_languages"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />
          }
          name="test-course.expected_program_type"
          type="text"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />
          }
          name="test-course.expected_program_name"
          type="text"
        />,
        undefined,
        <div>
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>
            }
            id="ofac-notice-label"
            optional={false}
            text="Course Embargo (OFAC) Restriction text added to the FAQ section"
          />
          <div
            className="mb-3"
          >
            No
          </div>
        </div>,
        undefined,
        false,
      ],
      "onToggle": undefined,
      "open": false,
      "title": <div
        className="course-run-label"
      >
        <span>
          Course run starting on Jan 01, 2000 - Self Paced
        </span>
        <Pill
          statuses={
            Array [
              "unpublished",
            ]
          }
        />
        <div
          className="course-run-label"
        >
          <span>
            Publish date is Dec 31, 1999
          </span>
        </div>
        <div
          className="course-run-studio-url"
        >
          <React.Fragment>
            Studio URL -Â 
            <withDeprecatedProps(Hyperlink)
              destination="undefined/course/edX101+DemoX"
              target="_blank"
            >
              edX101+DemoX
            </withDeprecatedProps(Hyperlink)>
          </React.Fragment>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>,
          "className": "mb-3",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-hidden": true,
            "children": " All fields are required for publication unless otherwise specified.",
            "className": "text-info",
          },
          "ref": null,
          "rendered": " All fields are required for publication unless otherwise specified.",
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={false}
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "disabled": true,
              "extraInput": Object {
                "onInvalid": [Function],
              },
              "format": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />,
              "maxLength": "10",
              "name": "test-course.go_live_date",
              "normalize": [Function],
              "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
              "placeholder": "yyyy/mm/dd",
              "required": false,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "Start date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.start",
              "timeLabel": "Start time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "End date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.end",
              "timeLabel": "End time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText="Cannot edit after submission"
            helpText={
              <div>
                <p>
                  The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                </p>
                <p>
                  <a
                    href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Learn more.
                  </a>
                </p>
              </div>
            }
            id="test-course.run_type.label"
            optional={false}
            text="Course run enrollment track"
          />,
          "name": "test-course.run_type",
          "options": Array [
            Object {
              "label": "Select enrollment track",
              "value": "",
            },
            Object {
              "label": "Verified and Audit",
              "value": "4e260c57-24ef-46c1-9a0d-5ec3a30f6b0c",
            },
            Object {
              "label": "Audit Only",
              "value": "cfacfc62-54bd-4e1b-939a-5a94f12fbd8d",
            },
            Object {
              "label": "Masters, Verified, and Audit",
              "value": "00000000-0000-4000-0000-000000000000",
            },
          ],
          "required": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  Course pacing is editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit course pacing.
                  </a>
                  .
                </p>
              </div>
            }
            id="test-course.pacing_type.label"
            optional={false}
            text="Course pacing"
          />,
          "name": "test-course.pacing_type",
          "options": Array [
            Object {
              "label": "Self-paced",
              "value": "self_paced",
            },
          ],
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": <div>
            <p>
              The primary instructor or instructors for the course.
            </p>
            <p>
              The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
            </p>
          </div>,
          "id": "test-course.staff.label",
          "optional": false,
          "text": "Staff",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "courseRunKey": "edX101+DemoX",
          "courseUuid": "11111111-1111-1111-1111-111111111111",
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "name": "test-course.staff",
          "owners": Array [],
          "sourceInfo": Object {},
          "stafferInfo": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />
            </div>,
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />
            </div>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />,
                "name": "test-course.min_effort",
                "required": false,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />,
                "name": "test-course.max_effort",
                "required": false,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                </p>
              </div>
            }
            id="test-course.weeks_to_complete.label"
            optional={false}
            text="Length"
          />,
          "name": "test-course.weeks_to_complete",
          "required": false,
          "type": "number",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Content language"
          />,
          "name": "test-course.content_language",
          "options": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "required": false,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": "",
          "id": null,
          "optional": false,
          "text": "Transcript languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "languageOptions": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "name": "test-course.transcript_languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program type here.
                </p>
              </div>
            }
            id="test-course.expected_program_type.label"
            optional={true}
            text="Expected Program Type"
          />,
          "name": "test-course.expected_program_type",
          "options": undefined,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program name here.
                </p>
              </div>
            }
            id="test-course.expected_program_name.label"
            optional={true}
            text="Expected Program Name"
          />,
          "name": "test-course.expected_program_name",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />,
            <div
              className="mb-3"
            >
              No
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>,
              "id": "ofac-notice-label",
              "optional": false,
              "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No",
              "className": "mb-3",
            },
            "ref": null,
            "rendered": "No",
            "type": "div",
          },
        ],
        "type": "div",
      },
      undefined,
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="mb-3"
          >
            <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>
          </div>,
          <div>
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={false}
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />
          </div>,
          <hr />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText="Cannot edit after submission"
                helpText={
                  <div>
                    <p>
                      The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                    </p>
                    <p>
                      <a
                        href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn more.
                      </a>
                    </p>
                  </div>
                }
                id="test-course.run_type.label"
                optional={false}
                text="Course run enrollment track"
              />
            }
            name="test-course.run_type"
            options={
              Array [
                Object {
                  "label": "Select enrollment track",
                  "value": "",
                },
                Object {
                  "label": "Verified and Audit",
                  "value": "4e260c57-24ef-46c1-9a0d-5ec3a30f6b0c",
                },
                Object {
                  "label": "Audit Only",
                  "value": "cfacfc62-54bd-4e1b-939a-5a94f12fbd8d",
                },
                Object {
                  "label": "Masters, Verified, and Audit",
                  "value": "00000000-0000-4000-0000-000000000000",
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            disabled={true}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course pacing is editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit course pacing.
                      </a>
                      .
                    </p>
                  </div>
                }
                id="test-course.pacing_type.label"
                optional={false}
                text="Course pacing"
              />
            }
            name="test-course.pacing_type"
            options={
              Array [
                Object {
                  "label": "Self-paced",
                  "value": "self_paced",
                },
              ]
            }
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  The primary instructor or instructors for the course.
                </p>
                <p>
                  The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
                </p>
              </div>
            }
            id="test-course.staff.label"
            optional={false}
            text="Staff"
          />,
          <Field
            component={[Function]}
            courseRunKey="edX101+DemoX"
            courseUuid="11111111-1111-1111-1111-111111111111"
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            name="test-course.staff"
            owners={Array []}
            sourceInfo={Object {}}
            stafferInfo={Object {}}
          />,
          <div
            className="row"
          >
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />
            </div>
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />
            </div>
          </div>,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                    </p>
                  </div>
                }
                id="test-course.weeks_to_complete.label"
                optional={false}
                text="Length"
              />
            }
            name="test-course.weeks_to_complete"
            required={false}
            type="number"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Content language"
              />
            }
            name="test-course.content_language"
            options={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            required={false}
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Transcript languages"
          />,
          <FieldArray
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            languageOptions={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            name="test-course.transcript_languages"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program type here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_type.label"
                optional={true}
                text="Expected Program Type"
              />
            }
            name="test-course.expected_program_type"
            type="text"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program name here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_name.label"
                optional={true}
                text="Expected Program Name"
              />
            }
            name="test-course.expected_program_name"
            type="text"
          />,
          undefined,
          <div>
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />
            <div
              className="mb-3"
            >
              No
            </div>
          </div>,
          undefined,
          false,
        ],
        "onToggle": undefined,
        "open": false,
        "title": <div
          className="course-run-label"
        >
          <span>
            Course run starting on Jan 01, 2000 - Self Paced
          </span>
          <Pill
            statuses={
              Array [
                "unpublished",
              ]
            }
          />
          <div
            className="course-run-label"
          >
            <span>
              Publish date is Dec 31, 1999
            </span>
          </div>
          <div
            className="course-run-studio-url"
          >
            <React.Fragment>
              Studio URL -Â 
              <withDeprecatedProps(Hyperlink)
                destination="undefined/course/edX101+DemoX"
                target="_blank"
              >
                edX101+DemoX
              </withDeprecatedProps(Hyperlink)>
            </React.Fragment>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>,
            "className": "mb-3",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-hidden": true,
              "children": " All fields are required for publication unless otherwise specified.",
              "className": "text-info",
            },
            "ref": null,
            "rendered": " All fields are required for publication unless otherwise specified.",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "onInvalid": [Function],
                  }
                }
                format={[Function]}
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          Required Format: yyyy/mm/dd
                        </p>
                        <p>
                          The scheduled date for when the course run will be live and published.
                        </p>
                        <p>
                          To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                        </p>
                        <p>
                          If you donâ€™t have a publish date yet, set to 1 year in the future.
                        </p>
                      </div>
                    }
                    id="test-course.go_live_date.label"
                    optional={false}
                    text="Publish date"
                  />
                }
                maxLength="10"
                name="test-course.go_live_date"
                normalize={[Function]}
                pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
                placeholder="yyyy/mm/dd"
                required={false}
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="Start date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.start"
                timeLabel="Start time (UTC)"
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="End date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.end"
                timeLabel="End time (UTC)"
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "onInvalid": [Function],
                },
                "format": [Function],
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />,
                "maxLength": "10",
                "name": "test-course.go_live_date",
                "normalize": [Function],
                "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
                "placeholder": "yyyy/mm/dd",
                "required": false,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "Start date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.start",
                "timeLabel": "Start time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "End date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.end",
                "timeLabel": "End time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />,
            "name": "test-course.run_type",
            "options": Array [
              Object {
                "label": "Select enrollment track",
                "value": "",
              },
              Object {
                "label": "Verified and Audit",
                "value": "4e260c57-24ef-46c1-9a0d-5ec3a30f6b0c",
              },
              Object {
                "label": "Audit Only",
                "value": "cfacfc62-54bd-4e1b-939a-5a94f12fbd8d",
              },
              Object {
                "label": "Masters, Verified, and Audit",
                "value": "00000000-0000-4000-0000-000000000000",
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />,
            "name": "test-course.pacing_type",
            "options": Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>,
            "id": "test-course.staff.label",
            "optional": false,
            "text": "Staff",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "courseRunKey": "edX101+DemoX",
            "courseUuid": "11111111-1111-1111-1111-111111111111",
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "name": "test-course.staff",
            "owners": Array [],
            "sourceInfo": Object {},
            "stafferInfo": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={false}
                  type="number"
                />
              </div>,
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={false}
                  type="number"
                />
              </div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={false}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />,
                  "name": "test-course.min_effort",
                  "required": false,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={false}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />,
                  "name": "test-course.max_effort",
                  "required": false,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />,
            "name": "test-course.weeks_to_complete",
            "required": false,
            "type": "number",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />,
            "name": "test-course.content_language",
            "options": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "required": false,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": false,
            "text": "Transcript languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "languageOptions": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "name": "test-course.transcript_languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />,
            "name": "test-course.expected_program_type",
            "options": undefined,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />,
            "name": "test-course.expected_program_name",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FieldLabel
                className="mb-2"
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course embargo status for OFAC is managed internally, please contact support with questions.
                    </p>
                  </div>
                }
                id="ofac-notice-label"
                optional={false}
                text="Course Embargo (OFAC) Restriction text added to the FAQ section"
              />,
              <div
                className="mb-3"
              >
                No
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "mb-2",
                "extraText": "",
                "helpText": <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>,
                "id": "ofac-notice-label",
                "optional": false,
                "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "No",
                "className": "mb-3",
              },
              "ref": null,
              "rendered": "No",
              "type": "div",
            },
          ],
          "type": "div",
        },
        undefined,
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Collapsible Course Run renders correctly with external key field enabled 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CollapsibleCourseRun
    authentication={Object {}}
    courseId="test-course"
    courseInReview={false}
    courseRun={
      Object {
        "content_language": "ar-ae",
        "end": "2010-01-01T00:00:00Z",
        "external_key": null,
        "go_live_date": "1999-12-31T00:00:00Z",
        "has_ofac_restrictions": false,
        "key": "edX101+DemoX",
        "max_effort": 1,
        "min_effort": 1,
        "pacing_type": "self_paced",
        "run_type": "00000000-0000-4000-0000-000000000000",
        "seats": Array [],
        "start": "2000-01-01T12:00:00Z",
        "status": "unpublished",
        "transcript_languages": Array [
          "ar-ae",
        ],
        "weeks_to_complete": 1,
      }
    }
    courseRunTypeOptions={
      Object {
        "8a8f30e1-23ce-4ed3-a361-1325c656b67b": Array [
          Object {
            "label": "Select enrollment track",
            "value": "",
          },
          Object {
            "label": "Verified and Audit",
            "value": "4e260c57-24ef-46c1-9a0d-5ec3a30f6b0c",
          },
          Object {
            "label": "Audit Only",
            "value": "cfacfc62-54bd-4e1b-939a-5a94f12fbd8d",
          },
          Object {
            "label": "Masters, Verified, and Audit",
            "value": "00000000-0000-4000-0000-000000000000",
          },
        ],
      }
    }
    courseSubmitInfo={
      Object {
        "isSubmittingRunReview": false,
      }
    }
    courseSubmitting={false}
    courseUuid="11111111-1111-1111-1111-111111111111"
    currentFormValues={
      Object {
        "course_runs": Array [
          Object {
            "content_language": "ar-ae",
            "end": "2010-01-01T00:00:00Z",
            "external_key": null,
            "go_live_date": "1999-12-31T00:00:00Z",
            "has_ofac_restrictions": false,
            "key": "edX101+DemoX",
            "max_effort": 1,
            "min_effort": 1,
            "pacing_type": "self_paced",
            "run_type": "00000000-0000-4000-0000-000000000000",
            "seats": Array [],
            "start": "2000-01-01T12:00:00Z",
            "status": "published",
            "transcript_languages": Array [
              "ar-ae",
            ],
            "weeks_to_complete": 1,
          },
          Object {
            "content_language": "ar-ae",
            "end": "2010-01-01T00:00:00Z",
            "external_key": null,
            "go_live_date": "1999-12-31T00:00:00Z",
            "has_ofac_restrictions": false,
            "key": "edX101+DemoX",
            "max_effort": 1,
            "min_effort": 1,
            "pacing_type": "self_paced",
            "run_type": "00000000-0000-4000-0000-000000000000",
            "seats": Array [],
            "start": "2000-01-01T12:00:00Z",
            "status": "unpublished",
            "transcript_languages": Array [
              "ar-ae",
            ],
            "weeks_to_complete": 1,
          },
        ],
        "type": "8a8f30e1-23ce-4ed3-a361-1325c656b67b",
      }
    }
    editable={false}
    index={1}
    isOpen={false}
    isSubmittingForReview={false}
    languageOptions={
      Array [
        Object {
          "label": "Arabic - United Arab Emirates",
          "value": "ar-ae",
        },
      ]
    }
    owners={Array []}
    pacingTypeOptions={
      Array [
        Object {
          "label": "Self-paced",
          "value": "self_paced",
        },
      ]
    }
    runTypeModes={
      Object {
        "00000000-0000-4000-0000-000000000000": Array [
          "audit",
          "masters",
          "verified",
        ],
      }
    }
    sourceInfo={Object {}}
    stafferInfo={Object {}}
    targetRun={null}
    type="8a8f30e1-23ce-4ed3-a361-1325c656b67b"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="mb-3"
        >
          <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>
        </div>,
        <div>
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            format={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />
            }
            maxLength="10"
            name="test-course.go_live_date"
            normalize={[Function]}
            pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
            placeholder="yyyy/mm/dd"
            required={false}
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="Start date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.start"
            timeLabel="Start time (UTC)"
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="End date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.end"
            timeLabel="End time (UTC)"
            type="text"
          />
        </div>,
        <hr />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />
          }
          name="test-course.run_type"
          options={
            Array [
              Object {
                "label": "Select enrollment track",
                "value": "",
              },
              Object {
                "label": "Verified and Audit",
                "value": "4e260c57-24ef-46c1-9a0d-5ec3a30f6b0c",
              },
              Object {
                "label": "Audit Only",
                "value": "cfacfc62-54bd-4e1b-939a-5a94f12fbd8d",
              },
              Object {
                "label": "Masters, Verified, and Audit",
                "value": "00000000-0000-4000-0000-000000000000",
              },
            ]
          }
          required={true}
        />,
        <Field
          component={[Function]}
          disabled={true}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />
          }
          name="test-course.pacing_type"
          options={
            Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ]
          }
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText={
            <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>
          }
          id="test-course.staff.label"
          optional={false}
          text="Staff"
        />,
        <Field
          component={[Function]}
          courseRunKey="edX101+DemoX"
          courseUuid="11111111-1111-1111-1111-111111111111"
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          name="test-course.staff"
          owners={Array []}
          sourceInfo={Object {}}
          stafferInfo={Object {}}
        />,
        <div
          className="row"
        >
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />
              }
              name="test-course.min_effort"
              required={false}
              type="number"
            />
          </div>
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />
              }
              name="test-course.max_effort"
              required={false}
              type="number"
            />
          </div>
        </div>,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />
          }
          name="test-course.weeks_to_complete"
          required={false}
          type="number"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />
          }
          name="test-course.content_language"
          options={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          required={false}
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={false}
          text="Transcript languages"
        />,
        <FieldArray
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          languageOptions={
            Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ]
          }
          name="test-course.transcript_languages"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />
          }
          name="test-course.expected_program_type"
          type="text"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />
          }
          name="test-course.expected_program_name"
          type="text"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Only fill in this field if you are planning to integrate with your Institutionâ€™s systems through edX registrar service.
                  </p>
                </div>
              }
              id="test-course.external_key.label"
              optional={true}
              text="Institution Course ID"
            />
          }
          name="test-course.external_key"
          type="text"
        />,
        <div>
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>
            }
            id="ofac-notice-label"
            optional={false}
            text="Course Embargo (OFAC) Restriction text added to the FAQ section"
          />
          <div
            className="mb-3"
          >
            No
          </div>
        </div>,
        undefined,
        false,
      ],
      "onToggle": undefined,
      "open": false,
      "title": <div
        className="course-run-label"
      >
        <span>
          Course run starting on Jan 01, 2000 - Self Paced
        </span>
        <Pill
          statuses={
            Array [
              "unpublished",
            ]
          }
        />
        <div
          className="course-run-label"
        >
          <span>
            Publish date is Dec 31, 1999
          </span>
        </div>
        <div
          className="course-run-studio-url"
        >
          <React.Fragment>
            Studio URL -Â 
            <withDeprecatedProps(Hyperlink)
              destination="undefined/course/edX101+DemoX"
              target="_blank"
            >
              edX101+DemoX
            </withDeprecatedProps(Hyperlink)>
          </React.Fragment>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>,
          "className": "mb-3",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-hidden": true,
            "children": " All fields are required for publication unless otherwise specified.",
            "className": "text-info",
          },
          "ref": null,
          "rendered": " All fields are required for publication unless otherwise specified.",
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={false}
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "disabled": true,
              "extraInput": Object {
                "onInvalid": [Function],
              },
              "format": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />,
              "maxLength": "10",
              "name": "test-course.go_live_date",
              "normalize": [Function],
              "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
              "placeholder": "yyyy/mm/dd",
              "required": false,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "Start date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.start",
              "timeLabel": "Start time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "End date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.end",
              "timeLabel": "End time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText="Cannot edit after submission"
            helpText={
              <div>
                <p>
                  The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                </p>
                <p>
                  <a
                    href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Learn more.
                  </a>
                </p>
              </div>
            }
            id="test-course.run_type.label"
            optional={false}
            text="Course run enrollment track"
          />,
          "name": "test-course.run_type",
          "options": Array [
            Object {
              "label": "Select enrollment track",
              "value": "",
            },
            Object {
              "label": "Verified and Audit",
              "value": "4e260c57-24ef-46c1-9a0d-5ec3a30f6b0c",
            },
            Object {
              "label": "Audit Only",
              "value": "cfacfc62-54bd-4e1b-939a-5a94f12fbd8d",
            },
            Object {
              "label": "Masters, Verified, and Audit",
              "value": "00000000-0000-4000-0000-000000000000",
            },
          ],
          "required": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  Course pacing is editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/edX101+DemoX"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit course pacing.
                  </a>
                  .
                </p>
              </div>
            }
            id="test-course.pacing_type.label"
            optional={false}
            text="Course pacing"
          />,
          "name": "test-course.pacing_type",
          "options": Array [
            Object {
              "label": "Self-paced",
              "value": "self_paced",
            },
          ],
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": <div>
            <p>
              The primary instructor or instructors for the course.
            </p>
            <p>
              The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
            </p>
          </div>,
          "id": "test-course.staff.label",
          "optional": false,
          "text": "Staff",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "courseRunKey": "edX101+DemoX",
          "courseUuid": "11111111-1111-1111-1111-111111111111",
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "name": "test-course.staff",
          "owners": Array [],
          "sourceInfo": Object {},
          "stafferInfo": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />
            </div>,
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />
            </div>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />,
                "name": "test-course.min_effort",
                "required": false,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />,
                "name": "test-course.max_effort",
                "required": false,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                </p>
              </div>
            }
            id="test-course.weeks_to_complete.label"
            optional={false}
            text="Length"
          />,
          "name": "test-course.weeks_to_complete",
          "required": false,
          "type": "number",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Content language"
          />,
          "name": "test-course.content_language",
          "options": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "required": false,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": "",
          "id": null,
          "optional": false,
          "text": "Transcript languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "languageOptions": Array [
            Object {
              "label": "Arabic - United Arab Emirates",
              "value": "ar-ae",
            },
          ],
          "name": "test-course.transcript_languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program type here.
                </p>
              </div>
            }
            id="test-course.expected_program_type.label"
            optional={true}
            text="Expected Program Type"
          />,
          "name": "test-course.expected_program_type",
          "options": undefined,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program name here.
                </p>
              </div>
            }
            id="test-course.expected_program_name.label"
            optional={true}
            text="Expected Program Name"
          />,
          "name": "test-course.expected_program_name",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  Only fill in this field if you are planning to integrate with your Institutionâ€™s systems through edX registrar service.
                </p>
              </div>
            }
            id="test-course.external_key.label"
            optional={true}
            text="Institution Course ID"
          />,
          "name": "test-course.external_key",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />,
            <div
              className="mb-3"
            >
              No
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>,
              "id": "ofac-notice-label",
              "optional": false,
              "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No",
              "className": "mb-3",
            },
            "ref": null,
            "rendered": "No",
            "type": "div",
          },
        ],
        "type": "div",
      },
      undefined,
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="mb-3"
          >
            <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>
          </div>,
          <div>
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={false}
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />
          </div>,
          <hr />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText="Cannot edit after submission"
                helpText={
                  <div>
                    <p>
                      The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                    </p>
                    <p>
                      <a
                        href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn more.
                      </a>
                    </p>
                  </div>
                }
                id="test-course.run_type.label"
                optional={false}
                text="Course run enrollment track"
              />
            }
            name="test-course.run_type"
            options={
              Array [
                Object {
                  "label": "Select enrollment track",
                  "value": "",
                },
                Object {
                  "label": "Verified and Audit",
                  "value": "4e260c57-24ef-46c1-9a0d-5ec3a30f6b0c",
                },
                Object {
                  "label": "Audit Only",
                  "value": "cfacfc62-54bd-4e1b-939a-5a94f12fbd8d",
                },
                Object {
                  "label": "Masters, Verified, and Audit",
                  "value": "00000000-0000-4000-0000-000000000000",
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            disabled={true}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course pacing is editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit course pacing.
                      </a>
                      .
                    </p>
                  </div>
                }
                id="test-course.pacing_type.label"
                optional={false}
                text="Course pacing"
              />
            }
            name="test-course.pacing_type"
            options={
              Array [
                Object {
                  "label": "Self-paced",
                  "value": "self_paced",
                },
              ]
            }
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  The primary instructor or instructors for the course.
                </p>
                <p>
                  The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
                </p>
              </div>
            }
            id="test-course.staff.label"
            optional={false}
            text="Staff"
          />,
          <Field
            component={[Function]}
            courseRunKey="edX101+DemoX"
            courseUuid="11111111-1111-1111-1111-111111111111"
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            name="test-course.staff"
            owners={Array []}
            sourceInfo={Object {}}
            stafferInfo={Object {}}
          />,
          <div
            className="row"
          >
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />
            </div>
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />
            </div>
          </div>,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                    </p>
                  </div>
                }
                id="test-course.weeks_to_complete.label"
                optional={false}
                text="Length"
              />
            }
            name="test-course.weeks_to_complete"
            required={false}
            type="number"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Content language"
              />
            }
            name="test-course.content_language"
            options={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            required={false}
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Transcript languages"
          />,
          <FieldArray
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            languageOptions={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            name="test-course.transcript_languages"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program type here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_type.label"
                optional={true}
                text="Expected Program Type"
              />
            }
            name="test-course.expected_program_type"
            type="text"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program name here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_name.label"
                optional={true}
                text="Expected Program Name"
              />
            }
            name="test-course.expected_program_name"
            type="text"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Only fill in this field if you are planning to integrate with your Institutionâ€™s systems through edX registrar service.
                    </p>
                  </div>
                }
                id="test-course.external_key.label"
                optional={true}
                text="Institution Course ID"
              />
            }
            name="test-course.external_key"
            type="text"
          />,
          <div>
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />
            <div
              className="mb-3"
            >
              No
            </div>
          </div>,
          undefined,
          false,
        ],
        "onToggle": undefined,
        "open": false,
        "title": <div
          className="course-run-label"
        >
          <span>
            Course run starting on Jan 01, 2000 - Self Paced
          </span>
          <Pill
            statuses={
              Array [
                "unpublished",
              ]
            }
          />
          <div
            className="course-run-label"
          >
            <span>
              Publish date is Dec 31, 1999
            </span>
          </div>
          <div
            className="course-run-studio-url"
          >
            <React.Fragment>
              Studio URL -Â 
              <withDeprecatedProps(Hyperlink)
                destination="undefined/course/edX101+DemoX"
                target="_blank"
              >
                edX101+DemoX
              </withDeprecatedProps(Hyperlink)>
            </React.Fragment>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>,
            "className": "mb-3",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-hidden": true,
              "children": " All fields are required for publication unless otherwise specified.",
              "className": "text-info",
            },
            "ref": null,
            "rendered": " All fields are required for publication unless otherwise specified.",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "onInvalid": [Function],
                  }
                }
                format={[Function]}
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          Required Format: yyyy/mm/dd
                        </p>
                        <p>
                          The scheduled date for when the course run will be live and published.
                        </p>
                        <p>
                          To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                        </p>
                        <p>
                          If you donâ€™t have a publish date yet, set to 1 year in the future.
                        </p>
                      </div>
                    }
                    id="test-course.go_live_date.label"
                    optional={false}
                    text="Publish date"
                  />
                }
                maxLength="10"
                name="test-course.go_live_date"
                normalize={[Function]}
                pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
                placeholder="yyyy/mm/dd"
                required={false}
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="Start date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.start"
                timeLabel="Start time (UTC)"
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="End date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/edX101+DemoX#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.end"
                timeLabel="End time (UTC)"
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "onInvalid": [Function],
                },
                "format": [Function],
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />,
                "maxLength": "10",
                "name": "test-course.go_live_date",
                "normalize": [Function],
                "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
                "placeholder": "yyyy/mm/dd",
                "required": false,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "Start date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.start",
                "timeLabel": "Start time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "End date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.end",
                "timeLabel": "End time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />,
            "name": "test-course.run_type",
            "options": Array [
              Object {
                "label": "Select enrollment track",
                "value": "",
              },
              Object {
                "label": "Verified and Audit",
                "value": "4e260c57-24ef-46c1-9a0d-5ec3a30f6b0c",
              },
              Object {
                "label": "Audit Only",
                "value": "cfacfc62-54bd-4e1b-939a-5a94f12fbd8d",
              },
              Object {
                "label": "Masters, Verified, and Audit",
                "value": "00000000-0000-4000-0000-000000000000",
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/edX101+DemoX"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />,
            "name": "test-course.pacing_type",
            "options": Array [
              Object {
                "label": "Self-paced",
                "value": "self_paced",
              },
            ],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>,
            "id": "test-course.staff.label",
            "optional": false,
            "text": "Staff",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "courseRunKey": "edX101+DemoX",
            "courseUuid": "11111111-1111-1111-1111-111111111111",
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "name": "test-course.staff",
            "owners": Array [],
            "sourceInfo": Object {},
            "stafferInfo": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={false}
                  type="number"
                />
              </div>,
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={false}
                  type="number"
                />
              </div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={false}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />,
                  "name": "test-course.min_effort",
                  "required": false,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={false}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />,
                  "name": "test-course.max_effort",
                  "required": false,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />,
            "name": "test-course.weeks_to_complete",
            "required": false,
            "type": "number",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />,
            "name": "test-course.content_language",
            "options": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "required": false,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": false,
            "text": "Transcript languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "languageOptions": Array [
              Object {
                "label": "Arabic - United Arab Emirates",
                "value": "ar-ae",
              },
            ],
            "name": "test-course.transcript_languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />,
            "name": "test-course.expected_program_type",
            "options": undefined,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />,
            "name": "test-course.expected_program_name",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Only fill in this field if you are planning to integrate with your Institutionâ€™s systems through edX registrar service.
                  </p>
                </div>
              }
              id="test-course.external_key.label"
              optional={true}
              text="Institution Course ID"
            />,
            "name": "test-course.external_key",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FieldLabel
                className="mb-2"
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course embargo status for OFAC is managed internally, please contact support with questions.
                    </p>
                  </div>
                }
                id="ofac-notice-label"
                optional={false}
                text="Course Embargo (OFAC) Restriction text added to the FAQ section"
              />,
              <div
                className="mb-3"
              >
                No
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "mb-2",
                "extraText": "",
                "helpText": <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>,
                "id": "ofac-notice-label",
                "optional": false,
                "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "No",
                "className": "mb-3",
              },
              "ref": null,
              "rendered": "No",
              "type": "div",
            },
          ],
          "type": "div",
        },
        undefined,
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Collapsible Course Run renders correctly with no fields 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CollapsibleCourseRun
    authentication={Object {}}
    courseId="test-course"
    courseInReview={false}
    courseRun={Object {}}
    courseRunTypeOptions={Object {}}
    courseSubmitInfo={
      Object {
        "isSubmittingRunReview": false,
      }
    }
    courseSubmitting={false}
    courseUuid="11111111-1111-1111-1111-111111111111"
    editable={false}
    isOpen={false}
    isSubmittingForReview={false}
    languageOptions={Array []}
    owners={Array []}
    pacingTypeOptions={Array []}
    runTypeModes={Object {}}
    sourceInfo={Object {}}
    stafferInfo={Object {}}
    targetRun={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="mb-3"
        >
          <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>
        </div>,
        <div>
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            format={[Function]}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />
            }
            maxLength="10"
            name="test-course.go_live_date"
            normalize={[Function]}
            pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
            placeholder="yyyy/mm/dd"
            required={false}
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="Start date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/undefined#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.start"
            timeLabel="Start time (UTC)"
            type="text"
          />
          <Field
            component={[Function]}
            dateLabel="End date"
            disabled={true}
            helpText={
              <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/undefined#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>
            }
            name="test-course.end"
            timeLabel="End time (UTC)"
            type="text"
          />
        </div>,
        <hr />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />
          }
          name="test-course.run_type"
          options={
            Array [
              Object {
                "label": "Select Course enrollment track first",
                "value": "",
              },
            ]
          }
          required={true}
        />,
        <Field
          component={[Function]}
          disabled={true}
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/undefined"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />
          }
          name="test-course.pacing_type"
          options={Array []}
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText={
            <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>
          }
          id="test-course.staff.label"
          optional={false}
          text="Staff"
        />,
        <Field
          component={[Function]}
          courseUuid="11111111-1111-1111-1111-111111111111"
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          name="test-course.staff"
          owners={Array []}
          sourceInfo={Object {}}
          stafferInfo={Object {}}
        />,
        <div
          className="row"
        >
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />
              }
              name="test-course.min_effort"
              required={false}
              type="number"
            />
          </div>
          <div
            className="col-6"
          >
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                }
              }
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />
              }
              name="test-course.max_effort"
              required={false}
              type="number"
            />
          </div>
        </div>,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />
          }
          name="test-course.weeks_to_complete"
          required={false}
          type="number"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />
          }
          name="test-course.content_language"
          options={Array []}
          required={false}
          type="text"
        />,
        <FieldLabel
          className="mb-2"
          extraText=""
          helpText=""
          id={null}
          optional={false}
          text="Transcript languages"
        />,
        <FieldArray
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          languageOptions={Array []}
          name="test-course.transcript_languages"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />
          }
          name="test-course.expected_program_type"
          type="text"
        />,
        <Field
          component={[Function]}
          disabled={true}
          extraInput={
            Object {
              "onInvalid": [Function],
            }
          }
          label={
            <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />
          }
          name="test-course.expected_program_name"
          type="text"
        />,
        undefined,
        <div>
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>
            }
            id="ofac-notice-label"
            optional={false}
            text="Course Embargo (OFAC) Restriction text added to the FAQ section"
          />
          <div
            className="mb-3"
          >
            --
          </div>
        </div>,
        undefined,
        false,
      ],
      "onToggle": undefined,
      "open": false,
      "title": <div
        className="course-run-label"
      >
        <span>
          Course run starting on 
        </span>
        <Pill
          statuses={
            Array [
              undefined,
            ]
          }
        />
        <div
          className="course-run-label"
        >
          <span>
            
          </span>
        </div>
        <div
          className="course-run-studio-url"
        >
          <React.Fragment>
            Studio URL -Â 
            <withDeprecatedProps(Hyperlink)
              destination="undefined/course/undefined"
              target="_blank"
            />
          </React.Fragment>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            aria-hidden={true}
            className="text-info"
          >
             All fields are required for publication unless otherwise specified.
          </span>,
          "className": "mb-3",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-hidden": true,
            "children": " All fields are required for publication unless otherwise specified.",
            "className": "text-info",
          },
          "ref": null,
          "rendered": " All fields are required for publication unless otherwise specified.",
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={false}
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/undefined#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />,
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/undefined#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "disabled": true,
              "extraInput": Object {
                "onInvalid": [Function],
              },
              "format": [Function],
              "label": <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Required Format: yyyy/mm/dd
                    </p>
                    <p>
                      The scheduled date for when the course run will be live and published.
                    </p>
                    <p>
                      To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                    </p>
                    <p>
                      If you donâ€™t have a publish date yet, set to 1 year in the future.
                    </p>
                  </div>
                }
                id="test-course.go_live_date.label"
                optional={false}
                text="Publish date"
              />,
              "maxLength": "10",
              "name": "test-course.go_live_date",
              "normalize": [Function],
              "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
              "placeholder": "yyyy/mm/dd",
              "required": false,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "Start date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/undefined#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.start",
              "timeLabel": "Start time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "dateLabel": "End date",
              "disabled": true,
              "helpText": <div>
                <p>
                  Course run dates are editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/undefined#schedule"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit dates.
                  </a>
                  .
                </p>
              </div>,
              "name": "test-course.end",
              "timeLabel": "End time (UTC)",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText="Cannot edit after submission"
            helpText={
              <div>
                <p>
                  The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                </p>
                <p>
                  <a
                    href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Learn more.
                  </a>
                </p>
              </div>
            }
            id="test-course.run_type.label"
            optional={false}
            text="Course run enrollment track"
          />,
          "name": "test-course.run_type",
          "options": Array [
            Object {
              "label": "Select Course enrollment track first",
              "value": "",
            },
          ],
          "required": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  Course pacing is editable in Studio.
                </p>
                <p>
                  Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                </p>
                <p>
                  <a
                    href="undefined/settings/details/undefined"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Edit course pacing.
                  </a>
                  .
                </p>
              </div>
            }
            id="test-course.pacing_type.label"
            optional={false}
            text="Course pacing"
          />,
          "name": "test-course.pacing_type",
          "options": Array [],
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": <div>
            <p>
              The primary instructor or instructors for the course.
            </p>
            <p>
              The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
            </p>
          </div>,
          "id": "test-course.staff.label",
          "optional": false,
          "text": "Staff",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "courseRunKey": undefined,
          "courseUuid": "11111111-1111-1111-1111-111111111111",
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "name": "test-course.staff",
          "owners": Array [],
          "sourceInfo": Object {},
          "stafferInfo": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />
            </div>,
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />
            </div>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 0,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The minimum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.min_effort.label"
                  optional={false}
                  text="Minimum effort"
                />,
                "name": "test-course.min_effort",
                "required": false,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />,
              "className": "col-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "max": 168,
                  "min": 1,
                  "onInvalid": [Function],
                },
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        The maximum number of hours per week the learner should expect to spend on the course.
                      </p>
                    </div>
                  }
                  id="test-course.max_effort.label"
                  optional={false}
                  text="Maximum effort"
                />,
                "name": "test-course.max_effort",
                "required": false,
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                </p>
              </div>
            }
            id="test-course.weeks_to_complete.label"
            optional={false}
            text="Length"
          />,
          "name": "test-course.weeks_to_complete",
          "required": false,
          "type": "number",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Content language"
          />,
          "name": "test-course.content_language",
          "options": Array [],
          "required": false,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "mb-2",
          "extraText": "",
          "helpText": "",
          "id": null,
          "optional": false,
          "text": "Transcript languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "languageOptions": Array [],
          "name": "test-course.transcript_languages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program type here.
                </p>
              </div>
            }
            id="test-course.expected_program_type.label"
            optional={true}
            text="Expected Program Type"
          />,
          "name": "test-course.expected_program_type",
          "options": undefined,
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "disabled": true,
          "extraInput": Object {
            "onInvalid": [Function],
          },
          "label": <FieldLabel
            className=""
            extraText=""
            helpText={
              <div>
                <p>
                  If this Course Run will potentially be part of a Program, please set the expected program name here.
                </p>
              </div>
            }
            id="test-course.expected_program_name.label"
            optional={true}
            text="Expected Program Name"
          />,
          "name": "test-course.expected_program_name",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />,
            <div
              className="mb-3"
            >
              --
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "mb-2",
              "extraText": "",
              "helpText": <div>
                <p>
                  Course embargo status for OFAC is managed internally, please contact support with questions.
                </p>
              </div>,
              "id": "ofac-notice-label",
              "optional": false,
              "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "--",
              "className": "mb-3",
            },
            "ref": null,
            "rendered": "--",
            "type": "div",
          },
        ],
        "type": "div",
      },
      undefined,
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="mb-3"
          >
            <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>
          </div>,
          <div>
            <Field
              component={[Function]}
              disabled={true}
              extraInput={
                Object {
                  "onInvalid": [Function],
                }
              }
              format={[Function]}
              label={
                <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />
              }
              maxLength="10"
              name="test-course.go_live_date"
              normalize={[Function]}
              pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
              placeholder="yyyy/mm/dd"
              required={false}
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="Start date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/undefined#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.start"
              timeLabel="Start time (UTC)"
              type="text"
            />
            <Field
              component={[Function]}
              dateLabel="End date"
              disabled={true}
              helpText={
                <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/undefined#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>
              }
              name="test-course.end"
              timeLabel="End time (UTC)"
              type="text"
            />
          </div>,
          <hr />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText="Cannot edit after submission"
                helpText={
                  <div>
                    <p>
                      The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                    </p>
                    <p>
                      <a
                        href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn more.
                      </a>
                    </p>
                  </div>
                }
                id="test-course.run_type.label"
                optional={false}
                text="Course run enrollment track"
              />
            }
            name="test-course.run_type"
            options={
              Array [
                Object {
                  "label": "Select Course enrollment track first",
                  "value": "",
                },
              ]
            }
            required={true}
          />,
          <Field
            component={[Function]}
            disabled={true}
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course pacing is editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/undefined"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit course pacing.
                      </a>
                      .
                    </p>
                  </div>
                }
                id="test-course.pacing_type.label"
                optional={false}
                text="Course pacing"
              />
            }
            name="test-course.pacing_type"
            options={Array []}
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText={
              <div>
                <p>
                  The primary instructor or instructors for the course.
                </p>
                <p>
                  The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
                </p>
              </div>
            }
            id="test-course.staff.label"
            optional={false}
            text="Staff"
          />,
          <Field
            component={[Function]}
            courseUuid="11111111-1111-1111-1111-111111111111"
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            name="test-course.staff"
            owners={Array []}
            sourceInfo={Object {}}
            stafferInfo={Object {}}
          />,
          <div
            className="row"
          >
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />
                }
                name="test-course.min_effort"
                required={false}
                type="number"
              />
            </div>
            <div
              className="col-6"
            >
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  }
                }
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />
                }
                name="test-course.max_effort"
                required={false}
                type="number"
              />
            </div>
          </div>,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                    </p>
                  </div>
                }
                id="test-course.weeks_to_complete.label"
                optional={false}
                text="Length"
              />
            }
            name="test-course.weeks_to_complete"
            required={false}
            type="number"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText=""
                id={null}
                optional={false}
                text="Content language"
              />
            }
            name="test-course.content_language"
            options={Array []}
            required={false}
            type="text"
          />,
          <FieldLabel
            className="mb-2"
            extraText=""
            helpText=""
            id={null}
            optional={false}
            text="Transcript languages"
          />,
          <FieldArray
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            languageOptions={Array []}
            name="test-course.transcript_languages"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program type here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_type.label"
                optional={true}
                text="Expected Program Type"
              />
            }
            name="test-course.expected_program_type"
            type="text"
          />,
          <Field
            component={[Function]}
            disabled={true}
            extraInput={
              Object {
                "onInvalid": [Function],
              }
            }
            label={
              <FieldLabel
                className=""
                extraText=""
                helpText={
                  <div>
                    <p>
                      If this Course Run will potentially be part of a Program, please set the expected program name here.
                    </p>
                  </div>
                }
                id="test-course.expected_program_name.label"
                optional={true}
                text="Expected Program Name"
              />
            }
            name="test-course.expected_program_name"
            type="text"
          />,
          undefined,
          <div>
            <FieldLabel
              className="mb-2"
              extraText=""
              helpText={
                <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>
              }
              id="ofac-notice-label"
              optional={false}
              text="Course Embargo (OFAC) Restriction text added to the FAQ section"
            />
            <div
              className="mb-3"
            >
              --
            </div>
          </div>,
          undefined,
          false,
        ],
        "onToggle": undefined,
        "open": false,
        "title": <div
          className="course-run-label"
        >
          <span>
            Course run starting on 
          </span>
          <Pill
            statuses={
              Array [
                undefined,
              ]
            }
          />
          <div
            className="course-run-label"
          >
            <span>
              
            </span>
          </div>
          <div
            className="course-run-studio-url"
          >
            <React.Fragment>
              Studio URL -Â 
              <withDeprecatedProps(Hyperlink)
                destination="undefined/course/undefined"
                target="_blank"
              />
            </React.Fragment>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              aria-hidden={true}
              className="text-info"
            >
               All fields are required for publication unless otherwise specified.
            </span>,
            "className": "mb-3",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-hidden": true,
              "children": " All fields are required for publication unless otherwise specified.",
              "className": "text-info",
            },
            "ref": null,
            "rendered": " All fields are required for publication unless otherwise specified.",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                disabled={true}
                extraInput={
                  Object {
                    "onInvalid": [Function],
                  }
                }
                format={[Function]}
                label={
                  <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          Required Format: yyyy/mm/dd
                        </p>
                        <p>
                          The scheduled date for when the course run will be live and published.
                        </p>
                        <p>
                          To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                        </p>
                        <p>
                          If you donâ€™t have a publish date yet, set to 1 year in the future.
                        </p>
                      </div>
                    }
                    id="test-course.go_live_date.label"
                    optional={false}
                    text="Publish date"
                  />
                }
                maxLength="10"
                name="test-course.go_live_date"
                normalize={[Function]}
                pattern="20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])"
                placeholder="yyyy/mm/dd"
                required={false}
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="Start date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/undefined#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.start"
                timeLabel="Start time (UTC)"
                type="text"
              />,
              <Field
                component={[Function]}
                dateLabel="End date"
                disabled={true}
                helpText={
                  <div>
                    <p>
                      Course run dates are editable in Studio.
                    </p>
                    <p>
                      Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                    </p>
                    <p>
                      <a
                        href="undefined/settings/details/undefined#schedule"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Edit dates.
                      </a>
                      .
                    </p>
                  </div>
                }
                name="test-course.end"
                timeLabel="End time (UTC)"
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "disabled": true,
                "extraInput": Object {
                  "onInvalid": [Function],
                },
                "format": [Function],
                "label": <FieldLabel
                  className=""
                  extraText=""
                  helpText={
                    <div>
                      <p>
                        Required Format: yyyy/mm/dd
                      </p>
                      <p>
                        The scheduled date for when the course run will be live and published.
                      </p>
                      <p>
                        To publish as soon as possible, set the publish date to today. Please note that changes may take 48 hours to go live.
                      </p>
                      <p>
                        If you donâ€™t have a publish date yet, set to 1 year in the future.
                      </p>
                    </div>
                  }
                  id="test-course.go_live_date.label"
                  optional={false}
                  text="Publish date"
                />,
                "maxLength": "10",
                "name": "test-course.go_live_date",
                "normalize": [Function],
                "pattern": "20[1-9][0-9]/(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])",
                "placeholder": "yyyy/mm/dd",
                "required": false,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "Start date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/undefined#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.start",
                "timeLabel": "Start time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "dateLabel": "End date",
                "disabled": true,
                "helpText": <div>
                  <p>
                    Course run dates are editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/undefined#schedule"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit dates.
                    </a>
                    .
                  </p>
                </div>,
                "name": "test-course.end",
                "timeLabel": "End time (UTC)",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText="Cannot edit after submission"
              helpText={
                <div>
                  <p>
                    The enrollment track determines whether a course run offers a paid certificate and what sort of verification is required.
                  </p>
                  <p>
                    <a
                      href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/glossary.html#enrollment-track-g"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn more.
                    </a>
                  </p>
                </div>
              }
              id="test-course.run_type.label"
              optional={false}
              text="Course run enrollment track"
            />,
            "name": "test-course.run_type",
            "options": Array [
              Object {
                "label": "Select Course enrollment track first",
                "value": "",
              },
            ],
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    Course pacing is editable in Studio.
                  </p>
                  <p>
                    Please note that changes in Studio may take up to a business day to be reflected here. For questions, contact your project coordinator.
                  </p>
                  <p>
                    <a
                      href="undefined/settings/details/undefined"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Edit course pacing.
                    </a>
                    .
                  </p>
                </div>
              }
              id="test-course.pacing_type.label"
              optional={false}
              text="Course pacing"
            />,
            "name": "test-course.pacing_type",
            "options": Array [],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": <div>
              <p>
                The primary instructor or instructors for the course.
              </p>
              <p>
                The order that instructors are listed here is the same order they will be displayed on course pages. You can drag and drop to reorder instructors.
              </p>
            </div>,
            "id": "test-course.staff.label",
            "optional": false,
            "text": "Staff",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "courseRunKey": undefined,
            "courseUuid": "11111111-1111-1111-1111-111111111111",
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "name": "test-course.staff",
            "owners": Array [],
            "sourceInfo": Object {},
            "stafferInfo": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={false}
                  type="number"
                />
              </div>,
              <div
                className="col-6"
              >
                <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={false}
                  type="number"
                />
              </div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 0,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The minimum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.min_effort.label"
                      optional={false}
                      text="Minimum effort"
                    />
                  }
                  name="test-course.min_effort"
                  required={false}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 0,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The minimum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.min_effort.label"
                    optional={false}
                    text="Minimum effort"
                  />,
                  "name": "test-course.min_effort",
                  "required": false,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  disabled={true}
                  extraInput={
                    Object {
                      "max": 168,
                      "min": 1,
                      "onInvalid": [Function],
                    }
                  }
                  label={
                    <FieldLabel
                      className=""
                      extraText=""
                      helpText={
                        <div>
                          <p>
                            The maximum number of hours per week the learner should expect to spend on the course.
                          </p>
                        </div>
                      }
                      id="test-course.max_effort.label"
                      optional={false}
                      text="Maximum effort"
                    />
                  }
                  name="test-course.max_effort"
                  required={false}
                  type="number"
                />,
                "className": "col-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "disabled": true,
                  "extraInput": Object {
                    "max": 168,
                    "min": 1,
                    "onInvalid": [Function],
                  },
                  "label": <FieldLabel
                    className=""
                    extraText=""
                    helpText={
                      <div>
                        <p>
                          The maximum number of hours per week the learner should expect to spend on the course.
                        </p>
                      </div>
                    }
                    id="test-course.max_effort.label"
                    optional={false}
                    text="Maximum effort"
                  />,
                  "name": "test-course.max_effort",
                  "required": false,
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    The estimated number of weeks the learner should expect to spend on the course, rounded to the nearest whole number.
                  </p>
                </div>
              }
              id="test-course.weeks_to_complete.label"
              optional={false}
              text="Length"
            />,
            "name": "test-course.weeks_to_complete",
            "required": false,
            "type": "number",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText=""
              id={null}
              optional={false}
              text="Content language"
            />,
            "name": "test-course.content_language",
            "options": Array [],
            "required": false,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "mb-2",
            "extraText": "",
            "helpText": "",
            "id": null,
            "optional": false,
            "text": "Transcript languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "languageOptions": Array [],
            "name": "test-course.transcript_languages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program type here.
                  </p>
                </div>
              }
              id="test-course.expected_program_type.label"
              optional={true}
              text="Expected Program Type"
            />,
            "name": "test-course.expected_program_type",
            "options": undefined,
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "disabled": true,
            "extraInput": Object {
              "onInvalid": [Function],
            },
            "label": <FieldLabel
              className=""
              extraText=""
              helpText={
                <div>
                  <p>
                    If this Course Run will potentially be part of a Program, please set the expected program name here.
                  </p>
                </div>
              }
              id="test-course.expected_program_name.label"
              optional={true}
              text="Expected Program Name"
            />,
            "name": "test-course.expected_program_name",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FieldLabel
                className="mb-2"
                extraText=""
                helpText={
                  <div>
                    <p>
                      Course embargo status for OFAC is managed internally, please contact support with questions.
                    </p>
                  </div>
                }
                id="ofac-notice-label"
                optional={false}
                text="Course Embargo (OFAC) Restriction text added to the FAQ section"
              />,
              <div
                className="mb-3"
              >
                --
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "mb-2",
                "extraText": "",
                "helpText": <div>
                  <p>
                    Course embargo status for OFAC is managed internally, please contact support with questions.
                  </p>
                </div>,
                "id": "ofac-notice-label",
                "optional": false,
                "text": "Course Embargo (OFAC) Restriction text added to the FAQ section",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "--",
                "className": "mb-3",
              },
              "ref": null,
              "rendered": "--",
              "type": "div",
            },
          ],
          "type": "div",
        },
        undefined,
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
