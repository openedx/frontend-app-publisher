// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditCoursePage renders html correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditCoursePage
    courseInfo={
      Object {
        "data": Object {},
      }
    }
    courseOptions={Object {}}
    courseRunOptions={Object {}}
    editCourse={[Function]}
    fetchCourseInfo={[Function]}
    fetchCourseOptions={[Function]}
    fetchCourseRunOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Course - undefined
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={Object {}}
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Course - undefined
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Course - undefined",
          },
          "ref": null,
          "rendered": "Course - undefined",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={Object {}}
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={Object {}}
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                undefined,
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>,
                "",
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />,
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "courseOptions": Object {},
                      "courseRunOptions": Object {},
                      "courseRuns": undefined,
                      "entitlement": false,
                      "id": "edit-course-form-undefined",
                      "initialValues": Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      },
                      "number": undefined,
                      "onSubmit": [Function],
                      "title": undefined,
                      "uuid": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
              "",
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Course - undefined
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Course - undefined
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Course - undefined",
            },
            "ref": null,
            "rendered": "Course - undefined",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  undefined,
                  <div>
                    <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={Object {}}
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />
                    </div>
                  </div>,
                  "",
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={Object {}}
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />
                    </div>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Connect(ReduxForm)
                        courseOptions={Object {}}
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />,
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "courseOptions": Object {},
                        "courseRunOptions": Object {},
                        "courseRuns": undefined,
                        "entitlement": false,
                        "id": "edit-course-form-undefined",
                        "initialValues": Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        },
                        "number": undefined,
                        "onSubmit": [Function],
                        "title": undefined,
                        "uuid": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
                "",
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`EditCoursePage renders page correctly while fetching 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditCoursePage
    courseInfo={
      Object {
        "data": Object {},
        "error": null,
        "isFetching": true,
      }
    }
    courseOptions={
      Object {
        "data": Object {},
        "error": null,
        "isFetching": true,
      }
    }
    courseRunOptions={Object {}}
    editCourse={[Function]}
    fetchCourseInfo={[Function]}
    fetchCourseOptions={[Function]}
    fetchCourseRunOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Course - undefined
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <LoadingSpinner
                message="Loading…"
              />
              
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Course - undefined
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Course - undefined",
          },
          "ref": null,
          "rendered": "Course - undefined",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <LoadingSpinner
                message="Loading…"
              />
              
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <LoadingSpinner
                message="Loading…"
              />
              
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <LoadingSpinner
                  message="Loading…"
                />,
                false,
                "",
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "message": "Loading…",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              false,
              "",
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Course - undefined
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <LoadingSpinner
                  message="Loading…"
                />
                
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Course - undefined
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Course - undefined",
            },
            "ref": null,
            "rendered": "Course - undefined",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <LoadingSpinner
                  message="Loading…"
                />
                
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <LoadingSpinner
                  message="Loading…"
                />
                
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <LoadingSpinner
                    message="Loading…"
                  />,
                  false,
                  "",
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "message": "Loading…",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                false,
                "",
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`EditCoursePage renders page correctly with courseInfo 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditCoursePage
    courseInfo={
      Object {
        "data": Object {
          "additional_information": "",
          "entitlements": Array [
            Object {
              "currency": "USD",
              "expires": null,
              "mode": "verified",
              "price": "77.00",
              "sku": "000000D",
            },
          ],
          "faq": "",
          "full_description": "<p>long desc</p>",
          "image": Object {
            "description": null,
            "height": null,
            "src": "http://path/to/image/woo.small",
            "width": null,
          },
          "key": "edX+Test101x",
          "learner_testimonials": null,
          "level_type": "intermediate",
          "outcome": "<p>learn</p>",
          "prerequisites_raw": "<p>prereq</p>",
          "short_description": "<p>short&nbsp;</p>",
          "subjects": Array [
            Object {
              "banner_image_url": null,
              "card_image_url": null,
              "description": "",
              "name": "Security",
              "slug": "security",
              "subtitle": null,
              "uuid": "00000000-0000-0000-0000-000000000001",
            },
            Object {
              "banner_image_url": null,
              "card_image_url": null,
              "description": "",
              "name": "Chemistry",
              "slug": "chemistry",
              "subtitle": null,
              "uuid": "00000000-0000-0000-0000-000000000002",
            },
          ],
          "syllabus_raw": "",
          "title": "Test title",
          "uuid": "00000000-0000-0000-0000-000000000000",
          "video": Object {
            "description": null,
            "image": null,
            "src": "https://www.video.information/watch?v=cVsQLlk-T0s",
          },
        },
        "error": null,
        "isFetching": false,
      }
    }
    courseOptions={Object {}}
    courseRunOptions={Object {}}
    editCourse={[Function]}
    fetchCourseInfo={[Function]}
    fetchCourseOptions={[Function]}
    fetchCourseRunOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Course - Test title
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={Object {}}
                    courseRunOptions={Object {}}
                    entitlement={true}
                    id="edit-course-form-00000000-0000-0000-0000-000000000000"
                    initialValues={
                      Object {
                        "additional_information": "",
                        "course_runs": undefined,
                        "faq": "",
                        "full_description": "<p>long desc</p>",
                        "imageSrc": "http://path/to/image/woo.small",
                        "learner_testimonials": null,
                        "level_type": "intermediate",
                        "mode": "verified",
                        "outcome": "<p>learn</p>",
                        "prerequisites_raw": "<p>prereq</p>",
                        "price": "77.00",
                        "short_description": "<p>short&nbsp;</p>",
                        "subjectPrimary": "security",
                        "subjectSecondary": "chemistry",
                        "subjectTertiary": undefined,
                        "syllabus_raw": "",
                        "title": "Test title",
                        "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                      }
                    }
                    number="Test101x"
                    onSubmit={[Function]}
                    title="Test title"
                    uuid="00000000-0000-0000-0000-000000000000"
                  />
                </div>
              </div>
              
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Course - Test title
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Course - Test title",
          },
          "ref": null,
          "rendered": "Course - Test title",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={Object {}}
                    courseRunOptions={Object {}}
                    entitlement={true}
                    id="edit-course-form-00000000-0000-0000-0000-000000000000"
                    initialValues={
                      Object {
                        "additional_information": "",
                        "course_runs": undefined,
                        "faq": "",
                        "full_description": "<p>long desc</p>",
                        "imageSrc": "http://path/to/image/woo.small",
                        "learner_testimonials": null,
                        "level_type": "intermediate",
                        "mode": "verified",
                        "outcome": "<p>learn</p>",
                        "prerequisites_raw": "<p>prereq</p>",
                        "price": "77.00",
                        "short_description": "<p>short&nbsp;</p>",
                        "subjectPrimary": "security",
                        "subjectSecondary": "chemistry",
                        "subjectTertiary": undefined,
                        "syllabus_raw": "",
                        "title": "Test title",
                        "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                      }
                    }
                    number="Test101x"
                    onSubmit={[Function]}
                    title="Test title"
                    uuid="00000000-0000-0000-0000-000000000000"
                  />
                </div>
              </div>
              
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={Object {}}
                    courseRunOptions={Object {}}
                    entitlement={true}
                    id="edit-course-form-00000000-0000-0000-0000-000000000000"
                    initialValues={
                      Object {
                        "additional_information": "",
                        "course_runs": undefined,
                        "faq": "",
                        "full_description": "<p>long desc</p>",
                        "imageSrc": "http://path/to/image/woo.small",
                        "learner_testimonials": null,
                        "level_type": "intermediate",
                        "mode": "verified",
                        "outcome": "<p>learn</p>",
                        "prerequisites_raw": "<p>prereq</p>",
                        "price": "77.00",
                        "short_description": "<p>short&nbsp;</p>",
                        "subjectPrimary": "security",
                        "subjectSecondary": "chemistry",
                        "subjectTertiary": undefined,
                        "syllabus_raw": "",
                        "title": "Test title",
                        "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                      }
                    }
                    number="Test101x"
                    onSubmit={[Function]}
                    title="Test title"
                    uuid="00000000-0000-0000-0000-000000000000"
                  />
                </div>
              </div>
              
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                undefined,
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />
                  </div>
                </div>,
                "",
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />
                  </div>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />,
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "courseOptions": Object {},
                      "courseRunOptions": Object {},
                      "courseRuns": undefined,
                      "entitlement": true,
                      "id": "edit-course-form-00000000-0000-0000-0000-000000000000",
                      "initialValues": Object {
                        "additional_information": "",
                        "course_runs": undefined,
                        "faq": "",
                        "full_description": "<p>long desc</p>",
                        "imageSrc": "http://path/to/image/woo.small",
                        "learner_testimonials": null,
                        "level_type": "intermediate",
                        "mode": "verified",
                        "outcome": "<p>learn</p>",
                        "prerequisites_raw": "<p>prereq</p>",
                        "price": "77.00",
                        "short_description": "<p>short&nbsp;</p>",
                        "subjectPrimary": "security",
                        "subjectSecondary": "chemistry",
                        "subjectTertiary": undefined,
                        "syllabus_raw": "",
                        "title": "Test title",
                        "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                      },
                      "number": "Test101x",
                      "onSubmit": [Function],
                      "title": "Test title",
                      "uuid": "00000000-0000-0000-0000-000000000000",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
              "",
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Course - Test title
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />
                  </div>
                </div>
                
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Course - Test title
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Course - Test title",
            },
            "ref": null,
            "rendered": "Course - Test title",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />
                  </div>
                </div>
                
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />
                  </div>
                </div>
                
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  undefined,
                  <div>
                    <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={Object {}}
                        courseRunOptions={Object {}}
                        entitlement={true}
                        id="edit-course-form-00000000-0000-0000-0000-000000000000"
                        initialValues={
                          Object {
                            "additional_information": "",
                            "course_runs": undefined,
                            "faq": "",
                            "full_description": "<p>long desc</p>",
                            "imageSrc": "http://path/to/image/woo.small",
                            "learner_testimonials": null,
                            "level_type": "intermediate",
                            "mode": "verified",
                            "outcome": "<p>learn</p>",
                            "prerequisites_raw": "<p>prereq</p>",
                            "price": "77.00",
                            "short_description": "<p>short&nbsp;</p>",
                            "subjectPrimary": "security",
                            "subjectSecondary": "chemistry",
                            "subjectTertiary": undefined,
                            "syllabus_raw": "",
                            "title": "Test title",
                            "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                          }
                        }
                        number="Test101x"
                        onSubmit={[Function]}
                        title="Test title"
                        uuid="00000000-0000-0000-0000-000000000000"
                      />
                    </div>
                  </div>,
                  "",
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={Object {}}
                        courseRunOptions={Object {}}
                        entitlement={true}
                        id="edit-course-form-00000000-0000-0000-0000-000000000000"
                        initialValues={
                          Object {
                            "additional_information": "",
                            "course_runs": undefined,
                            "faq": "",
                            "full_description": "<p>long desc</p>",
                            "imageSrc": "http://path/to/image/woo.small",
                            "learner_testimonials": null,
                            "level_type": "intermediate",
                            "mode": "verified",
                            "outcome": "<p>learn</p>",
                            "prerequisites_raw": "<p>prereq</p>",
                            "price": "77.00",
                            "short_description": "<p>short&nbsp;</p>",
                            "subjectPrimary": "security",
                            "subjectSecondary": "chemistry",
                            "subjectTertiary": undefined,
                            "syllabus_raw": "",
                            "title": "Test title",
                            "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                          }
                        }
                        number="Test101x"
                        onSubmit={[Function]}
                        title="Test title"
                        uuid="00000000-0000-0000-0000-000000000000"
                      />
                    </div>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Connect(ReduxForm)
                        courseOptions={Object {}}
                        courseRunOptions={Object {}}
                        entitlement={true}
                        id="edit-course-form-00000000-0000-0000-0000-000000000000"
                        initialValues={
                          Object {
                            "additional_information": "",
                            "course_runs": undefined,
                            "faq": "",
                            "full_description": "<p>long desc</p>",
                            "imageSrc": "http://path/to/image/woo.small",
                            "learner_testimonials": null,
                            "level_type": "intermediate",
                            "mode": "verified",
                            "outcome": "<p>learn</p>",
                            "prerequisites_raw": "<p>prereq</p>",
                            "price": "77.00",
                            "short_description": "<p>short&nbsp;</p>",
                            "subjectPrimary": "security",
                            "subjectSecondary": "chemistry",
                            "subjectTertiary": undefined,
                            "syllabus_raw": "",
                            "title": "Test title",
                            "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                          }
                        }
                        number="Test101x"
                        onSubmit={[Function]}
                        title="Test title"
                        uuid="00000000-0000-0000-0000-000000000000"
                      />,
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "courseOptions": Object {},
                        "courseRunOptions": Object {},
                        "courseRuns": undefined,
                        "entitlement": true,
                        "id": "edit-course-form-00000000-0000-0000-0000-000000000000",
                        "initialValues": Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        },
                        "number": "Test101x",
                        "onSubmit": [Function],
                        "title": "Test title",
                        "uuid": "00000000-0000-0000-0000-000000000000",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
                "",
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`EditCoursePage renders page correctly with courseInfo and courseOptions 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditCoursePage
    courseInfo={
      Object {
        "data": Object {
          "additional_information": "",
          "entitlements": Array [
            Object {
              "currency": "USD",
              "expires": null,
              "mode": "verified",
              "price": "77.00",
              "sku": "000000D",
            },
          ],
          "faq": "",
          "full_description": "<p>long desc</p>",
          "image": Object {
            "description": null,
            "height": null,
            "src": "http://path/to/image/woo.small",
            "width": null,
          },
          "key": "edX+Test101x",
          "learner_testimonials": null,
          "level_type": "intermediate",
          "outcome": "<p>learn</p>",
          "prerequisites_raw": "<p>prereq</p>",
          "short_description": "<p>short&nbsp;</p>",
          "subjects": Array [
            Object {
              "banner_image_url": null,
              "card_image_url": null,
              "description": "",
              "name": "Security",
              "slug": "security",
              "subtitle": null,
              "uuid": "00000000-0000-0000-0000-000000000001",
            },
            Object {
              "banner_image_url": null,
              "card_image_url": null,
              "description": "",
              "name": "Chemistry",
              "slug": "chemistry",
              "subtitle": null,
              "uuid": "00000000-0000-0000-0000-000000000002",
            },
          ],
          "syllabus_raw": "",
          "title": "Test title",
          "uuid": "00000000-0000-0000-0000-000000000000",
          "video": Object {
            "description": null,
            "image": null,
            "src": "https://www.video.information/watch?v=cVsQLlk-T0s",
          },
        },
        "error": null,
        "isFetching": false,
      }
    }
    courseOptions={
      Object {
        "data": Object {
          "actions": Object {
            "PUT": Object {
              "level_type": Object {
                "choices": Array [
                  Object {
                    "display_name": "Beginner",
                    "value": "beginner",
                  },
                  Object {
                    "display_name": "Intermediate",
                    "value": "intermediate",
                  },
                  Object {
                    "display_name": "Advanced",
                    "value": "advanced",
                  },
                ],
              },
              "subjects": Object {
                "child": Object {
                  "choices": Array [
                    Object {
                      "display_name": "Business",
                      "value": "business",
                    },
                    Object {
                      "display_name": "Chemistry",
                      "value": "chemistry",
                    },
                    Object {
                      "display_name": "English",
                      "value": "english",
                    },
                    Object {
                      "display_name": "Security",
                      "value": "security",
                    },
                  ],
                },
              },
            },
          },
        },
        "error": null,
        "isFetching": false,
      }
    }
    courseRunOptions={Object {}}
    editCourse={[Function]}
    fetchCourseInfo={[Function]}
    fetchCourseOptions={[Function]}
    fetchCourseRunOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Course - Test title
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {
                          "actions": Object {
                            "PUT": Object {
                              "level_type": Object {
                                "choices": Array [
                                  Object {
                                    "display_name": "Beginner",
                                    "value": "beginner",
                                  },
                                  Object {
                                    "display_name": "Intermediate",
                                    "value": "intermediate",
                                  },
                                  Object {
                                    "display_name": "Advanced",
                                    "value": "advanced",
                                  },
                                ],
                              },
                              "subjects": Object {
                                "child": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Business",
                                      "value": "business",
                                    },
                                    Object {
                                      "display_name": "Chemistry",
                                      "value": "chemistry",
                                    },
                                    Object {
                                      "display_name": "English",
                                      "value": "english",
                                    },
                                    Object {
                                      "display_name": "Security",
                                      "value": "security",
                                    },
                                  ],
                                },
                              },
                            },
                          },
                        },
                        "error": null,
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={true}
                    id="edit-course-form-00000000-0000-0000-0000-000000000000"
                    initialValues={
                      Object {
                        "additional_information": "",
                        "course_runs": undefined,
                        "faq": "",
                        "full_description": "<p>long desc</p>",
                        "imageSrc": "http://path/to/image/woo.small",
                        "learner_testimonials": null,
                        "level_type": "intermediate",
                        "mode": "verified",
                        "outcome": "<p>learn</p>",
                        "prerequisites_raw": "<p>prereq</p>",
                        "price": "77.00",
                        "short_description": "<p>short&nbsp;</p>",
                        "subjectPrimary": "security",
                        "subjectSecondary": "chemistry",
                        "subjectTertiary": undefined,
                        "syllabus_raw": "",
                        "title": "Test title",
                        "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                      }
                    }
                    number="Test101x"
                    onSubmit={[Function]}
                    title="Test title"
                    uuid="00000000-0000-0000-0000-000000000000"
                  />
                </div>
              </div>
              
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Course - Test title
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Course - Test title",
          },
          "ref": null,
          "rendered": "Course - Test title",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {
                          "actions": Object {
                            "PUT": Object {
                              "level_type": Object {
                                "choices": Array [
                                  Object {
                                    "display_name": "Beginner",
                                    "value": "beginner",
                                  },
                                  Object {
                                    "display_name": "Intermediate",
                                    "value": "intermediate",
                                  },
                                  Object {
                                    "display_name": "Advanced",
                                    "value": "advanced",
                                  },
                                ],
                              },
                              "subjects": Object {
                                "child": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Business",
                                      "value": "business",
                                    },
                                    Object {
                                      "display_name": "Chemistry",
                                      "value": "chemistry",
                                    },
                                    Object {
                                      "display_name": "English",
                                      "value": "english",
                                    },
                                    Object {
                                      "display_name": "Security",
                                      "value": "security",
                                    },
                                  ],
                                },
                              },
                            },
                          },
                        },
                        "error": null,
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={true}
                    id="edit-course-form-00000000-0000-0000-0000-000000000000"
                    initialValues={
                      Object {
                        "additional_information": "",
                        "course_runs": undefined,
                        "faq": "",
                        "full_description": "<p>long desc</p>",
                        "imageSrc": "http://path/to/image/woo.small",
                        "learner_testimonials": null,
                        "level_type": "intermediate",
                        "mode": "verified",
                        "outcome": "<p>learn</p>",
                        "prerequisites_raw": "<p>prereq</p>",
                        "price": "77.00",
                        "short_description": "<p>short&nbsp;</p>",
                        "subjectPrimary": "security",
                        "subjectSecondary": "chemistry",
                        "subjectTertiary": undefined,
                        "syllabus_raw": "",
                        "title": "Test title",
                        "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                      }
                    }
                    number="Test101x"
                    onSubmit={[Function]}
                    title="Test title"
                    uuid="00000000-0000-0000-0000-000000000000"
                  />
                </div>
              </div>
              
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {
                          "actions": Object {
                            "PUT": Object {
                              "level_type": Object {
                                "choices": Array [
                                  Object {
                                    "display_name": "Beginner",
                                    "value": "beginner",
                                  },
                                  Object {
                                    "display_name": "Intermediate",
                                    "value": "intermediate",
                                  },
                                  Object {
                                    "display_name": "Advanced",
                                    "value": "advanced",
                                  },
                                ],
                              },
                              "subjects": Object {
                                "child": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Business",
                                      "value": "business",
                                    },
                                    Object {
                                      "display_name": "Chemistry",
                                      "value": "chemistry",
                                    },
                                    Object {
                                      "display_name": "English",
                                      "value": "english",
                                    },
                                    Object {
                                      "display_name": "Security",
                                      "value": "security",
                                    },
                                  ],
                                },
                              },
                            },
                          },
                        },
                        "error": null,
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={true}
                    id="edit-course-form-00000000-0000-0000-0000-000000000000"
                    initialValues={
                      Object {
                        "additional_information": "",
                        "course_runs": undefined,
                        "faq": "",
                        "full_description": "<p>long desc</p>",
                        "imageSrc": "http://path/to/image/woo.small",
                        "learner_testimonials": null,
                        "level_type": "intermediate",
                        "mode": "verified",
                        "outcome": "<p>learn</p>",
                        "prerequisites_raw": "<p>prereq</p>",
                        "price": "77.00",
                        "short_description": "<p>short&nbsp;</p>",
                        "subjectPrimary": "security",
                        "subjectSecondary": "chemistry",
                        "subjectTertiary": undefined,
                        "syllabus_raw": "",
                        "title": "Test title",
                        "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                      }
                    }
                    number="Test101x"
                    onSubmit={[Function]}
                    title="Test title"
                    uuid="00000000-0000-0000-0000-000000000000"
                  />
                </div>
              </div>
              
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />
                  </div>
                </div>,
                "",
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />
                  </div>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />,
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "courseOptions": Object {
                        "data": Object {
                          "actions": Object {
                            "PUT": Object {
                              "level_type": Object {
                                "choices": Array [
                                  Object {
                                    "display_name": "Beginner",
                                    "value": "beginner",
                                  },
                                  Object {
                                    "display_name": "Intermediate",
                                    "value": "intermediate",
                                  },
                                  Object {
                                    "display_name": "Advanced",
                                    "value": "advanced",
                                  },
                                ],
                              },
                              "subjects": Object {
                                "child": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Business",
                                      "value": "business",
                                    },
                                    Object {
                                      "display_name": "Chemistry",
                                      "value": "chemistry",
                                    },
                                    Object {
                                      "display_name": "English",
                                      "value": "english",
                                    },
                                    Object {
                                      "display_name": "Security",
                                      "value": "security",
                                    },
                                  ],
                                },
                              },
                            },
                          },
                        },
                        "error": null,
                        "isFetching": false,
                      },
                      "courseRunOptions": Object {},
                      "courseRuns": undefined,
                      "entitlement": true,
                      "id": "edit-course-form-00000000-0000-0000-0000-000000000000",
                      "initialValues": Object {
                        "additional_information": "",
                        "course_runs": undefined,
                        "faq": "",
                        "full_description": "<p>long desc</p>",
                        "imageSrc": "http://path/to/image/woo.small",
                        "learner_testimonials": null,
                        "level_type": "intermediate",
                        "mode": "verified",
                        "outcome": "<p>learn</p>",
                        "prerequisites_raw": "<p>prereq</p>",
                        "price": "77.00",
                        "short_description": "<p>short&nbsp;</p>",
                        "subjectPrimary": "security",
                        "subjectSecondary": "chemistry",
                        "subjectTertiary": undefined,
                        "syllabus_raw": "",
                        "title": "Test title",
                        "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                      },
                      "number": "Test101x",
                      "onSubmit": [Function],
                      "title": "Test title",
                      "uuid": "00000000-0000-0000-0000-000000000000",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
              "",
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Course - Test title
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />
                  </div>
                </div>
                
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Course - Test title
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Course - Test title",
            },
            "ref": null,
            "rendered": "Course - Test title",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />
                  </div>
                </div>
                
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={true}
                      id="edit-course-form-00000000-0000-0000-0000-000000000000"
                      initialValues={
                        Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        }
                      }
                      number="Test101x"
                      onSubmit={[Function]}
                      title="Test title"
                      uuid="00000000-0000-0000-0000-000000000000"
                    />
                  </div>
                </div>
                
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  <div>
                    <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {
                              "actions": Object {
                                "PUT": Object {
                                  "level_type": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Beginner",
                                        "value": "beginner",
                                      },
                                      Object {
                                        "display_name": "Intermediate",
                                        "value": "intermediate",
                                      },
                                      Object {
                                        "display_name": "Advanced",
                                        "value": "advanced",
                                      },
                                    ],
                                  },
                                  "subjects": Object {
                                    "child": Object {
                                      "choices": Array [
                                        Object {
                                          "display_name": "Business",
                                          "value": "business",
                                        },
                                        Object {
                                          "display_name": "Chemistry",
                                          "value": "chemistry",
                                        },
                                        Object {
                                          "display_name": "English",
                                          "value": "english",
                                        },
                                        Object {
                                          "display_name": "Security",
                                          "value": "security",
                                        },
                                      ],
                                    },
                                  },
                                },
                              },
                            },
                            "error": null,
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={true}
                        id="edit-course-form-00000000-0000-0000-0000-000000000000"
                        initialValues={
                          Object {
                            "additional_information": "",
                            "course_runs": undefined,
                            "faq": "",
                            "full_description": "<p>long desc</p>",
                            "imageSrc": "http://path/to/image/woo.small",
                            "learner_testimonials": null,
                            "level_type": "intermediate",
                            "mode": "verified",
                            "outcome": "<p>learn</p>",
                            "prerequisites_raw": "<p>prereq</p>",
                            "price": "77.00",
                            "short_description": "<p>short&nbsp;</p>",
                            "subjectPrimary": "security",
                            "subjectSecondary": "chemistry",
                            "subjectTertiary": undefined,
                            "syllabus_raw": "",
                            "title": "Test title",
                            "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                          }
                        }
                        number="Test101x"
                        onSubmit={[Function]}
                        title="Test title"
                        uuid="00000000-0000-0000-0000-000000000000"
                      />
                    </div>
                  </div>,
                  "",
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {
                              "actions": Object {
                                "PUT": Object {
                                  "level_type": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Beginner",
                                        "value": "beginner",
                                      },
                                      Object {
                                        "display_name": "Intermediate",
                                        "value": "intermediate",
                                      },
                                      Object {
                                        "display_name": "Advanced",
                                        "value": "advanced",
                                      },
                                    ],
                                  },
                                  "subjects": Object {
                                    "child": Object {
                                      "choices": Array [
                                        Object {
                                          "display_name": "Business",
                                          "value": "business",
                                        },
                                        Object {
                                          "display_name": "Chemistry",
                                          "value": "chemistry",
                                        },
                                        Object {
                                          "display_name": "English",
                                          "value": "english",
                                        },
                                        Object {
                                          "display_name": "Security",
                                          "value": "security",
                                        },
                                      ],
                                    },
                                  },
                                },
                              },
                            },
                            "error": null,
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={true}
                        id="edit-course-form-00000000-0000-0000-0000-000000000000"
                        initialValues={
                          Object {
                            "additional_information": "",
                            "course_runs": undefined,
                            "faq": "",
                            "full_description": "<p>long desc</p>",
                            "imageSrc": "http://path/to/image/woo.small",
                            "learner_testimonials": null,
                            "level_type": "intermediate",
                            "mode": "verified",
                            "outcome": "<p>learn</p>",
                            "prerequisites_raw": "<p>prereq</p>",
                            "price": "77.00",
                            "short_description": "<p>short&nbsp;</p>",
                            "subjectPrimary": "security",
                            "subjectSecondary": "chemistry",
                            "subjectTertiary": undefined,
                            "syllabus_raw": "",
                            "title": "Test title",
                            "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                          }
                        }
                        number="Test101x"
                        onSubmit={[Function]}
                        title="Test title"
                        uuid="00000000-0000-0000-0000-000000000000"
                      />
                    </div>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {
                              "actions": Object {
                                "PUT": Object {
                                  "level_type": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Beginner",
                                        "value": "beginner",
                                      },
                                      Object {
                                        "display_name": "Intermediate",
                                        "value": "intermediate",
                                      },
                                      Object {
                                        "display_name": "Advanced",
                                        "value": "advanced",
                                      },
                                    ],
                                  },
                                  "subjects": Object {
                                    "child": Object {
                                      "choices": Array [
                                        Object {
                                          "display_name": "Business",
                                          "value": "business",
                                        },
                                        Object {
                                          "display_name": "Chemistry",
                                          "value": "chemistry",
                                        },
                                        Object {
                                          "display_name": "English",
                                          "value": "english",
                                        },
                                        Object {
                                          "display_name": "Security",
                                          "value": "security",
                                        },
                                      ],
                                    },
                                  },
                                },
                              },
                            },
                            "error": null,
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={true}
                        id="edit-course-form-00000000-0000-0000-0000-000000000000"
                        initialValues={
                          Object {
                            "additional_information": "",
                            "course_runs": undefined,
                            "faq": "",
                            "full_description": "<p>long desc</p>",
                            "imageSrc": "http://path/to/image/woo.small",
                            "learner_testimonials": null,
                            "level_type": "intermediate",
                            "mode": "verified",
                            "outcome": "<p>learn</p>",
                            "prerequisites_raw": "<p>prereq</p>",
                            "price": "77.00",
                            "short_description": "<p>short&nbsp;</p>",
                            "subjectPrimary": "security",
                            "subjectSecondary": "chemistry",
                            "subjectTertiary": undefined,
                            "syllabus_raw": "",
                            "title": "Test title",
                            "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                          }
                        }
                        number="Test101x"
                        onSubmit={[Function]}
                        title="Test title"
                        uuid="00000000-0000-0000-0000-000000000000"
                      />,
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "courseOptions": Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        },
                        "courseRunOptions": Object {},
                        "courseRuns": undefined,
                        "entitlement": true,
                        "id": "edit-course-form-00000000-0000-0000-0000-000000000000",
                        "initialValues": Object {
                          "additional_information": "",
                          "course_runs": undefined,
                          "faq": "",
                          "full_description": "<p>long desc</p>",
                          "imageSrc": "http://path/to/image/woo.small",
                          "learner_testimonials": null,
                          "level_type": "intermediate",
                          "mode": "verified",
                          "outcome": "<p>learn</p>",
                          "prerequisites_raw": "<p>prereq</p>",
                          "price": "77.00",
                          "short_description": "<p>short&nbsp;</p>",
                          "subjectPrimary": "security",
                          "subjectSecondary": "chemistry",
                          "subjectTertiary": undefined,
                          "syllabus_raw": "",
                          "title": "Test title",
                          "videoSrc": "https://www.video.information/watch?v=cVsQLlk-T0s",
                        },
                        "number": "Test101x",
                        "onSubmit": [Function],
                        "title": "Test title",
                        "uuid": "00000000-0000-0000-0000-000000000000",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
                "",
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`EditCoursePage renders page correctly with courseInfo error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditCoursePage
    courseInfo={
      Object {
        "data": Object {},
        "error": "Course Info error",
        "isFetching": false,
      }
    }
    courseOptions={Object {}}
    courseRunOptions={Object {}}
    editCourse={[Function]}
    fetchCourseInfo={[Function]}
    fetchCourseOptions={[Function]}
    fetchCourseRunOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Course - undefined
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={Object {}}
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="error"
                message="Course Info error"
                onClose={[Function]}
                title="Course Edit Form failed to load: "
              />
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Course - undefined
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Course - undefined",
          },
          "ref": null,
          "rendered": "Course - undefined",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={Object {}}
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="error"
                message="Course Info error"
                onClose={[Function]}
                title="Course Edit Form failed to load: "
              />
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={Object {}}
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="error"
                message="Course Info error"
                onClose={[Function]}
                title="Course Edit Form failed to load: "
              />
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                undefined,
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>,
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Info error"
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />,
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "courseOptions": Object {},
                      "courseRunOptions": Object {},
                      "courseRuns": undefined,
                      "entitlement": false,
                      "id": "edit-course-form-undefined",
                      "initialValues": Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      },
                      "number": undefined,
                      "onSubmit": [Function],
                      "title": undefined,
                      "uuid": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "alertType": "danger",
                  "className": Array [],
                  "dismissible": false,
                  "iconClassNames": Array [],
                  "id": "error",
                  "message": "Course Info error",
                  "onClose": [Function],
                  "title": "Course Edit Form failed to load: ",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Course - undefined
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Info error"
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Course - undefined
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Course - undefined",
            },
            "ref": null,
            "rendered": "Course - undefined",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Info error"
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={Object {}}
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Info error"
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  undefined,
                  <div>
                    <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={Object {}}
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />
                    </div>
                  </div>,
                  <StatusAlert
                    alertType="danger"
                    className={Array []}
                    dismissible={false}
                    iconClassNames={Array []}
                    id="error"
                    message="Course Info error"
                    onClose={[Function]}
                    title="Course Edit Form failed to load: "
                  />,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={Object {}}
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />
                    </div>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Connect(ReduxForm)
                        courseOptions={Object {}}
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />,
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "courseOptions": Object {},
                        "courseRunOptions": Object {},
                        "courseRuns": undefined,
                        "entitlement": false,
                        "id": "edit-course-form-undefined",
                        "initialValues": Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        },
                        "number": undefined,
                        "onSubmit": [Function],
                        "title": undefined,
                        "uuid": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "alertType": "danger",
                    "className": Array [],
                    "dismissible": false,
                    "iconClassNames": Array [],
                    "id": "error",
                    "message": "Course Info error",
                    "onClose": [Function],
                    "title": "Course Edit Form failed to load: ",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`EditCoursePage renders page correctly with courseInfo error and courseOptions error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditCoursePage
    courseInfo={
      Object {
        "data": Object {},
        "error": "Course Info error.",
        "isFetching": false,
      }
    }
    courseOptions={
      Object {
        "data": Object {},
        "error": "Course Options error.",
        "isFetching": false,
      }
    }
    courseRunOptions={Object {}}
    editCourse={[Function]}
    fetchCourseInfo={[Function]}
    fetchCourseOptions={[Function]}
    fetchCourseRunOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Course - undefined
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {},
                        "error": "Course Options error.",
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="error"
                message="Course Info error. Course Options error."
                onClose={[Function]}
                title="Course Edit Form failed to load: "
              />
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Course - undefined
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Course - undefined",
          },
          "ref": null,
          "rendered": "Course - undefined",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {},
                        "error": "Course Options error.",
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="error"
                message="Course Info error. Course Options error."
                onClose={[Function]}
                title="Course Edit Form failed to load: "
              />
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {},
                        "error": "Course Options error.",
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="error"
                message="Course Info error. Course Options error."
                onClose={[Function]}
                title="Course Edit Form failed to load: "
              />
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error.",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>,
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Info error. Course Options error."
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error.",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error.",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />,
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "courseOptions": Object {
                        "data": Object {},
                        "error": "Course Options error.",
                        "isFetching": false,
                      },
                      "courseRunOptions": Object {},
                      "courseRuns": undefined,
                      "entitlement": false,
                      "id": "edit-course-form-undefined",
                      "initialValues": Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      },
                      "number": undefined,
                      "onSubmit": [Function],
                      "title": undefined,
                      "uuid": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "alertType": "danger",
                  "className": Array [],
                  "dismissible": false,
                  "iconClassNames": Array [],
                  "id": "error",
                  "message": "Course Info error. Course Options error.",
                  "onClose": [Function],
                  "title": "Course Edit Form failed to load: ",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Course - undefined
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error.",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Info error. Course Options error."
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Course - undefined
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Course - undefined",
            },
            "ref": null,
            "rendered": "Course - undefined",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error.",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Info error. Course Options error."
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error.",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Info error. Course Options error."
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  <div>
                    <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {},
                            "error": "Course Options error.",
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />
                    </div>
                  </div>,
                  <StatusAlert
                    alertType="danger"
                    className={Array []}
                    dismissible={false}
                    iconClassNames={Array []}
                    id="error"
                    message="Course Info error. Course Options error."
                    onClose={[Function]}
                    title="Course Edit Form failed to load: "
                  />,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {},
                            "error": "Course Options error.",
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />
                    </div>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {},
                            "error": "Course Options error.",
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />,
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "courseOptions": Object {
                          "data": Object {},
                          "error": "Course Options error.",
                          "isFetching": false,
                        },
                        "courseRunOptions": Object {},
                        "courseRuns": undefined,
                        "entitlement": false,
                        "id": "edit-course-form-undefined",
                        "initialValues": Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        },
                        "number": undefined,
                        "onSubmit": [Function],
                        "title": undefined,
                        "uuid": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "alertType": "danger",
                    "className": Array [],
                    "dismissible": false,
                    "iconClassNames": Array [],
                    "id": "error",
                    "message": "Course Info error. Course Options error.",
                    "onClose": [Function],
                    "title": "Course Edit Form failed to load: ",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`EditCoursePage renders page correctly with courseOptions 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditCoursePage
    courseInfo={
      Object {
        "data": Object {},
      }
    }
    courseOptions={
      Object {
        "data": Object {
          "actions": Object {
            "PUT": Object {
              "level_type": Object {
                "choices": Array [
                  Object {
                    "display_name": "Beginner",
                    "value": "beginner",
                  },
                  Object {
                    "display_name": "Intermediate",
                    "value": "intermediate",
                  },
                  Object {
                    "display_name": "Advanced",
                    "value": "advanced",
                  },
                ],
              },
              "subjects": Object {
                "child": Object {
                  "choices": Array [
                    Object {
                      "display_name": "Business",
                      "value": "business",
                    },
                    Object {
                      "display_name": "Chemistry",
                      "value": "chemistry",
                    },
                    Object {
                      "display_name": "English",
                      "value": "english",
                    },
                    Object {
                      "display_name": "Security",
                      "value": "security",
                    },
                  ],
                },
              },
            },
          },
        },
        "error": null,
        "isFetching": false,
      }
    }
    courseRunOptions={Object {}}
    editCourse={[Function]}
    fetchCourseInfo={[Function]}
    fetchCourseOptions={[Function]}
    fetchCourseRunOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Course - undefined
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {
                          "actions": Object {
                            "PUT": Object {
                              "level_type": Object {
                                "choices": Array [
                                  Object {
                                    "display_name": "Beginner",
                                    "value": "beginner",
                                  },
                                  Object {
                                    "display_name": "Intermediate",
                                    "value": "intermediate",
                                  },
                                  Object {
                                    "display_name": "Advanced",
                                    "value": "advanced",
                                  },
                                ],
                              },
                              "subjects": Object {
                                "child": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Business",
                                      "value": "business",
                                    },
                                    Object {
                                      "display_name": "Chemistry",
                                      "value": "chemistry",
                                    },
                                    Object {
                                      "display_name": "English",
                                      "value": "english",
                                    },
                                    Object {
                                      "display_name": "Security",
                                      "value": "security",
                                    },
                                  ],
                                },
                              },
                            },
                          },
                        },
                        "error": null,
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Course - undefined
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Course - undefined",
          },
          "ref": null,
          "rendered": "Course - undefined",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {
                          "actions": Object {
                            "PUT": Object {
                              "level_type": Object {
                                "choices": Array [
                                  Object {
                                    "display_name": "Beginner",
                                    "value": "beginner",
                                  },
                                  Object {
                                    "display_name": "Intermediate",
                                    "value": "intermediate",
                                  },
                                  Object {
                                    "display_name": "Advanced",
                                    "value": "advanced",
                                  },
                                ],
                              },
                              "subjects": Object {
                                "child": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Business",
                                      "value": "business",
                                    },
                                    Object {
                                      "display_name": "Chemistry",
                                      "value": "chemistry",
                                    },
                                    Object {
                                      "display_name": "English",
                                      "value": "english",
                                    },
                                    Object {
                                      "display_name": "Security",
                                      "value": "security",
                                    },
                                  ],
                                },
                              },
                            },
                          },
                        },
                        "error": null,
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {
                          "actions": Object {
                            "PUT": Object {
                              "level_type": Object {
                                "choices": Array [
                                  Object {
                                    "display_name": "Beginner",
                                    "value": "beginner",
                                  },
                                  Object {
                                    "display_name": "Intermediate",
                                    "value": "intermediate",
                                  },
                                  Object {
                                    "display_name": "Advanced",
                                    "value": "advanced",
                                  },
                                ],
                              },
                              "subjects": Object {
                                "child": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Business",
                                      "value": "business",
                                    },
                                    Object {
                                      "display_name": "Chemistry",
                                      "value": "chemistry",
                                    },
                                    Object {
                                      "display_name": "English",
                                      "value": "english",
                                    },
                                    Object {
                                      "display_name": "Security",
                                      "value": "security",
                                    },
                                  ],
                                },
                              },
                            },
                          },
                        },
                        "error": null,
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>,
                "",
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />,
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "courseOptions": Object {
                        "data": Object {
                          "actions": Object {
                            "PUT": Object {
                              "level_type": Object {
                                "choices": Array [
                                  Object {
                                    "display_name": "Beginner",
                                    "value": "beginner",
                                  },
                                  Object {
                                    "display_name": "Intermediate",
                                    "value": "intermediate",
                                  },
                                  Object {
                                    "display_name": "Advanced",
                                    "value": "advanced",
                                  },
                                ],
                              },
                              "subjects": Object {
                                "child": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Business",
                                      "value": "business",
                                    },
                                    Object {
                                      "display_name": "Chemistry",
                                      "value": "chemistry",
                                    },
                                    Object {
                                      "display_name": "English",
                                      "value": "english",
                                    },
                                    Object {
                                      "display_name": "Security",
                                      "value": "security",
                                    },
                                  ],
                                },
                              },
                            },
                          },
                        },
                        "error": null,
                        "isFetching": false,
                      },
                      "courseRunOptions": Object {},
                      "courseRuns": undefined,
                      "entitlement": false,
                      "id": "edit-course-form-undefined",
                      "initialValues": Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      },
                      "number": undefined,
                      "onSubmit": [Function],
                      "title": undefined,
                      "uuid": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
              "",
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Course - undefined
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Course - undefined
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Course - undefined",
            },
            "ref": null,
            "rendered": "Course - undefined",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  <div>
                    <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {
                              "actions": Object {
                                "PUT": Object {
                                  "level_type": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Beginner",
                                        "value": "beginner",
                                      },
                                      Object {
                                        "display_name": "Intermediate",
                                        "value": "intermediate",
                                      },
                                      Object {
                                        "display_name": "Advanced",
                                        "value": "advanced",
                                      },
                                    ],
                                  },
                                  "subjects": Object {
                                    "child": Object {
                                      "choices": Array [
                                        Object {
                                          "display_name": "Business",
                                          "value": "business",
                                        },
                                        Object {
                                          "display_name": "Chemistry",
                                          "value": "chemistry",
                                        },
                                        Object {
                                          "display_name": "English",
                                          "value": "english",
                                        },
                                        Object {
                                          "display_name": "Security",
                                          "value": "security",
                                        },
                                      ],
                                    },
                                  },
                                },
                              },
                            },
                            "error": null,
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />
                    </div>
                  </div>,
                  "",
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {
                              "actions": Object {
                                "PUT": Object {
                                  "level_type": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Beginner",
                                        "value": "beginner",
                                      },
                                      Object {
                                        "display_name": "Intermediate",
                                        "value": "intermediate",
                                      },
                                      Object {
                                        "display_name": "Advanced",
                                        "value": "advanced",
                                      },
                                    ],
                                  },
                                  "subjects": Object {
                                    "child": Object {
                                      "choices": Array [
                                        Object {
                                          "display_name": "Business",
                                          "value": "business",
                                        },
                                        Object {
                                          "display_name": "Chemistry",
                                          "value": "chemistry",
                                        },
                                        Object {
                                          "display_name": "English",
                                          "value": "english",
                                        },
                                        Object {
                                          "display_name": "Security",
                                          "value": "security",
                                        },
                                      ],
                                    },
                                  },
                                },
                              },
                            },
                            "error": null,
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />
                    </div>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {
                              "actions": Object {
                                "PUT": Object {
                                  "level_type": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Beginner",
                                        "value": "beginner",
                                      },
                                      Object {
                                        "display_name": "Intermediate",
                                        "value": "intermediate",
                                      },
                                      Object {
                                        "display_name": "Advanced",
                                        "value": "advanced",
                                      },
                                    ],
                                  },
                                  "subjects": Object {
                                    "child": Object {
                                      "choices": Array [
                                        Object {
                                          "display_name": "Business",
                                          "value": "business",
                                        },
                                        Object {
                                          "display_name": "Chemistry",
                                          "value": "chemistry",
                                        },
                                        Object {
                                          "display_name": "English",
                                          "value": "english",
                                        },
                                        Object {
                                          "display_name": "Security",
                                          "value": "security",
                                        },
                                      ],
                                    },
                                  },
                                },
                              },
                            },
                            "error": null,
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />,
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "courseOptions": Object {
                          "data": Object {
                            "actions": Object {
                              "PUT": Object {
                                "level_type": Object {
                                  "choices": Array [
                                    Object {
                                      "display_name": "Beginner",
                                      "value": "beginner",
                                    },
                                    Object {
                                      "display_name": "Intermediate",
                                      "value": "intermediate",
                                    },
                                    Object {
                                      "display_name": "Advanced",
                                      "value": "advanced",
                                    },
                                  ],
                                },
                                "subjects": Object {
                                  "child": Object {
                                    "choices": Array [
                                      Object {
                                        "display_name": "Business",
                                        "value": "business",
                                      },
                                      Object {
                                        "display_name": "Chemistry",
                                        "value": "chemistry",
                                      },
                                      Object {
                                        "display_name": "English",
                                        "value": "english",
                                      },
                                      Object {
                                        "display_name": "Security",
                                        "value": "security",
                                      },
                                    ],
                                  },
                                },
                              },
                            },
                          },
                          "error": null,
                          "isFetching": false,
                        },
                        "courseRunOptions": Object {},
                        "courseRuns": undefined,
                        "entitlement": false,
                        "id": "edit-course-form-undefined",
                        "initialValues": Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        },
                        "number": undefined,
                        "onSubmit": [Function],
                        "title": undefined,
                        "uuid": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
                "",
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`EditCoursePage renders page correctly with courseOptions error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditCoursePage
    courseInfo={
      Object {
        "data": Object {},
      }
    }
    courseOptions={
      Object {
        "data": Object {},
        "error": "Course Options error",
        "isFetching": false,
      }
    }
    courseRunOptions={Object {}}
    editCourse={[Function]}
    fetchCourseInfo={[Function]}
    fetchCourseOptions={[Function]}
    fetchCourseRunOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Course - undefined
          </title>
        </HelmetWrapper>,
        <div
          className="container-fluid"
        >
          <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {},
                        "error": "Course Options error",
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="error"
                message="Course Options error"
                onClose={[Function]}
                title="Course Edit Form failed to load: "
              />
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Course - undefined
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Course - undefined",
          },
          "ref": null,
          "rendered": "Course - undefined",
          "type": "title",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-md-center my-3 "
          >
            <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {},
                        "error": "Course Options error",
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="error"
                message="Course Options error"
                onClose={[Function]}
                title="Course Edit Form failed to load: "
              />
            </div>
          </div>,
          "className": "container-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-6"
            >
              <div>
                <div
                  className="col"
                >
                  <Connect(ReduxForm)
                    courseOptions={
                      Object {
                        "data": Object {},
                        "error": "Course Options error",
                        "isFetching": false,
                      }
                    }
                    courseRunOptions={Object {}}
                    entitlement={false}
                    id="edit-course-form-undefined"
                    initialValues={
                      Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      }
                    }
                    onSubmit={[Function]}
                  />
                </div>
              </div>
              <StatusAlert
                alertType="danger"
                className={Array []}
                dismissible={false}
                iconClassNames={Array []}
                id="error"
                message="Course Options error"
                onClose={[Function]}
                title="Course Edit Form failed to load: "
              />
            </div>,
            "className": "row justify-content-md-center my-3 ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>,
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Options error"
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />,
              ],
              "className": "col-6",
            },
            "ref": null,
            "rendered": Array [
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />,
                    "className": "col",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "courseOptions": Object {
                        "data": Object {},
                        "error": "Course Options error",
                        "isFetching": false,
                      },
                      "courseRunOptions": Object {},
                      "courseRuns": undefined,
                      "entitlement": false,
                      "id": "edit-course-form-undefined",
                      "initialValues": Object {
                        "additional_information": undefined,
                        "course_runs": undefined,
                        "faq": undefined,
                        "full_description": undefined,
                        "imageSrc": undefined,
                        "learner_testimonials": undefined,
                        "level_type": undefined,
                        "mode": undefined,
                        "outcome": undefined,
                        "prerequisites_raw": undefined,
                        "price": undefined,
                        "short_description": undefined,
                        "subjectPrimary": undefined,
                        "subjectSecondary": undefined,
                        "subjectTertiary": undefined,
                        "syllabus_raw": undefined,
                        "title": undefined,
                        "videoSrc": undefined,
                      },
                      "number": undefined,
                      "onSubmit": [Function],
                      "title": undefined,
                      "uuid": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "alertType": "danger",
                  "className": Array [],
                  "dismissible": false,
                  "iconClassNames": Array [],
                  "id": "error",
                  "message": "Course Options error",
                  "onClose": [Function],
                  "title": "Course Edit Form failed to load: ",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Course - undefined
            </title>
          </HelmetWrapper>,
          <div
            className="container-fluid"
          >
            <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Options error"
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Course - undefined
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Course - undefined",
            },
            "ref": null,
            "rendered": "Course - undefined",
            "type": "title",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-md-center my-3 "
            >
              <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Options error"
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />
              </div>
            </div>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-6"
              >
                <div>
                  <div
                    className="col"
                  >
                    <Connect(ReduxForm)
                      courseOptions={
                        Object {
                          "data": Object {},
                          "error": "Course Options error",
                          "isFetching": false,
                        }
                      }
                      courseRunOptions={Object {}}
                      entitlement={false}
                      id="edit-course-form-undefined"
                      initialValues={
                        Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        }
                      }
                      onSubmit={[Function]}
                    />
                  </div>
                </div>
                <StatusAlert
                  alertType="danger"
                  className={Array []}
                  dismissible={false}
                  iconClassNames={Array []}
                  id="error"
                  message="Course Options error"
                  onClose={[Function]}
                  title="Course Edit Form failed to load: "
                />
              </div>,
              "className": "row justify-content-md-center my-3 ",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  <div>
                    <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {},
                            "error": "Course Options error",
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />
                    </div>
                  </div>,
                  <StatusAlert
                    alertType="danger"
                    className={Array []}
                    dismissible={false}
                    iconClassNames={Array []}
                    id="error"
                    message="Course Options error"
                    onClose={[Function]}
                    title="Course Edit Form failed to load: "
                  />,
                ],
                "className": "col-6",
              },
              "ref": null,
              "rendered": Array [
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="col"
                    >
                      <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {},
                            "error": "Course Options error",
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />
                    </div>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Connect(ReduxForm)
                        courseOptions={
                          Object {
                            "data": Object {},
                            "error": "Course Options error",
                            "isFetching": false,
                          }
                        }
                        courseRunOptions={Object {}}
                        entitlement={false}
                        id="edit-course-form-undefined"
                        initialValues={
                          Object {
                            "additional_information": undefined,
                            "course_runs": undefined,
                            "faq": undefined,
                            "full_description": undefined,
                            "imageSrc": undefined,
                            "learner_testimonials": undefined,
                            "level_type": undefined,
                            "mode": undefined,
                            "outcome": undefined,
                            "prerequisites_raw": undefined,
                            "price": undefined,
                            "short_description": undefined,
                            "subjectPrimary": undefined,
                            "subjectSecondary": undefined,
                            "subjectTertiary": undefined,
                            "syllabus_raw": undefined,
                            "title": undefined,
                            "videoSrc": undefined,
                          }
                        }
                        onSubmit={[Function]}
                      />,
                      "className": "col",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "courseOptions": Object {
                          "data": Object {},
                          "error": "Course Options error",
                          "isFetching": false,
                        },
                        "courseRunOptions": Object {},
                        "courseRuns": undefined,
                        "entitlement": false,
                        "id": "edit-course-form-undefined",
                        "initialValues": Object {
                          "additional_information": undefined,
                          "course_runs": undefined,
                          "faq": undefined,
                          "full_description": undefined,
                          "imageSrc": undefined,
                          "learner_testimonials": undefined,
                          "level_type": undefined,
                          "mode": undefined,
                          "outcome": undefined,
                          "prerequisites_raw": undefined,
                          "price": undefined,
                          "short_description": undefined,
                          "subjectPrimary": undefined,
                          "subjectSecondary": undefined,
                          "subjectTertiary": undefined,
                          "syllabus_raw": undefined,
                          "title": undefined,
                          "videoSrc": undefined,
                        },
                        "number": undefined,
                        "onSubmit": [Function],
                        "title": undefined,
                        "uuid": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "alertType": "danger",
                    "className": Array [],
                    "dismissible": false,
                    "iconClassNames": Array [],
                    "id": "error",
                    "message": "Course Options error",
                    "onClose": [Function],
                    "title": "Course Edit Form failed to load: ",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`EditCoursePage renders page correctly with no courseInfo 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditCoursePage
    courseInfo={null}
    courseOptions={Object {}}
    courseRunOptions={Object {}}
    editCourse={[Function]}
    fetchCourseInfo={[Function]}
    fetchCourseOptions={[Function]}
    fetchCourseRunOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "alertType": "danger",
      "className": Array [],
      "dismissible": false,
      "iconClassNames": Array [],
      "id": "error",
      "message": "Course information unavailable.",
      "onClose": [Function],
      "title": "Course Edit Form failed to load: ",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "alertType": "danger",
        "className": Array [],
        "dismissible": false,
        "iconClassNames": Array [],
        "id": "error",
        "message": "Course information unavailable.",
        "onClose": [Function],
        "title": "Course Edit Form failed to load: ",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`EditCoursePage renders page correctly with no courseOptions 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditCoursePage
    courseInfo={
      Object {
        "data": Object {},
      }
    }
    courseOptions={null}
    courseRunOptions={Object {}}
    editCourse={[Function]}
    fetchCourseInfo={[Function]}
    fetchCourseOptions={[Function]}
    fetchCourseRunOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "alertType": "danger",
      "className": Array [],
      "dismissible": false,
      "iconClassNames": Array [],
      "id": "error",
      "message": "Course information unavailable.",
      "onClose": [Function],
      "title": "Course Edit Form failed to load: ",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "alertType": "danger",
        "className": Array [],
        "dismissible": false,
        "iconClassNames": Array [],
        "id": "error",
        "message": "Course information unavailable.",
        "onClose": [Function],
        "title": "Course Edit Form failed to load: ",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
