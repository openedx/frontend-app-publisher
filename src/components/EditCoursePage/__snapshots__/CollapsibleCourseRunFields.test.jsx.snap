// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Collapsible Course Run Fields renders correctly when given fields 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CollapsibleCourseRunFields
    courseRuns={
      Array [
        Object {
          "content_language": "ar-ae",
          "end": "2010/01/01",
          "max_effort": 1,
          "min_effort": 1,
          "pacing_type": "self_paced",
          "start": "2000-01-01T12:00:00Z",
          "transcript_languages": Array [
            "ar-ae",
          ],
          "weeks_to_complete": 1,
        },
      ]
    }
    fields={
      Array [
        Object {},
        Object {},
      ]
    }
    languageOptions={
      Array [
        Object {
          "label": "Arabic - United Arab Emirates",
          "value": "ar-ae",
        },
      ]
    }
    pacingTypeOptions={
      Array [
        Object {
          "label": "Self-paced",
          "value": "self_paced",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <t
          iconId="collapsible-icon-[object Object]"
          isOpen={false}
          onToggle={[Function]}
          title={
            <div
              className="course-run-label"
            >
              <span>
                Course run starting on Jan 1st 2000 - Self Paced
              </span>
              <div
                className="course-run-studio-url"
              >
                Studio URL - 
                <a
                  href="undefined/course/undefined"
                >
                  undefined
                </a>
              </div>
            </div>
          }
        >
          <Field
            component={[Function]}
            format={[Function]}
            label={
              <React.Fragment>
                Start date
                <span
                  aria-hidden={true}
                  className="required"
                >
                  *
                </span>
              </React.Fragment>
            }
            name="[object Object].start"
            placeholder="mm/dd/yyyy"
            required={true}
            type="date"
          />
          <Field
            component={[Function]}
            format={[Function]}
            label={
              <React.Fragment>
                End date
                <span
                  aria-hidden={true}
                  className="required"
                >
                  *
                </span>
              </React.Fragment>
            }
            name="[object Object].end"
            normalize={[Function]}
            placeholder="mm/dd/yyyy"
            required={true}
            type="date"
          />
          <Field
            component={[Function]}
            label={
              <React.Fragment>
                Minimum Effort
              </React.Fragment>
            }
            name="[object Object].min_effort"
            type="number"
          />
          <Field
            component={[Function]}
            label={
              <React.Fragment>
                Maximum Effort
              </React.Fragment>
            }
            name="[object Object].max_effort"
            type="number"
          />
          <Field
            component={[Function]}
            label={
              <React.Fragment>
                Course Pacing
              </React.Fragment>
            }
            name="[object Object].pacing_type"
            options={
              Array [
                Object {
                  "label": "Self-paced",
                  "value": "self_paced",
                },
              ]
            }
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <React.Fragment>
                Content Language
              </React.Fragment>
            }
            name="[object Object].content_language"
            options={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            type="text"
          />
          <div
            className="transcript-label"
          >
            Transcript Languages
          </div>
          <FieldArray
            component={[Function]}
            languageOptions={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            name="[object Object].transcript_languages"
          />
          <Field
            component={[Function]}
            label={
              <React.Fragment>
                Length
              </React.Fragment>
            }
            name="[object Object].weeks_to_complete"
            type="number"
          />
          <Field
            component={[Function]}
            name="[object Object].staff"
          />
          <button
            className="btn btn-primary form-submit-btn float-right mt-2"
            type="submit"
          >
            <span>
              Submit for Review
            </span>
          </button>
        </t>,
        <t
          iconId="collapsible-icon-[object Object]"
          isOpen={false}
          onToggle={[Function]}
          title={
            <div>
              <span>
                Your new course run
              </span>
            </div>
          }
        >
          <Field
            component={[Function]}
            format={[Function]}
            label={
              <React.Fragment>
                Start date
                <span
                  aria-hidden={true}
                  className="required"
                >
                  *
                </span>
              </React.Fragment>
            }
            name="[object Object].start"
            placeholder="mm/dd/yyyy"
            required={true}
            type="date"
          />
          <Field
            component={[Function]}
            format={[Function]}
            label={
              <React.Fragment>
                End date
                <span
                  aria-hidden={true}
                  className="required"
                >
                  *
                </span>
              </React.Fragment>
            }
            name="[object Object].end"
            normalize={[Function]}
            placeholder="mm/dd/yyyy"
            required={true}
            type="date"
          />
          <Field
            component={[Function]}
            label={
              <React.Fragment>
                Minimum Effort
              </React.Fragment>
            }
            name="[object Object].min_effort"
            type="number"
          />
          <Field
            component={[Function]}
            label={
              <React.Fragment>
                Maximum Effort
              </React.Fragment>
            }
            name="[object Object].max_effort"
            type="number"
          />
          <Field
            component={[Function]}
            label={
              <React.Fragment>
                Course Pacing
              </React.Fragment>
            }
            name="[object Object].pacing_type"
            options={
              Array [
                Object {
                  "label": "Self-paced",
                  "value": "self_paced",
                },
              ]
            }
            type="text"
          />
          <Field
            component={[Function]}
            label={
              <React.Fragment>
                Content Language
              </React.Fragment>
            }
            name="[object Object].content_language"
            options={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            type="text"
          />
          <div
            className="transcript-label"
          >
            Transcript Languages
          </div>
          <FieldArray
            component={[Function]}
            languageOptions={
              Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ]
            }
            name="[object Object].transcript_languages"
          />
          <Field
            component={[Function]}
            label={
              <React.Fragment>
                Length
              </React.Fragment>
            }
            name="[object Object].weeks_to_complete"
            type="number"
          />
          <Field
            component={[Function]}
            name="[object Object].staff"
          />
          <button
            className="btn btn-primary form-submit-btn float-right mt-2"
            type="submit"
          >
            <span>
              Submit for Review
            </span>
          </button>
        </t>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "collapsible-run-[object Object]",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              format={[Function]}
              label={
                <React.Fragment>
                  Start date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="[object Object].start"
              placeholder="mm/dd/yyyy"
              required={true}
              type="date"
            />,
            <Field
              component={[Function]}
              format={[Function]}
              label={
                <React.Fragment>
                  End date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="[object Object].end"
              normalize={[Function]}
              placeholder="mm/dd/yyyy"
              required={true}
              type="date"
            />,
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Minimum Effort
                </React.Fragment>
              }
              name="[object Object].min_effort"
              type="number"
            />,
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Maximum Effort
                </React.Fragment>
              }
              name="[object Object].max_effort"
              type="number"
            />,
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Course Pacing
                </React.Fragment>
              }
              name="[object Object].pacing_type"
              options={
                Array [
                  Object {
                    "label": "Self-paced",
                    "value": "self_paced",
                  },
                ]
              }
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Content Language
                </React.Fragment>
              }
              name="[object Object].content_language"
              options={
                Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ]
              }
              type="text"
            />,
            <div
              className="transcript-label"
            >
              Transcript Languages
            </div>,
            <FieldArray
              component={[Function]}
              languageOptions={
                Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ]
              }
              name="[object Object].transcript_languages"
            />,
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Length
                </React.Fragment>
              }
              name="[object Object].weeks_to_complete"
              type="number"
            />,
            <Field
              component={[Function]}
              name="[object Object].staff"
            />,
            <button
              className="btn btn-primary form-submit-btn float-right mt-2"
              type="submit"
            >
              <span>
                Submit for Review
              </span>
            </button>,
          ],
          "expandedTitle": undefined,
          "iconId": "collapsible-icon-[object Object]",
          "isCollapsible": undefined,
          "isOpen": false,
          "onToggle": [Function],
          "title": <div
            className="course-run-label"
          >
            <span>
              Course run starting on Jan 1st 2000 - Self Paced
            </span>
            <div
              className="course-run-studio-url"
            >
              Studio URL - 
              <a
                href="undefined/course/undefined"
              >
                undefined
              </a>
            </div>
          </div>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "format": [Function],
              "label": <React.Fragment>
                Start date
                <span
                  aria-hidden={true}
                  className="required"
                >
                  *
                </span>
              </React.Fragment>,
              "name": "[object Object].start",
              "placeholder": "mm/dd/yyyy",
              "required": true,
              "type": "date",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "format": [Function],
              "label": <React.Fragment>
                End date
                <span
                  aria-hidden={true}
                  className="required"
                >
                  *
                </span>
              </React.Fragment>,
              "name": "[object Object].end",
              "normalize": [Function],
              "placeholder": "mm/dd/yyyy",
              "required": true,
              "type": "date",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <React.Fragment>
                Minimum Effort
              </React.Fragment>,
              "name": "[object Object].min_effort",
              "type": "number",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <React.Fragment>
                Maximum Effort
              </React.Fragment>,
              "name": "[object Object].max_effort",
              "type": "number",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <React.Fragment>
                Course Pacing
              </React.Fragment>,
              "name": "[object Object].pacing_type",
              "options": Array [
                Object {
                  "label": "Self-paced",
                  "value": "self_paced",
                },
              ],
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <React.Fragment>
                Content Language
              </React.Fragment>,
              "name": "[object Object].content_language",
              "options": Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ],
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Transcript Languages",
              "className": "transcript-label",
            },
            "ref": null,
            "rendered": "Transcript Languages",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "languageOptions": Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ],
              "name": "[object Object].transcript_languages",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <React.Fragment>
                Length
              </React.Fragment>,
              "name": "[object Object].weeks_to_complete",
              "type": "number",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "[object Object].staff",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span>
                Submit for Review
              </span>,
              "className": "btn btn-primary form-submit-btn float-right mt-2",
              "type": "submit",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit for Review",
              },
              "ref": null,
              "rendered": "Submit for Review",
              "type": "span",
            },
            "type": "button",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "collapsible-run-[object Object]",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              format={[Function]}
              label={
                <React.Fragment>
                  Start date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="[object Object].start"
              placeholder="mm/dd/yyyy"
              required={true}
              type="date"
            />,
            <Field
              component={[Function]}
              format={[Function]}
              label={
                <React.Fragment>
                  End date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="[object Object].end"
              normalize={[Function]}
              placeholder="mm/dd/yyyy"
              required={true}
              type="date"
            />,
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Minimum Effort
                </React.Fragment>
              }
              name="[object Object].min_effort"
              type="number"
            />,
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Maximum Effort
                </React.Fragment>
              }
              name="[object Object].max_effort"
              type="number"
            />,
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Course Pacing
                </React.Fragment>
              }
              name="[object Object].pacing_type"
              options={
                Array [
                  Object {
                    "label": "Self-paced",
                    "value": "self_paced",
                  },
                ]
              }
              type="text"
            />,
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Content Language
                </React.Fragment>
              }
              name="[object Object].content_language"
              options={
                Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ]
              }
              type="text"
            />,
            <div
              className="transcript-label"
            >
              Transcript Languages
            </div>,
            <FieldArray
              component={[Function]}
              languageOptions={
                Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ]
              }
              name="[object Object].transcript_languages"
            />,
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Length
                </React.Fragment>
              }
              name="[object Object].weeks_to_complete"
              type="number"
            />,
            <Field
              component={[Function]}
              name="[object Object].staff"
            />,
            <button
              className="btn btn-primary form-submit-btn float-right mt-2"
              type="submit"
            >
              <span>
                Submit for Review
              </span>
            </button>,
          ],
          "expandedTitle": undefined,
          "iconId": "collapsible-icon-[object Object]",
          "isCollapsible": undefined,
          "isOpen": false,
          "onToggle": [Function],
          "title": <div>
            <span>
              Your new course run
            </span>
          </div>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "format": [Function],
              "label": <React.Fragment>
                Start date
                <span
                  aria-hidden={true}
                  className="required"
                >
                  *
                </span>
              </React.Fragment>,
              "name": "[object Object].start",
              "placeholder": "mm/dd/yyyy",
              "required": true,
              "type": "date",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "format": [Function],
              "label": <React.Fragment>
                End date
                <span
                  aria-hidden={true}
                  className="required"
                >
                  *
                </span>
              </React.Fragment>,
              "name": "[object Object].end",
              "normalize": [Function],
              "placeholder": "mm/dd/yyyy",
              "required": true,
              "type": "date",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <React.Fragment>
                Minimum Effort
              </React.Fragment>,
              "name": "[object Object].min_effort",
              "type": "number",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <React.Fragment>
                Maximum Effort
              </React.Fragment>,
              "name": "[object Object].max_effort",
              "type": "number",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <React.Fragment>
                Course Pacing
              </React.Fragment>,
              "name": "[object Object].pacing_type",
              "options": Array [
                Object {
                  "label": "Self-paced",
                  "value": "self_paced",
                },
              ],
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <React.Fragment>
                Content Language
              </React.Fragment>,
              "name": "[object Object].content_language",
              "options": Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ],
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Transcript Languages",
              "className": "transcript-label",
            },
            "ref": null,
            "rendered": "Transcript Languages",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "languageOptions": Array [
                Object {
                  "label": "Arabic - United Arab Emirates",
                  "value": "ar-ae",
                },
              ],
              "name": "[object Object].transcript_languages",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": <React.Fragment>
                Length
              </React.Fragment>,
              "name": "[object Object].weeks_to_complete",
              "type": "number",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "name": "[object Object].staff",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span>
                Submit for Review
              </span>,
              "className": "btn btn-primary form-submit-btn float-right mt-2",
              "type": "submit",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit for Review",
              },
              "ref": null,
              "rendered": "Submit for Review",
              "type": "span",
            },
            "type": "button",
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <t
            iconId="collapsible-icon-[object Object]"
            isOpen={false}
            onToggle={[Function]}
            title={
              <div
                className="course-run-label"
              >
                <span>
                  Course run starting on Jan 1st 2000 - Self Paced
                </span>
                <div
                  className="course-run-studio-url"
                >
                  Studio URL - 
                  <a
                    href="undefined/course/undefined"
                  >
                    undefined
                  </a>
                </div>
              </div>
            }
          >
            <Field
              component={[Function]}
              format={[Function]}
              label={
                <React.Fragment>
                  Start date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="[object Object].start"
              placeholder="mm/dd/yyyy"
              required={true}
              type="date"
            />
            <Field
              component={[Function]}
              format={[Function]}
              label={
                <React.Fragment>
                  End date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="[object Object].end"
              normalize={[Function]}
              placeholder="mm/dd/yyyy"
              required={true}
              type="date"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Minimum Effort
                </React.Fragment>
              }
              name="[object Object].min_effort"
              type="number"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Maximum Effort
                </React.Fragment>
              }
              name="[object Object].max_effort"
              type="number"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Course Pacing
                </React.Fragment>
              }
              name="[object Object].pacing_type"
              options={
                Array [
                  Object {
                    "label": "Self-paced",
                    "value": "self_paced",
                  },
                ]
              }
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Content Language
                </React.Fragment>
              }
              name="[object Object].content_language"
              options={
                Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ]
              }
              type="text"
            />
            <div
              className="transcript-label"
            >
              Transcript Languages
            </div>
            <FieldArray
              component={[Function]}
              languageOptions={
                Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ]
              }
              name="[object Object].transcript_languages"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Length
                </React.Fragment>
              }
              name="[object Object].weeks_to_complete"
              type="number"
            />
            <Field
              component={[Function]}
              name="[object Object].staff"
            />
            <button
              className="btn btn-primary form-submit-btn float-right mt-2"
              type="submit"
            >
              <span>
                Submit for Review
              </span>
            </button>
          </t>,
          <t
            iconId="collapsible-icon-[object Object]"
            isOpen={false}
            onToggle={[Function]}
            title={
              <div>
                <span>
                  Your new course run
                </span>
              </div>
            }
          >
            <Field
              component={[Function]}
              format={[Function]}
              label={
                <React.Fragment>
                  Start date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="[object Object].start"
              placeholder="mm/dd/yyyy"
              required={true}
              type="date"
            />
            <Field
              component={[Function]}
              format={[Function]}
              label={
                <React.Fragment>
                  End date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>
              }
              name="[object Object].end"
              normalize={[Function]}
              placeholder="mm/dd/yyyy"
              required={true}
              type="date"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Minimum Effort
                </React.Fragment>
              }
              name="[object Object].min_effort"
              type="number"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Maximum Effort
                </React.Fragment>
              }
              name="[object Object].max_effort"
              type="number"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Course Pacing
                </React.Fragment>
              }
              name="[object Object].pacing_type"
              options={
                Array [
                  Object {
                    "label": "Self-paced",
                    "value": "self_paced",
                  },
                ]
              }
              type="text"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Content Language
                </React.Fragment>
              }
              name="[object Object].content_language"
              options={
                Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ]
              }
              type="text"
            />
            <div
              className="transcript-label"
            >
              Transcript Languages
            </div>
            <FieldArray
              component={[Function]}
              languageOptions={
                Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ]
              }
              name="[object Object].transcript_languages"
            />
            <Field
              component={[Function]}
              label={
                <React.Fragment>
                  Length
                </React.Fragment>
              }
              name="[object Object].weeks_to_complete"
              type="number"
            />
            <Field
              component={[Function]}
              name="[object Object].staff"
            />
            <button
              className="btn btn-primary form-submit-btn float-right mt-2"
              type="submit"
            >
              <span>
                Submit for Review
              </span>
            </button>
          </t>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "collapsible-run-[object Object]",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                format={[Function]}
                label={
                  <React.Fragment>
                    Start date
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="[object Object].start"
                placeholder="mm/dd/yyyy"
                required={true}
                type="date"
              />,
              <Field
                component={[Function]}
                format={[Function]}
                label={
                  <React.Fragment>
                    End date
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="[object Object].end"
                normalize={[Function]}
                placeholder="mm/dd/yyyy"
                required={true}
                type="date"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Minimum Effort
                  </React.Fragment>
                }
                name="[object Object].min_effort"
                type="number"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Maximum Effort
                  </React.Fragment>
                }
                name="[object Object].max_effort"
                type="number"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Course Pacing
                  </React.Fragment>
                }
                name="[object Object].pacing_type"
                options={
                  Array [
                    Object {
                      "label": "Self-paced",
                      "value": "self_paced",
                    },
                  ]
                }
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Content Language
                  </React.Fragment>
                }
                name="[object Object].content_language"
                options={
                  Array [
                    Object {
                      "label": "Arabic - United Arab Emirates",
                      "value": "ar-ae",
                    },
                  ]
                }
                type="text"
              />,
              <div
                className="transcript-label"
              >
                Transcript Languages
              </div>,
              <FieldArray
                component={[Function]}
                languageOptions={
                  Array [
                    Object {
                      "label": "Arabic - United Arab Emirates",
                      "value": "ar-ae",
                    },
                  ]
                }
                name="[object Object].transcript_languages"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Length
                  </React.Fragment>
                }
                name="[object Object].weeks_to_complete"
                type="number"
              />,
              <Field
                component={[Function]}
                name="[object Object].staff"
              />,
              <button
                className="btn btn-primary form-submit-btn float-right mt-2"
                type="submit"
              >
                <span>
                  Submit for Review
                </span>
              </button>,
            ],
            "expandedTitle": undefined,
            "iconId": "collapsible-icon-[object Object]",
            "isCollapsible": undefined,
            "isOpen": false,
            "onToggle": [Function],
            "title": <div
              className="course-run-label"
            >
              <span>
                Course run starting on Jan 1st 2000 - Self Paced
              </span>
              <div
                className="course-run-studio-url"
              >
                Studio URL - 
                <a
                  href="undefined/course/undefined"
                >
                  undefined
                </a>
              </div>
            </div>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "format": [Function],
                "label": <React.Fragment>
                  Start date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "[object Object].start",
                "placeholder": "mm/dd/yyyy",
                "required": true,
                "type": "date",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "format": [Function],
                "label": <React.Fragment>
                  End date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "[object Object].end",
                "normalize": [Function],
                "placeholder": "mm/dd/yyyy",
                "required": true,
                "type": "date",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Minimum Effort
                </React.Fragment>,
                "name": "[object Object].min_effort",
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Maximum Effort
                </React.Fragment>,
                "name": "[object Object].max_effort",
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Course Pacing
                </React.Fragment>,
                "name": "[object Object].pacing_type",
                "options": Array [
                  Object {
                    "label": "Self-paced",
                    "value": "self_paced",
                  },
                ],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Content Language
                </React.Fragment>,
                "name": "[object Object].content_language",
                "options": Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Transcript Languages",
                "className": "transcript-label",
              },
              "ref": null,
              "rendered": "Transcript Languages",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "languageOptions": Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ],
                "name": "[object Object].transcript_languages",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Length
                </React.Fragment>,
                "name": "[object Object].weeks_to_complete",
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "name": "[object Object].staff",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                  Submit for Review
                </span>,
                "className": "btn btn-primary form-submit-btn float-right mt-2",
                "type": "submit",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Submit for Review",
                },
                "ref": null,
                "rendered": "Submit for Review",
                "type": "span",
              },
              "type": "button",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "collapsible-run-[object Object]",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                format={[Function]}
                label={
                  <React.Fragment>
                    Start date
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="[object Object].start"
                placeholder="mm/dd/yyyy"
                required={true}
                type="date"
              />,
              <Field
                component={[Function]}
                format={[Function]}
                label={
                  <React.Fragment>
                    End date
                    <span
                      aria-hidden={true}
                      className="required"
                    >
                      *
                    </span>
                  </React.Fragment>
                }
                name="[object Object].end"
                normalize={[Function]}
                placeholder="mm/dd/yyyy"
                required={true}
                type="date"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Minimum Effort
                  </React.Fragment>
                }
                name="[object Object].min_effort"
                type="number"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Maximum Effort
                  </React.Fragment>
                }
                name="[object Object].max_effort"
                type="number"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Course Pacing
                  </React.Fragment>
                }
                name="[object Object].pacing_type"
                options={
                  Array [
                    Object {
                      "label": "Self-paced",
                      "value": "self_paced",
                    },
                  ]
                }
                type="text"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Content Language
                  </React.Fragment>
                }
                name="[object Object].content_language"
                options={
                  Array [
                    Object {
                      "label": "Arabic - United Arab Emirates",
                      "value": "ar-ae",
                    },
                  ]
                }
                type="text"
              />,
              <div
                className="transcript-label"
              >
                Transcript Languages
              </div>,
              <FieldArray
                component={[Function]}
                languageOptions={
                  Array [
                    Object {
                      "label": "Arabic - United Arab Emirates",
                      "value": "ar-ae",
                    },
                  ]
                }
                name="[object Object].transcript_languages"
              />,
              <Field
                component={[Function]}
                label={
                  <React.Fragment>
                    Length
                  </React.Fragment>
                }
                name="[object Object].weeks_to_complete"
                type="number"
              />,
              <Field
                component={[Function]}
                name="[object Object].staff"
              />,
              <button
                className="btn btn-primary form-submit-btn float-right mt-2"
                type="submit"
              >
                <span>
                  Submit for Review
                </span>
              </button>,
            ],
            "expandedTitle": undefined,
            "iconId": "collapsible-icon-[object Object]",
            "isCollapsible": undefined,
            "isOpen": false,
            "onToggle": [Function],
            "title": <div>
              <span>
                Your new course run
              </span>
            </div>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "format": [Function],
                "label": <React.Fragment>
                  Start date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "[object Object].start",
                "placeholder": "mm/dd/yyyy",
                "required": true,
                "type": "date",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "format": [Function],
                "label": <React.Fragment>
                  End date
                  <span
                    aria-hidden={true}
                    className="required"
                  >
                    *
                  </span>
                </React.Fragment>,
                "name": "[object Object].end",
                "normalize": [Function],
                "placeholder": "mm/dd/yyyy",
                "required": true,
                "type": "date",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Minimum Effort
                </React.Fragment>,
                "name": "[object Object].min_effort",
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Maximum Effort
                </React.Fragment>,
                "name": "[object Object].max_effort",
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Course Pacing
                </React.Fragment>,
                "name": "[object Object].pacing_type",
                "options": Array [
                  Object {
                    "label": "Self-paced",
                    "value": "self_paced",
                  },
                ],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Content Language
                </React.Fragment>,
                "name": "[object Object].content_language",
                "options": Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Transcript Languages",
                "className": "transcript-label",
              },
              "ref": null,
              "rendered": "Transcript Languages",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "languageOptions": Array [
                  Object {
                    "label": "Arabic - United Arab Emirates",
                    "value": "ar-ae",
                  },
                ],
                "name": "[object Object].transcript_languages",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": <React.Fragment>
                  Length
                </React.Fragment>,
                "name": "[object Object].weeks_to_complete",
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "name": "[object Object].staff",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                  Submit for Review
                </span>,
                "className": "btn btn-primary form-submit-btn float-right mt-2",
                "type": "submit",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Submit for Review",
                },
                "ref": null,
                "rendered": "Submit for Review",
                "type": "span",
              },
              "type": "button",
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Collapsible Course Run Fields renders correctly with no fields 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CollapsibleCourseRunFields
    courseRuns={Array []}
    fields={Array []}
    languageOptions={Array []}
    pacingTypeOptions={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [],
    },
    "ref": null,
    "rendered": Array [],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [],
      },
      "ref": null,
      "rendered": Array [],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
